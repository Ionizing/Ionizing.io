{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/2017-7-1/fig1.svg","path":"images/2017-7-1/fig1.svg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/next-boot.js","path":"js/src/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/muse.js","path":"js/src/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"5dfbe71558f8030eff89ab3f39f34d3f7dc339a3","modified":1548042637346},{"_id":"source/CNAME","hash":"5213b9a2e96cef6ecc10fb4fd7fa10b81819f758","modified":1546256845676},{"_id":"themes/next/.all-contributorsrc","hash":"addc24e08548d72c28eec5ce9dc03a834ee7f384","modified":1552224719102},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1552224719103},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1552224719103},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1552224719103},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1552224719103},{"_id":"themes/next/.gitignore","hash":"3558a8b174618c7a643aceb13233edd729813f9a","modified":1552224719105},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1552224719105},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1552224719105},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1552224719105},{"_id":"themes/next/README.md","hash":"53515810f3cacd456dc5145fa99e488ab843059b","modified":1552224719105},{"_id":"themes/next/_config.yml","hash":"f47f3a367019d87362798582a23e99b72c43d9cb","modified":1552225339653},{"_id":"themes/next/bower.json","hash":"1be57277396806031619b0f625cbeba0224a7cb5","modified":1552224719106},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1552224719106},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1552224719112},{"_id":"themes/next/package.json","hash":"f3b4ef65214cec9c37acd10ef080526fb1ea14bb","modified":1552224719138},{"_id":"source/_drafts/.DS_Store","hash":"a2eb92ac96963b9fea750cdab37a5753954a9666","modified":1546256845676},{"_id":"source/_drafts/2019-1-18-Understand-Hatree-Fock.md","hash":"c3d04c4923179aaf04f974440e8d88c93a9847ce","modified":1547882551040},{"_id":"source/_drafts/Quantum-Physics-Learning-Log-2.md","hash":"c23c0c260fc6c4b3a8cefae7f0847e92896b8a02","modified":1546256845677},{"_id":"source/_drafts/calculate-hydrogen-atom-from-zero.md","hash":"fe7d70380df2f906c4fcb2da030479de76bb1dba","modified":1546256845677},{"_id":"source/_drafts/how-to-solve-angular-frequency.md","hash":"85501c3b5aec71b7153d256d5ed89b198a739931","modified":1546256845677},{"_id":"source/_drafts/solve-Schrodinger-equation-in-one-dimension.md","hash":"5fbb117c81c5d1ed113ae8a0040eea6fbcf8304e","modified":1546256845677},{"_id":"source/_posts/.DS_Store","hash":"31610cba1874e65a6d5a5271f917a0f6ff6fcea4","modified":1546256845677},{"_id":"source/_posts/2018-12-31_WAVECAR-parsing.md","hash":"b112bb8ac5aa356bc88e53653a56df9f2530e9c7","modified":1547637589211},{"_id":"source/_posts/2019-1-21-how-to-setup-travis-ci.md","hash":"dc560d4868f4672b16f7a9836a812d054b108d19","modified":1548043393173},{"_id":"source/_posts/PAT题解-B-1035.md","hash":"aff0b0601427a1821e481a8977ea33e834ae872d","modified":1546256845722},{"_id":"source/_posts/Coriolis-Force.md","hash":"53f2ca0402a0265d14abeeee409a644fcd6b6196","modified":1546256845678},{"_id":"source/_posts/PhysChem-Revise-1.md","hash":"3935ce61849f90b64d47af024946469e4998dd14","modified":1546256845723},{"_id":"source/_posts/Quantum-Physics-Learning-Log-1.md","hash":"78827810e0b61ebe6e0c1cb282a36fe0df711404","modified":1546256845723},{"_id":"source/_posts/how-to-solve-matrix-B-in-A-times-B-equals-C.md","hash":"8c6c60ceb57a30a736093183475a5d445b253488","modified":1548433151608},{"_id":"source/_posts/how-to-solve-viberation-1.md","hash":"1362ed204ff6d903bed91b72e09ebc8fad3f7cf0","modified":1546256845723},{"_id":"source/_posts/how-to-struggle-with-vasp.md","hash":"f4ca8f993f256f4abded08d184991e214a09ac4c","modified":1546256845726},{"_id":"source/about/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1546256845727},{"_id":"source/about/index.md","hash":"f465647256abe3c375de3fdfde55780bffdb164f","modified":1546256845727},{"_id":"source/categories/index.md","hash":"fbc6a1b6407790a9500047ae87b88bbc7d73d200","modified":1546256845727},{"_id":"source/tags/index.md","hash":"3f6646b75d49097b05293d24683b188867a2dce4","modified":1546256845728},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1552224719097},{"_id":"themes/next/.git/config","hash":"e2ca9fa6f115d4406d24bf0df53fc26ce13e0c9b","modified":1552224719099},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1552224712699},{"_id":"themes/next/.git/index","hash":"00428977b795068b6fb53b7a603876d4f8342fa2","modified":1552224864398},{"_id":"themes/next/.git/packed-refs","hash":"aa5b8f2489eb733d27a6f59a789d88c58500ab48","modified":1552224719096},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1552224719103},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5c302a07fb24a28a6a3326dc9af3487b90421b1b","modified":1552224719103},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1552224719104},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"492b2c159d871e5b5d4c70d259f36e603afe192d","modified":1552224719104},{"_id":"themes/next/.github/stale.yml","hash":"dbdbc897d0d959b1508c14211240bbfcdd1b7edc","modified":1552224719104},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1552224719106},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1552224719106},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1552224719107},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1552224719107},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1552224719107},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"212a36d57495990b5f56e46ca8dce1d76c199660","modified":1552224719107},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1552224719107},{"_id":"themes/next/docs/MATH.md","hash":"e6023505dcccaef0b856102543585a13fc6af0b1","modified":1552224719108},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1552224719108},{"_id":"themes/next/layout/_layout.swig","hash":"cb92821312d701f951c168ad48d9917c9bbd1367","modified":1552224719117},{"_id":"themes/next/layout/archive.swig","hash":"7e8f3a41a68e912f2b2aaba905d314306ccaf794","modified":1552224719136},{"_id":"themes/next/layout/category.swig","hash":"dda0e6b2139decaf5e865d22ec9d45fdb615a703","modified":1552224719137},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1552224719137},{"_id":"themes/next/layout/page.swig","hash":"d8a6cbf6f611c5d68d5da430cb6dc7010ff2c7e0","modified":1552224719137},{"_id":"themes/next/layout/post.swig","hash":"f74929fd792541916eb25c2addfb35431be071ba","modified":1552224719137},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1552224719137},{"_id":"themes/next/layout/tag.swig","hash":"a6be69a90924c9d2f4d90fb4867234859bd2c2e9","modified":1552224719138},{"_id":"themes/next/languages/de.yml","hash":"9e524b2bdfb848504b93a51c5650e76bba5fa9e0","modified":1552224719112},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1552224719112},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1552224719112},{"_id":"themes/next/languages/fr.yml","hash":"d37a5d82b499a2f082fe9bbf3ad9f11b36b6b837","modified":1552224719113},{"_id":"themes/next/languages/id.yml","hash":"1c4868837f5109f1df863b04fe627352c31d404b","modified":1552224719113},{"_id":"themes/next/languages/it.yml","hash":"b30ff77ad8044e3b021a3b09187cd377dc789fd2","modified":1552224719113},{"_id":"themes/next/languages/ja.yml","hash":"1dc35e436da6214cdb3c2ff44bc4a06d0be5b9a0","modified":1552224719113},{"_id":"themes/next/languages/ko.yml","hash":"20bfaa7600d35235996c18e5c13dcef89c119626","modified":1552224719113},{"_id":"themes/next/languages/nl.yml","hash":"1c44b3cb2f817808607f3bf6ef47f58ce7599995","modified":1552224719114},{"_id":"themes/next/languages/pt-BR.yml","hash":"08b913a5cf4cc160083069cb4dfb2d66eecd1218","modified":1552224719114},{"_id":"themes/next/languages/pt.yml","hash":"8ddac820e2c17b484b56c0da8881e142b10e221b","modified":1552224719114},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1552224719114},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1552224719115},{"_id":"themes/next/languages/uk.yml","hash":"1eb59e581568da9a81d6e20541b4ada5fc1c55c0","modified":1552224719115},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1552224719115},{"_id":"themes/next/languages/vi.yml","hash":"ba7aff8f88e03f69a0acf7f1b90ee03e077ee88e","modified":1552224719115},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1552224719116},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1552224719116},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1552224719139},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1552224719140},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1552224719183},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1552224719183},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1552224719184},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552224719168},{"_id":"source/_posts/Coriolis-Force/Sagiri.jpg","hash":"9487482a1afd9950afa873966c9d981d90257718","modified":1546256845678},{"_id":"source/_posts/Coriolis-Force/fig1.ggb","hash":"53a661e27c39efc0adfbe41139f67bf86f249eba","modified":1546256845696},{"_id":"source/_posts/Coriolis-Force/fig1.png","hash":"585a6530adf1c4fddc913c06eccaae834b5df760","modified":1546256845697},{"_id":"source/_posts/Coriolis-Force/fig2.ggb","hash":"17f1b68399857c67bdd181bbd561bd2db33814f6","modified":1546256845697},{"_id":"source/_posts/Coriolis-Force/fig2.png","hash":"35f34c021f4c31864310ca1e1b4a842c6201caf6","modified":1546256845697},{"_id":"source/_posts/Coriolis-Force/fig2.svg","hash":"105def3bfdbbf5d0ed38a68b94ee0e204b6cc8c9","modified":1546256845697},{"_id":"source/_posts/Coriolis-Force/fig3.ggb","hash":"f4e48c1dcaca0a8fb832a017288ffd73d98a500f","modified":1546256845698},{"_id":"source/_posts/Coriolis-Force/fig3.png","hash":"ebbc22b5e562274ac25dfcd61d054efff186946b","modified":1546256845698},{"_id":"source/_posts/Coriolis-Force/fig4.ggb","hash":"3de20a287bb4c98f7b5c9dd0818387052a763eff","modified":1546256845698},{"_id":"source/_posts/Coriolis-Force/fig4.png","hash":"64c40e0b7e71bda265cf1d9346301511edd29f57","modified":1546256845698},{"_id":"source/_posts/Coriolis-Force/fig5.ggb","hash":"23d6e2b0ccd1fd833a233865fa0212202aa114c7","modified":1546256845699},{"_id":"source/_posts/Coriolis-Force/fig6.ggb","hash":"38d6f1504116699e92d481262beed875d40355e7","modified":1546256845719},{"_id":"source/_posts/Coriolis-Force/fig6_2.pdf","hash":"a34907fe9ee1fc4ffb63e3dd930a411501db9295","modified":1546256845721},{"_id":"source/_posts/Coriolis-Force/fig6_2.svg","hash":"dfe0b3b491a73091eb179d78bda7cd89ade71183","modified":1546256845721},{"_id":"source/_posts/Coriolis-Force/fig6_3.svg","hash":"4b38faa9ad9b773b9878111226e6776defb135b1","modified":1546256845722},{"_id":"source/_posts/Coriolis-Force/fig6_3.pdf","hash":"710dfcec26925b2485a9889aab9565908c99e511","modified":1546256845722},{"_id":"source/_posts/Quantum-Physics-Learning-Log-1/.DS_Store","hash":"ef0b49ffff4cd3af0b74765a420db5a1f1ae2e1b","modified":1546256845723},{"_id":"source/_posts/Quantum-Physics-Learning-Log-1/fig.svg","hash":"340f4f32acc6728db7953fae0e05a2b855b0d1eb","modified":1546256845723},{"_id":"source/_posts/how-to-solve-viberation-1/ex1.aux","hash":"6b43e311dfae9a1bb7e75dbd93f9efc541355db7","modified":1546256845724},{"_id":"source/_posts/how-to-solve-viberation-1/ex1.pdf","hash":"81143413a737502b1cb311ecda3d0759ed6f3d76","modified":1546256845724},{"_id":"source/_posts/how-to-solve-viberation-1/ex1.synctex.gz","hash":"1d4dceaac150816f26ebc4a435cf6824225dee65","modified":1546256845724},{"_id":"source/_posts/how-to-solve-viberation-1/ex1.tex","hash":"e3d6b8e86962cb85e28e80c41a7ab96b257a02aa","modified":1546256845724},{"_id":"source/_posts/how-to-solve-viberation-1/ex2.aux","hash":"6b43e311dfae9a1bb7e75dbd93f9efc541355db7","modified":1546256845725},{"_id":"source/_posts/how-to-solve-viberation-1/ex2.pdf","hash":"5c581fc5abe1943a8a9382ac69f135ee1131a0fa","modified":1546256845725},{"_id":"source/_posts/how-to-solve-viberation-1/ex2.synctex.gz","hash":"a08597bf2b25a82196bf2e4474c756a584b6809d","modified":1546256845725},{"_id":"source/_posts/how-to-solve-viberation-1/ex2.tex","hash":"c5b61592fd9544c3fd02ad3b9f373396369276ad","modified":1546256845725},{"_id":"source/_posts/how-to-solve-viberation-1/vib1.ggb","hash":"4322a112c7fc8cb5a58ce221ffc89f2d328d1135","modified":1546256845725},{"_id":"source/_posts/how-to-solve-viberation-1/vib1.svg","hash":"01d09e1034c9d35e028218f892fdbe68d705b39e","modified":1546256845725},{"_id":"source/_posts/how-to-solve-viberation-1/vib2.ggb","hash":"344ead147ac72d7f43578029967b6a39b6f47bfa","modified":1546256845726},{"_id":"source/_posts/how-to-solve-viberation-1/vib2.svg","hash":"65253cf844905c49fe0fa6ea16f4e38b03389b1e","modified":1546256845726},{"_id":"source/_posts/how-to-struggle-with-vasp/lattice1.ggb","hash":"2aef0a4ba821878c167d3fc04adcda3c808942b6","modified":1546256845727},{"_id":"source/images/2017-7-1/fig1.svg","hash":"340f4f32acc6728db7953fae0e05a2b855b0d1eb","modified":1546256845728},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1552224712700},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1552224712699},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1552224712701},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1552224712702},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1552224712702},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1552224712700},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1552224712702},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1552224712700},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1552224712701},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1552224712701},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1552224712702},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1552224712698},{"_id":"themes/next/.git/logs/HEAD","hash":"1b8841c30890483a8daf2b27de751f9276dff1d3","modified":1552224838112},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c37a60580c901c79ccb22564b228a46e06207445","modified":1552224719104},{"_id":"themes/next/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"57e1e06e845193e80c7df4a4454af28352526f7a","modified":1552224719104},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"07c423cce4157b8e2dbf60907ccbf3f18c4cf98a","modified":1552224719104},{"_id":"themes/next/.github/ISSUE_TEMPLATE/non-english.md","hash":"0b0727ff4d5180ae67f930fb4f8e9488e33eda9f","modified":1552224719104},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1552224719108},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1552224719109},{"_id":"themes/next/docs/ru/README.md","hash":"0430806eebb5a773f53a3d1cc0af8bb12f6334f9","modified":1552224719109},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1552224719109},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1552224719109},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"b218e30df4126b6adc87684775ac4c86ea7f7958","modified":1552224719110},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"b619c87911e112801d899f80fe4ae060bb9cf6a5","modified":1552224719110},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1552224719110},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1552224719110},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"115ffbde2b3ce01ef1f8c2b3833e6f6794650132","modified":1552224719111},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b76ccbc658024e86639cfa5f8a3817647fc8d651","modified":1552224719111},{"_id":"themes/next/docs/zh-CN/README.md","hash":"30fe3217b7605b27b0411cf1b32d53124ec82c2e","modified":1552224719111},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1552224719111},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1552224719116},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1552224719117},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1552224719116},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"89b0a0e64637bf5b0cfea0a23642df3d95eedfa4","modified":1552224719118},{"_id":"themes/next/layout/_macro/post.swig","hash":"f529b3e80cdbb320203085b40e2851d22898f347","modified":1552224719118},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"faaf1085bf526587bece0e531ea5a9d4e9ed322f","modified":1552224719118},{"_id":"themes/next/layout/_partials/comments.swig","hash":"07340f3a4c8d8a9dd491d1eba18d985ecc0855a2","modified":1552224719119},{"_id":"themes/next/layout/_partials/footer.swig","hash":"07f88421bda86d9d5ff32d130b1cb1196b99a326","modified":1552224719119},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"818deb840c91f7ebe8ff558840ca3c1612a3f1fe","modified":1552224719119},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1552224719121},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"06dac109504812b63766a80ede9ddacbd42d227d","modified":1552224719122},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"d66bc7ec3cc03f60fcc7d555368a5b9b010f7f11","modified":1552224719124},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"d359e638a86bd9664101c48e9344f21ec96e6a15","modified":1552224719125},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"82032af75320f496ae40fce5d0781e05eb96453c","modified":1552224719125},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1552224719125},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"1b250c1b7945cb1029b9e855edb09854f7c8250a","modified":1552224719127},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c4c58ea2bd4cf10372a5e46dbec1b9a2e0e69f0f","modified":1552224719127},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"4ccf2abbfd070874265b0436a3eff21f7c998dfb","modified":1552224719131},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"10b61a8bac671e375916a4d234c120117098a78f","modified":1552224719131},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"da413e6671c2e24ac0c41ccc18409898c1164da2","modified":1552224719133},{"_id":"themes/next/layout/_third-party/mermaid.swig","hash":"d6e6ddda836bd9e2e8d9767a910c7d3280080e81","modified":1552224719134},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"2c4a66be4677d3e4dec3f169ac8a769098dad1fe","modified":1552224719134},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"c28f9dc96ab735daeb7f599f86470aa5a83c03cf","modified":1552224719134},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"a4de14b5d1dbf0a290264248144d723a25626a8b","modified":1552224719135},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5db80e8d7ea3f29e998320f79508f7e14342a33c","modified":1552224719135},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"cbe40cb67dad15ade967b0f396c1a95b6871f76a","modified":1552224719135},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"2398e5cd0cb466953b6e7a42c2b2caddebf3c348","modified":1552224719135},{"_id":"themes/next/scripts/filters/exturl.js","hash":"79ad823ca803cb00e0bfc648aa6c9d59711e0519","modified":1552224719138},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1552224719139},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1552224719139},{"_id":"themes/next/scripts/tags/button.js","hash":"279a04037fce9b5e3cc55aef0581cd34172aea98","modified":1552224719140},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1552224719140},{"_id":"themes/next/scripts/tags/exturl.js","hash":"e3854f1951e6295220f94bd9d3eafe5364491390","modified":1552224719140},{"_id":"themes/next/scripts/tags/full-image.js","hash":"6dc82ae9df2341d9c7bd05eacb5cf90208c2a44c","modified":1552224719140},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"46bac5a4cf7821e37b548f7ed22c83aeae321857","modified":1552224719141},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1552224719141},{"_id":"themes/next/scripts/tags/label.js","hash":"64e6f95e2ccde49413bb5a8d2926f6df2f9a670a","modified":1552224719141},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"d007598ab83babcff824bb44a2e858ef6537f627","modified":1552224719141},{"_id":"themes/next/scripts/tags/note.js","hash":"84ce2d2c0646baafc82083e261b093b1c515f63c","modified":1552224719142},{"_id":"themes/next/scripts/tags/pdf.js","hash":"ebd903785b4fd9163c58fef3707fb28eda6dc8e6","modified":1552224719142},{"_id":"themes/next/scripts/tags/tabs.js","hash":"8b1e9043db8f19ea4a12c473b3f729bd3b5bcb0e","modified":1552224719142},{"_id":"themes/next/scripts/tags/video.js","hash":"2a4d5bfc5318f66887936c51f54088f7611e686f","modified":1552224719142},{"_id":"themes/next/source/css/main.styl","hash":"e010ec8ac73268a0f137204c89e0080ab8d59b3d","modified":1552224719168},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1552224719168},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1552224719168},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1552224719169},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1552224719169},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1552224719169},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1552224719169},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1552224719170},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1552224719170},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1552224719170},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1552224719170},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1552224719170},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1552224719171},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1552224719171},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1552224719171},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1552224719171},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1552224719171},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1552224719171},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1552224719172},{"_id":"source/_posts/Coriolis-Force/fig5.png","hash":"2e6a309ad30e43be3a338ad9ea09a88949cea19c","modified":1546256845719},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552224719161},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552224719161},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552224719162},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552224719167},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552224719168},{"_id":"source/_posts/Coriolis-Force/fig6_1.png","hash":"e14d92f9475048343e813ab265520e11f93428a3","modified":1546256845720},{"_id":"themes/next/.git/refs/heads/master","hash":"5c5b2ea8959be9087530dda63ccd1508b089cfcb","modified":1552224719098},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1552224719117},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"fb33f499022cd02722f834fcef1a0e193362cfde","modified":1552224719117},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"fc6bafc8c633afadc538c5afa5620ea2a1cdcb84","modified":1552224719119},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"dc53a41196b675268bfd2a944f6258c57ed44e91","modified":1552224719120},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"2201b04e371b63f3b470d3d6a07f3bf38e7bd82d","modified":1552224719120},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"648bf7eda66629592cb915c4004534b3913cbc22","modified":1552224719120},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1552224719120},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"71af31fea5913fd30c233e555ef13cf2c9768f72","modified":1552224719121},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"5adc60100e129c1d0307bdcaa0c7b8e8375a6ea4","modified":1552224719121},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"69722be16ce5eae5c027168f9b2fded4776e1b53","modified":1552224719121},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"2940df694fff28e8bf71b6546b4162f1e38227db","modified":1552224719121},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"3615db591dd910fb9fa96542734c7ec0ef05019c","modified":1552224719122},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"eea95b785c9c36d28e1839619793f66e89773bee","modified":1552224719122},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"c33691d9b4ff3a69603ad04c9ab264eb68ea43a9","modified":1552224719122},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"ef11b5be5bfb2f0affe82cf521c002b37fef9819","modified":1552224719123},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1552224719123},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"7d1693416a5dc098f4723a53da2e2d1fc2d6e075","modified":1552224719123},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1552224719123},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a5587bd1f60d35e58618576cec45e662aa44ea1f","modified":1552224719124},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1552224719124},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"6f181cc188ecbe5e607fd989756e470d4cb9765d","modified":1552224719124},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"c7f2855f19dfdf18aba8c58d55b7489e631ed035","modified":1552224719125},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1552224719126},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1552224719126},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"be24f204a515d5211bf3ba98a030e3bf61d4cc16","modified":1552224719126},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"94e106755c5fb6f40431b621beeba0bd33877e57","modified":1552224719127},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"a5723950c343d220270bfd27bd30050eda6c3fb3","modified":1552224719127},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"798d67e4a736613ab899eabe6529091bbcda7850","modified":1552224719128},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"591b2ccd9713ccb922b9fcf5e278b6de9c5ec30b","modified":1552224719128},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"8eadb929c9e50e58502ccad2dc2657746f8c592a","modified":1552224719128},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"08cd47ef8572121b7811342d3c9a84a338a18191","modified":1552224719128},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"050ea01f25cfe492be9bb77b409644d623fdf2dc","modified":1552224719128},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1552224719129},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"d422beaf35a5d2646feaa098bc3e5adf691c7565","modified":1552224719129},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"4a966b7ffe2d80ff1b3dd0fd14b355766dc5c70f","modified":1552224719129},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1552224719129},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c754f699c90f6278b9159eff1855c17bc713ee96","modified":1552224719130},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"f240a50cd9b627620d9a374a29cf95f0c5e99d7c","modified":1552224719130},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"92e04a2b9e0c3df594bc22235d1894e5ad458dfc","modified":1552224719130},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"0dd5b315d1da55dbfc10f51a1f8952f72eba2720","modified":1552224719130},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"3533167c4295637b91d90f3bae7c651cd128bb6e","modified":1552224719131},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"3cfeafefc672d9a7704650ebfb2f9d8668b38d9a","modified":1552224719132},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"dbe94dd94678ee8e4002b06bb1e9ead2e59e44bf","modified":1552224719132},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"e8f91c571ceb4b80aafebc4d36b89fb41b1ae040","modified":1552224719132},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"a4ab8095bf60def5823bf6b7b91a92a356a4c098","modified":1552224719132},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5856d5f701e51dfae1fd6fb486cefde67effd555","modified":1552224719133},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"210f0c152bc4a9375ed364398ce309f09ebafd10","modified":1552224719133},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a7e304b05a44279d3e4f611908d7faef9dc14d7c","modified":1552224719133},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"c2cb2f384bc30d31cdccf9794a729c03e687b45c","modified":1552224719134},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"c6ebf54c78cdfb68841cda28d7544211d9bd0f69","modified":1552224719134},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"cd86bed852fec6e6933898067122a03755bc17f0","modified":1552224719136},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"ea94aa85034c6d1b6bb865aecea55c73f8a14501","modified":1552224719136},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b3eaab6a269aa3fcbafe24fd06f0c9206dc12716","modified":1552224719136},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1552224719161},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1552224719161},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1552224719162},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"086f5979b3de091c3378512e6c5c2f8fcb4f6298","modified":1552224719162},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"a8aa41625b94cf17a7f473ed10dcbe683b1db705","modified":1552224719167},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1552224719167},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"fc15e277d1504532a09b7b1bd31f900ad95ec4b8","modified":1552224719167},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1552224719172},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1552224719172},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1552224719172},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1552224719173},{"_id":"themes/next/source/js/src/motion.js","hash":"7933a30382a84b655238f6e78d42ea1b99af4de6","modified":1552224719173},{"_id":"themes/next/source/js/src/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1552224719173},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1552224719173},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1552224719174},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1552224719174},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1552224719175},{"_id":"themes/next/source/js/src/utils.js","hash":"703375f367acfbd0596733c34437d1b2681abf72","modified":1552224719175},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1552224719175},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1552224719175},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1552224719176},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1552224719176},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1552224719182},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1552224719183},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1552224719183},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d0e97b205d3320421c380f2eee445457430c8152","modified":1552224719168},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1552224719180},{"_id":"source/_posts/2018-12-31_WAVECAR-parsing/a.png","hash":"ee58d9e5d31b338be87fa4ba64e2bb7096e75453","modified":1546258453592},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"1b8841c30890483a8daf2b27de751f9276dff1d3","modified":1552224838113},{"_id":"themes/next/.git/objects/pack/pack-66b2cdc0d416edc1f738c9a40a6d56584d8015a5.idx","hash":"774fe2d9d48b77467be85ff884fdecb3c0f650fc","modified":1552224719087},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1552224719097},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"837ff3718cb5a63eb01a451e35989fd1dfe4218c","modified":1552224719143},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b21843ae3cde2ae4eaea74df04fe710713ae1489","modified":1552224719143},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1552224719144},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1552224719144},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"71c34dc5f1a9c8b1c76cf9b0b86baf24af7f7232","modified":1552224719144},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1552224719149},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1552224719156},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7e51ea64611ab5d678c112b4688d4db4fd2737e2","modified":1552224719160},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"eb9d81bcf70357b14822e35a2834805c1b5451e4","modified":1552224719160},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"4fd38490b01af4f977b53aefc433cd2f981cde14","modified":1552224719160},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"e3ad313825d7ad03e24bb76d036deeb50587022b","modified":1552224719160},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1552224719160},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1552224719161},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"6f1a0fe6b45eb8849114b8b60ba600767d08b6df","modified":1552224719161},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"9a5e3c6da76f6d5bed70c38fdf5796faa759d473","modified":1552224719162},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1552224719163},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"fe03041c387347e0bcf8efd1b4cf205ece66c339","modified":1552224719163},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1552224719163},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"fe2dc74726a515549956d233becda188da64f948","modified":1552224719163},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa33213aceed7bf4bf25437ca9c1a00f7734ae65","modified":1552224719163},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"a5bef4fdde80951f3b8c154d79cb1e581638a988","modified":1552224719163},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"2dd866817d0bc7d179e81855f8fbcbb5d3c883fc","modified":1552224719164},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1552224719164},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"fc160583f742c94316a0fee05c18468033173534","modified":1552224719165},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"936132428a0d35b3947ccedd4c379940abcf223a","modified":1552224719165},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"a5bef4fdde80951f3b8c154d79cb1e581638a988","modified":1552224719165},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1552224719165},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"09b5054ae34ba83c0d614821e574da265af55a14","modified":1552224719166},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"9b076c92abdadcf9acee75da64592ff3badd69b8","modified":1552224719166},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"74c7dccf0a3ee9fc2ca25ad8e998243191813a0e","modified":1552224719166},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1552224719166},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"582181cf978a15b6847163abe812834ab58a9e92","modified":1552224719166},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5b936dddb7b4de4720cd1e8428b30a2f06d63fb","modified":1552224719166},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1552224719167},{"_id":"themes/next/source/js/src/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1552224719174},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1552224719174},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1552224719176},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1552224719176},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1552224719177},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1552224719179},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1552224719179},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"1b8841c30890483a8daf2b27de751f9276dff1d3","modified":1552224838111},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"9e0f215868df17cb27a4a522fd31156c66428c2d","modified":1552224719145},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"6c4990d375b640ee4551e62c48c1cbe4c3d62212","modified":1552224719145},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1552224719145},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"05e68adae13f4d99a6ac6493daab39c92e39a6bd","modified":1552224719146},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1552224719146},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"c0d9e18a9210fdcaf33e488518b3b288eb58c0a1","modified":1552224719146},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4cfeec9434a72d5efc6ca225d3445d084d4590f7","modified":1552224719144},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"71d8d1cc22a2a7627a6db7240f0c4902a14f9bea","modified":1552224719146},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e9dd8de7d98f1478ac7d351624fffd3d8738c905","modified":1552224719147},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1552224719147},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"6904fd7ea6455e008d9884558b68254608af9a3c","modified":1552224719147},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"2d142c6f39853916256ad8fc79eb6b85f4001ae8","modified":1552224719148},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1552224719148},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1552224719148},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1552224719148},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"61af2f656f6e916f9920277bd048c5d58ff32a60","modified":1552224719149},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1552224719149},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"3b5a37ba5e70f92c1ee707c8053524e38adbb710","modified":1552224719150},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1552224719150},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"300491cf0e80c34faf5f83a2846c177759ac653f","modified":1552224719150},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"2bbdf4b59117b54482dda6ea82a5286c8a3fe267","modified":1552224719150},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0bf899fab331add63f0c8ead31ca3a3db2ad74d9","modified":1552224719151},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"42a0769311856a7ea3ede1c8656fb5646994a238","modified":1552224719151},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"1cf64afd4b49143972f7617869539be3adb91a5e","modified":1552224719151},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"0e8294d042d7d28c680ead48baa9e3c777d407c5","modified":1552224719151},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"b5e5aa7074a965e396229c5bd263fb406770ce5f","modified":1552224719152},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1552224719152},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1552224719152},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1552224719153},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1552224719153},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"a6c24393dffbdd94dd5c01cdbec5e180b0bfbbbd","modified":1552224719153},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"3039df53b94b0847b0c451d2d227270b479cc184","modified":1552224719153},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1552224719154},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"cee0e70d1a6ea963bfd707bf9cedb8a4637f64c2","modified":1552224719154},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"b34bb2ea4d16e47e6fdc06cd4feb32d93ccbd779","modified":1552224719154},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"f9837075189e37c100675211076b5053788e7ba5","modified":1552224719154},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"b05d7e8c387ba60c2abf16121b97cfb2548dcb85","modified":1552224719155},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"9a3bfc878ca797946815bed23cd6f92b24a16358","modified":1552224719155},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"671a7f8aa138259172e7c6268d82d7a62a1e036a","modified":1552224719155},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"9ab4e05e7b78af755ebdcbb71731fd723ed2d7f5","modified":1552224719155},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"e7e064bfe8ff9b9f172a9662662380b4c6699d6e","modified":1552224719156},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"01820d3ffd007eb46a9cbe2ddb251aaa7f70b73e","modified":1552224719156},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1552224719156},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1552224719156},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1552224719157},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1552224719157},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"070251836b57027c8240c51e41cb8e8c999c4525","modified":1552224719157},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"0e760758221d4919902bda7c4d3bb96c94a678db","modified":1552224719157},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"75f7876136fe1cae9b42d2c220e7f8b37b8d2f55","modified":1552224719157},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"a1802f821629a52df970c4c2992fc319bb647fee","modified":1552224719158},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"7d2222f66a1c1a0a3cc90bfd5d817d9b859f4a68","modified":1552224719158},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"ac7753d536341aa824d7bce0332735e838916995","modified":1552224719158},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"c415729e0f0d2439e63b93cec7ae32df54db87b4","modified":1552224719158},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"7059e24235b7c57a07f3f8abaa06b0bd6a7eda2f","modified":1552224719159},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1552224719159},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1552224719159},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"2d4f318644bf37c50e5b1fab8d62b2673fbab9e8","modified":1552224719159},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"190ad18f45b8a69cef13b2fdd2254893d06ec2c3","modified":1552224719159},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1552224719164},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1552224719164},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1552224719166},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1552224719182},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1552224719178},{"_id":"source/_posts/Coriolis-Force/animated.gif","hash":"341a59cdf86c0b674aea57a89a660c31099d17f6","modified":1546256845696},{"_id":"source/_posts/Coriolis-Force/fig5.gif","hash":"6620991bce153782b46e3d3b404dca7adaeb0db7","modified":1546256845718},{"_id":"themes/next/.git/objects/pack/pack-66b2cdc0d416edc1f738c9a40a6d56584d8015a5.pack","hash":"a4ad221272dee5b5f1dde15cd344257f55af3680","modified":1552224719085},{"_id":"public/about/index.html","hash":"0379e432cb5935fb3e88275d634718ee5f429b3f","modified":1552225347444},{"_id":"public/categories/index.html","hash":"004e0c22c917d910a101ca86937361a9d00eed9f","modified":1552225347444},{"_id":"public/tags/index.html","hash":"7242abaaeae1ecab8263c160242c11d4de914cd7","modified":1552225347444},{"_id":"public/2019/01/25/how-to-solve-matrix-B-in-A-times-B-equals-C/index.html","hash":"2535704967c0e7d863bd6abc23a87acfaf494cfe","modified":1552225347444},{"_id":"public/2019/01/21/2019-1-21-how-to-setup-travis-ci/index.html","hash":"2df007527db32ac60829879d60158a4715af2b4f","modified":1552225347444},{"_id":"public/2018/12/31/2018-12-31_WAVECAR-parsing/index.html","hash":"a11a58898d5495530bda83d921773fd4f5176f44","modified":1552225347444},{"_id":"public/2018/03/28/how-to-struggle-with-vasp/index.html","hash":"0a13054380c07b234e06f638c538d5c60ee1b36f","modified":1552225347444},{"_id":"public/2017/09/30/how-to-solve-viberation-1/index.html","hash":"b0e637de2d61319275683a150010730803b7837e","modified":1552225347444},{"_id":"public/2017/08/23/Coriolis-Force/index.html","hash":"d3c9cade961f7e75aabf6221c17ff2273dbfad8f","modified":1552225347444},{"_id":"public/2017/06/30/Quantum-Physics-Learning-Log-1/index.html","hash":"7480df6ef3a134aa07233b7cb4ca18f7dd429385","modified":1552225347445},{"_id":"public/2017/06/26/PhysChem-Revise-1/index.html","hash":"f46b0a93919aa7efb38cf5129d1a3933a56270e4","modified":1552225347445},{"_id":"public/2017/06/22/PAT题解-B-1035/index.html","hash":"3159dd539676000c482d29a723013e55adb15709","modified":1552225347445},{"_id":"public/archives/index.html","hash":"02f755ab1b71b155475e2974ebd78da326694df5","modified":1552225347445},{"_id":"public/archives/2017/index.html","hash":"f7aa582d97e54d794fe13df6074fcb4a4b053e1d","modified":1552225347445},{"_id":"public/archives/2017/06/index.html","hash":"7d02c705d9e72fbf9e031c2dcd1d68f24d762c7e","modified":1552225347445},{"_id":"public/archives/2017/08/index.html","hash":"7a41f76feb3e01a60cfc444a1b83621f481b938b","modified":1552225347442},{"_id":"public/archives/2017/09/index.html","hash":"9b1d7e1cb7fc9454ecdf3ea734be22700da625d2","modified":1552225347442},{"_id":"public/archives/2018/index.html","hash":"13f5f01ee92ec441cbde5fc12693371450937ec0","modified":1552225347442},{"_id":"public/archives/2018/03/index.html","hash":"5dbc9486e6136a94fe1ce30d62b783a0bc892e0e","modified":1552225347442},{"_id":"public/archives/2018/12/index.html","hash":"569845a0a383d25a15a62c2fcddf958eaaac6785","modified":1552225347442},{"_id":"public/archives/2019/index.html","hash":"f12e0f2232f7383c71e44fac6adafa1900efbe25","modified":1552225347442},{"_id":"public/archives/2019/01/index.html","hash":"1486a848c40e7a15aace1b435e867e470bb77411","modified":1552225347442},{"_id":"public/categories/Quantum-Mechanics/index.html","hash":"a4ed1da5bb71164563dd52d786f8a75725227ce2","modified":1552225347442},{"_id":"public/categories/Physics/index.html","hash":"c1347584a3dda3f20afda3403903e1bc7f513683","modified":1552225347442},{"_id":"public/categories/First-Principle/index.html","hash":"2dbf905f51b7053dba652ea4caf2efc8e67e9832","modified":1552225347442},{"_id":"public/categories/Data-Structure-Algorithm/index.html","hash":"afb67e4e94af6b80318b915ba5cbc9c1d526ccf7","modified":1552225347443},{"_id":"public/categories/Physical-Chemistry/index.html","hash":"8958862d263de9125703430f28eb9918fa5798fd","modified":1552225347443},{"_id":"public/categories/First-Principle-Calculation/index.html","hash":"f55833c972d3668bf1508dd0eb4543037f78f8d9","modified":1552225347443},{"_id":"public/index.html","hash":"a20027fdee2521254ed62e255225e174a4aed630","modified":1552225347445},{"_id":"public/tags/量子力学/index.html","hash":"bb8eef522c2b1df8090af20a8d082cef54af39a5","modified":1552225347443},{"_id":"public/tags/物理学/index.html","hash":"4952b5cd2cee4498482ad50d43306a1d7e837968","modified":1552225347443},{"_id":"public/tags/振动/index.html","hash":"227a86dfbb5dd9f67fe3d0838d0adfc991d376b1","modified":1552225347443},{"_id":"public/tags/cpp/index.html","hash":"b6cf7580f63fca6c042f10e1c335337fc978fb3b","modified":1552225347443},{"_id":"public/tags/travis-ci/index.html","hash":"2358d9ca1efef3adbc65e5ac1478f0c9c175a5e4","modified":1552225347443},{"_id":"public/tags/Linear-Algebra/index.html","hash":"c72c7222c5a1f7e204cf5edf7108ab517868f5d7","modified":1552225347443},{"_id":"public/tags/VASP/index.html","hash":"5d5fd4c4559e978e3f517fa9dd6b07e04bf3971f","modified":1552225347445},{"_id":"public/tags/OUTCAR/index.html","hash":"6a639c164b8cef97db864769420a16c68990782a","modified":1552225347443},{"_id":"public/tags/C/index.html","hash":"7fb0bce028ea93e604a24db889b8daba3debda66","modified":1552225347443},{"_id":"public/tags/WAVECAR/index.html","hash":"c23b171368a1340c7fd541aa58180c9324865d56","modified":1552225347443},{"_id":"public/tags/PAT/index.html","hash":"65787aebcfe6ee60d8e5a9ad1be58daba4479ae1","modified":1552225347443},{"_id":"public/tags/排序/index.html","hash":"0ec04ad4052e65e913ad57ba5f57d821ad33e1a5","modified":1552225347443},{"_id":"public/tags/经典力学/index.html","hash":"741a67b7a3c75bf912d5776f3edc75bf415fda6c","modified":1552225347443},{"_id":"public/tags/科里奥利力/index.html","hash":"9632154a02ce47459d5d71a7eff4bd72404853d4","modified":1552225347443},{"_id":"public/tags/物理化学/index.html","hash":"6135c7ff7390beb0d5359c6e53e3ac9a77a8207c","modified":1552225347443},{"_id":"public/tags/化学/index.html","hash":"fac60d10968b1a5ae08aab97f5ac85f51b2e3762","modified":1552225347444},{"_id":"public/tags/线性代数/index.html","hash":"358bbb00da75f5f43a45af07ce60ff15d0cf1f6a","modified":1552225347444},{"_id":"public/tags/数学基础/index.html","hash":"e1a5aa780954713394a7b9b73d378200c0176533","modified":1552225347444},{"_id":"public/tags/物理/index.html","hash":"89f32f19295850b43455edcffb4733e8eab3e0ac","modified":1552225347444},{"_id":"public/CNAME","hash":"5213b9a2e96cef6ecc10fb4fd7fa10b81819f758","modified":1552224746661},{"_id":"public/images/2017-7-1/fig1.svg","hash":"340f4f32acc6728db7953fae0e05a2b855b0d1eb","modified":1552224746661},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1552224746661},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1552224746661},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1552224746661},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1552224746661},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1552224746661},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1552224746661},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1552224746661},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1552224746661},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1552224746661},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1552224746661},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1552224746661},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1552224746661},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1552224746661},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1552224746661},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1552224746661},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1552224746662},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1552224746662},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1552224746662},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1552224746662},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1552224746662},{"_id":"public/2017/06/30/Quantum-Physics-Learning-Log-1/fig.svg","hash":"340f4f32acc6728db7953fae0e05a2b855b0d1eb","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/ex1.aux","hash":"6b43e311dfae9a1bb7e75dbd93f9efc541355db7","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/ex1.pdf","hash":"81143413a737502b1cb311ecda3d0759ed6f3d76","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/ex1.synctex.gz","hash":"1d4dceaac150816f26ebc4a435cf6824225dee65","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/ex1.tex","hash":"e3d6b8e86962cb85e28e80c41a7ab96b257a02aa","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/ex2.aux","hash":"6b43e311dfae9a1bb7e75dbd93f9efc541355db7","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/ex2.pdf","hash":"5c581fc5abe1943a8a9382ac69f135ee1131a0fa","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/ex2.synctex.gz","hash":"a08597bf2b25a82196bf2e4474c756a584b6809d","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/ex2.tex","hash":"c5b61592fd9544c3fd02ad3b9f373396369276ad","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/vib1.ggb","hash":"4322a112c7fc8cb5a58ce221ffc89f2d328d1135","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/vib2.ggb","hash":"344ead147ac72d7f43578029967b6a39b6f47bfa","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/vib1.svg","hash":"01d09e1034c9d35e028218f892fdbe68d705b39e","modified":1552224746662},{"_id":"public/2017/09/30/how-to-solve-viberation-1/vib2.svg","hash":"65253cf844905c49fe0fa6ea16f4e38b03389b1e","modified":1552224746662},{"_id":"public/2017/08/23/Coriolis-Force/fig1.ggb","hash":"53a661e27c39efc0adfbe41139f67bf86f249eba","modified":1552224746662},{"_id":"public/2017/08/23/Coriolis-Force/Sagiri.jpg","hash":"9487482a1afd9950afa873966c9d981d90257718","modified":1552224746662},{"_id":"public/2017/08/23/Coriolis-Force/fig1.png","hash":"585a6530adf1c4fddc913c06eccaae834b5df760","modified":1552224746662},{"_id":"public/2017/08/23/Coriolis-Force/fig2.ggb","hash":"17f1b68399857c67bdd181bbd561bd2db33814f6","modified":1552224746662},{"_id":"public/2017/08/23/Coriolis-Force/fig2.svg","hash":"105def3bfdbbf5d0ed38a68b94ee0e204b6cc8c9","modified":1552224746662},{"_id":"public/2017/08/23/Coriolis-Force/fig3.ggb","hash":"f4e48c1dcaca0a8fb832a017288ffd73d98a500f","modified":1552224746662},{"_id":"public/2017/08/23/Coriolis-Force/fig3.png","hash":"ebbc22b5e562274ac25dfcd61d054efff186946b","modified":1552224746663},{"_id":"public/2017/08/23/Coriolis-Force/fig2.png","hash":"35f34c021f4c31864310ca1e1b4a842c6201caf6","modified":1552224746663},{"_id":"public/2017/08/23/Coriolis-Force/fig4.ggb","hash":"3de20a287bb4c98f7b5c9dd0818387052a763eff","modified":1552224746663},{"_id":"public/2017/08/23/Coriolis-Force/fig4.png","hash":"64c40e0b7e71bda265cf1d9346301511edd29f57","modified":1552224746663},{"_id":"public/2017/08/23/Coriolis-Force/fig5.ggb","hash":"23d6e2b0ccd1fd833a233865fa0212202aa114c7","modified":1552224746663},{"_id":"public/2017/08/23/Coriolis-Force/fig6_2.pdf","hash":"a34907fe9ee1fc4ffb63e3dd930a411501db9295","modified":1552224746663},{"_id":"public/2017/08/23/Coriolis-Force/fig6.ggb","hash":"38d6f1504116699e92d481262beed875d40355e7","modified":1552224746663},{"_id":"public/2017/08/23/Coriolis-Force/fig6_2.svg","hash":"dfe0b3b491a73091eb179d78bda7cd89ade71183","modified":1552224746663},{"_id":"public/2017/08/23/Coriolis-Force/fig6_3.svg","hash":"4b38faa9ad9b773b9878111226e6776defb135b1","modified":1552224746663},{"_id":"public/2018/03/28/how-to-struggle-with-vasp/lattice1.ggb","hash":"2aef0a4ba821878c167d3fc04adcda3c808942b6","modified":1552224746663},{"_id":"public/2017/08/23/Coriolis-Force/fig6_3.pdf","hash":"710dfcec26925b2485a9889aab9565908c99e511","modified":1552224746663},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1552224747008},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1552224747008},{"_id":"public/2017/08/23/Coriolis-Force/fig5.png","hash":"2e6a309ad30e43be3a338ad9ea09a88949cea19c","modified":1552224747009},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1552224747014},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1552224747014},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1552224747014},{"_id":"public/js/src/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1552224747014},{"_id":"public/js/src/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1552224747014},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1552224747015},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1552224747015},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1552224747015},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1552224747015},{"_id":"public/js/src/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1552224747016},{"_id":"public/js/src/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1552224747016},{"_id":"public/css/main.css","hash":"67f1df4c010d7401e1e8e73b4a31a5ba1582c929","modified":1552224747016},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1552224747016},{"_id":"public/2017/08/23/Coriolis-Force/fig6_1.png","hash":"e14d92f9475048343e813ab265520e11f93428a3","modified":1552224747016},{"_id":"public/js/src/motion.js","hash":"7933a30382a84b655238f6e78d42ea1b99af4de6","modified":1552224747021},{"_id":"public/js/src/utils.js","hash":"703375f367acfbd0596733c34437d1b2681abf72","modified":1552224747021},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1552224747021},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1552224747026},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1552224747030},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1552224747030},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1552224747030},{"_id":"public/2018/12/31/2018-12-31_WAVECAR-parsing/a.png","hash":"ee58d9e5d31b338be87fa4ba64e2bb7096e75453","modified":1552224747030},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1552224747069},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1552224747079},{"_id":"public/2017/08/23/Coriolis-Force/animated.gif","hash":"341a59cdf86c0b674aea57a89a660c31099d17f6","modified":1552224747087},{"_id":"public/2017/08/23/Coriolis-Force/fig5.gif","hash":"6620991bce153782b46e3d3b404dca7adaeb0db7","modified":1552224747093}],"Category":[{"name":"Quantum Mechanics","_id":"cjt2yjb5y0004zq4il42ivp00"},{"name":"Physics","_id":"cjt2yjb66000fzq4i90zp1g5z"},{"name":"First Principle","_id":"cjt2yjbbq001dzq4if4yk6xn2"},{"name":"Data Structure & Algorithm","_id":"cjt2yjbbu001izq4i4xva7mb2"},{"name":"Physical Chemistry","_id":"cjt2yjbbw001nzq4idexdtfx9"},{"name":"First Principle Calculation","_id":"cjt2yjbcv002jzq4ih5scbn7k"}],"Data":[],"Page":[{"title":"关于","date":"2017-06-22T09:35:05.000Z","type":"about","comments":0,"_content":"\n# 关于本渣\n即将毕业去搬砖的伪化生，就读于帝国能源男子高中应用化学专业。\n\n# 计算机\n曾梦想成为一名黑客，现在只是想低调地搬砖写代码。`C++`、`MATLAB`、`Mathematica`入门水平。\n\n酷爱折腾，并无数次拆开手机更换零件；也喜欢折腾电脑工作环境。忠实的`Vim`党、大括号不换行党以及驼峰党。\n\n正版 `Micro$oft Window$` 的受害者以及 `Arch Linux` 的受益者。\n\n# 化学\n有机化学学渣，物理化学学渣。　嗯，还是众多具有帝国能源男子高中特色课程的学渣。\n\n# 职业生涯\n未来只想低调做科研，少装X，多做事。\n\n# 为什么没有贴出头像？\n因为太丑。\n\n# 联系方式\nEmail: `PeterSmith_9@outlook.com`","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2017-06-22 17:35:05\ntype: \"about\"\ncomments: false\n---\n\n# 关于本渣\n即将毕业去搬砖的伪化生，就读于帝国能源男子高中应用化学专业。\n\n# 计算机\n曾梦想成为一名黑客，现在只是想低调地搬砖写代码。`C++`、`MATLAB`、`Mathematica`入门水平。\n\n酷爱折腾，并无数次拆开手机更换零件；也喜欢折腾电脑工作环境。忠实的`Vim`党、大括号不换行党以及驼峰党。\n\n正版 `Micro$oft Window$` 的受害者以及 `Arch Linux` 的受益者。\n\n# 化学\n有机化学学渣，物理化学学渣。　嗯，还是众多具有帝国能源男子高中特色课程的学渣。\n\n# 职业生涯\n未来只想低调做科研，少装X，多做事。\n\n# 为什么没有贴出头像？\n因为太丑。\n\n# 联系方式\nEmail: `PeterSmith_9@outlook.com`","updated":"2018-12-31T11:47:25.727Z","path":"about/index.html","layout":"page","_id":"cjt2yjb5w0001zq4i4bk2ppwj","content":"<h1 id=\"关于本渣\"><a href=\"#关于本渣\" class=\"headerlink\" title=\"关于本渣\"></a>关于本渣</h1><p>即将毕业去搬砖的伪化生，就读于帝国能源男子高中应用化学专业。</p>\n<h1 id=\"计算机\"><a href=\"#计算机\" class=\"headerlink\" title=\"计算机\"></a>计算机</h1><p>曾梦想成为一名黑客，现在只是想低调地搬砖写代码。<code>C++</code>、<code>MATLAB</code>、<code>Mathematica</code>入门水平。</p>\n<p>酷爱折腾，并无数次拆开手机更换零件；也喜欢折腾电脑工作环境。忠实的<code>Vim</code>党、大括号不换行党以及驼峰党。</p>\n<p>正版 <code>Micro$oft Window$</code> 的受害者以及 <code>Arch Linux</code> 的受益者。</p>\n<h1 id=\"化学\"><a href=\"#化学\" class=\"headerlink\" title=\"化学\"></a>化学</h1><p>有机化学学渣，物理化学学渣。　嗯，还是众多具有帝国能源男子高中特色课程的学渣。</p>\n<h1 id=\"职业生涯\"><a href=\"#职业生涯\" class=\"headerlink\" title=\"职业生涯\"></a>职业生涯</h1><p>未来只想低调做科研，少装X，多做事。</p>\n<h1 id=\"为什么没有贴出头像？\"><a href=\"#为什么没有贴出头像？\" class=\"headerlink\" title=\"为什么没有贴出头像？\"></a>为什么没有贴出头像？</h1><p>因为太丑。</p>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><p>Email: <a href=\"mailto:`PeterSmith_9@outlook.com\" target=\"_blank\" rel=\"noopener\">`PeterSmith_9@outlook.com</a>`</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关于本渣\"><a href=\"#关于本渣\" class=\"headerlink\" title=\"关于本渣\"></a>关于本渣</h1><p>即将毕业去搬砖的伪化生，就读于帝国能源男子高中应用化学专业。</p>\n<h1 id=\"计算机\"><a href=\"#计算机\" class=\"headerlink\" title=\"计算机\"></a>计算机</h1><p>曾梦想成为一名黑客，现在只是想低调地搬砖写代码。<code>C++</code>、<code>MATLAB</code>、<code>Mathematica</code>入门水平。</p>\n<p>酷爱折腾，并无数次拆开手机更换零件；也喜欢折腾电脑工作环境。忠实的<code>Vim</code>党、大括号不换行党以及驼峰党。</p>\n<p>正版 <code>Micro$oft Window$</code> 的受害者以及 <code>Arch Linux</code> 的受益者。</p>\n<h1 id=\"化学\"><a href=\"#化学\" class=\"headerlink\" title=\"化学\"></a>化学</h1><p>有机化学学渣，物理化学学渣。　嗯，还是众多具有帝国能源男子高中特色课程的学渣。</p>\n<h1 id=\"职业生涯\"><a href=\"#职业生涯\" class=\"headerlink\" title=\"职业生涯\"></a>职业生涯</h1><p>未来只想低调做科研，少装X，多做事。</p>\n<h1 id=\"为什么没有贴出头像？\"><a href=\"#为什么没有贴出头像？\" class=\"headerlink\" title=\"为什么没有贴出头像？\"></a>为什么没有贴出头像？</h1><p>因为太丑。</p>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><p>Email: <a href=\"mailto:`PeterSmith_9@outlook.com\" target=\"_blank\" rel=\"noopener\">`PeterSmith_9@outlook.com</a>`</p>\n"},{"title":"分类","date":"2017-06-22T08:39:46.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-06-22 16:39:46\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-12-31T11:47:25.727Z","path":"categories/index.html","layout":"page","_id":"cjt2yjb5x0003zq4i5i8ag64z","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2017-06-22T08:33:53.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签 \ndate: 2017-06-22 16:33:53\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-12-31T11:47:25.728Z","path":"tags/index.html","layout":"page","_id":"cjt2yjb600007zq4ibs2v6k6m","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"量子力学学习手记（二）——量子力学假设","date":"2017-08-15T08:08:32.000Z","_content":"\n# 量子力学学习手记（2）—量子力学假设\n\n**以下是在不考虑相对论的情况下进行的量子力学假设。** \n\n为了使问题简化，我们会先讨论自由度为 **1** 的系统状况，很自然地，这个系统包含一个粒子，并且该粒子存在于一维空间中，此时我们会进行一些假设，根据假设对这个系统进行相应的计算，取其结果与经典力学的结果进行对比；之后，我们会将假设推广到多维系统以及多个粒子的系统中去。\n\n-----\n\n接下来要阐述的是量子力学的四个基本假设与经典力学假设的对比：\n\n## 假设 I\n\n经典力学：\t一个粒子在任意时刻下的状态由两个变量决定：$x(t)$ 和 $p(t)$ ，这就像在一个二维空间确定一个点需要两个坐标一样；\n\n量子力学：\t粒子的状态用希尔伯特空间中的向量 $\\mid \\psi(t) \\rangle$ 表示。\n\n## 假设 II\n\n经典力学：\t任何动力学变量 $\\omega$ 都是 $x$ 和 $p$ 的函数： $\\omega = \\omega(x,p)$ ；\n\n量子力学：\t经典力学中的独立变量 $x$ 和 $p$ 在量子力学中由厄米算符 $X$ , $P$ 以及下面矩阵的元素代替：\n$$\n\\langle x\\mid X\\mid x'\\rangle = x\\delta(x-x') \\\\\\\\\n\\langle x\\mid P\\mid x'\\rangle = -i\\hbar\\delta(x-x')\n$$\n​\t\t\t而经典力学中的非独立变量如$\\omega(x,p)$ 则用下面的厄米算符表示：\n$$\n\\Omega(X,P) = \\omega(x\\rightarrow X, p\\rightarrow P)\n$$\n\n## 假设 III\n\n经典力学：\t如果粒子的状态由给定的 $x​$ 和 $p​$ 所确定，则对 $\\omega​$ 的测量将产生一个值 $\\omega(x,p)​$ ，并且该系统的状态不会被改变；\n\n量子力学：\t如果粒子的状态为 $\\mid \\psi \\rangle$ ，则外界对于 $\\Omega$ 的测量行为有 $P(\\omega) \\propto |\\langle \\omega \\mid \\psi\\rangle|^2$ 的概率得到 $\\Omega$ 的一个特征值 $\\omega$ 。**并且由于测量行为，该系统的状态将会从 $\\mid\\psi\\rangle$ 变为 $\\mid \\omega \\rangle$ **。\n\n## 假设 IV\n\n经典力学：\t变量随时间的变化规律满足哈密顿方程：\n$$\n\\dot{x} = \\frac{\\partial \\mathscr{H} }{\\partial p} \\\\\\\\\n\\dot{p} = -\\frac{\\partial \\mathscr{H} }{\\partial x}\n$$\n量子力学：\t状态向量 $\\mid \\psi(t) \\rangle$ 服从薛定谔方程：\n$$\ni\\hbar \\frac{\\mathrm d}{\\mathrm dt}\\mid \\psi(t) \\rangle = H\\mid\\psi(t)\\rangle\n$$\n​\t\t\t其中 $H(X,P) = \\mathscr{H}(x\\rightarrow X, p\\rightarrow P)$ 是量子力学中的哈密顿算符，而 $\\mathscr{H}$ 是经典理论中的哈密顿算符。\n\n\n\n以上四个假设对于量子力学 **非常重要** ，每天早起背一遍都不为过。\n\n------\n\n下面我们来讨论这些假设。\n\n## ","source":"_drafts/Quantum-Physics-Learning-Log-2.md","raw":"---\ntitle: 量子力学学习手记（二）——量子力学假设\ndate: 2017-08-15 16:08:32\ntags:\n   - 量子力学\ncategories: Quantum Mechanics\n---\n\n# 量子力学学习手记（2）—量子力学假设\n\n**以下是在不考虑相对论的情况下进行的量子力学假设。** \n\n为了使问题简化，我们会先讨论自由度为 **1** 的系统状况，很自然地，这个系统包含一个粒子，并且该粒子存在于一维空间中，此时我们会进行一些假设，根据假设对这个系统进行相应的计算，取其结果与经典力学的结果进行对比；之后，我们会将假设推广到多维系统以及多个粒子的系统中去。\n\n-----\n\n接下来要阐述的是量子力学的四个基本假设与经典力学假设的对比：\n\n## 假设 I\n\n经典力学：\t一个粒子在任意时刻下的状态由两个变量决定：$x(t)$ 和 $p(t)$ ，这就像在一个二维空间确定一个点需要两个坐标一样；\n\n量子力学：\t粒子的状态用希尔伯特空间中的向量 $\\mid \\psi(t) \\rangle$ 表示。\n\n## 假设 II\n\n经典力学：\t任何动力学变量 $\\omega$ 都是 $x$ 和 $p$ 的函数： $\\omega = \\omega(x,p)$ ；\n\n量子力学：\t经典力学中的独立变量 $x$ 和 $p$ 在量子力学中由厄米算符 $X$ , $P$ 以及下面矩阵的元素代替：\n$$\n\\langle x\\mid X\\mid x'\\rangle = x\\delta(x-x') \\\\\\\\\n\\langle x\\mid P\\mid x'\\rangle = -i\\hbar\\delta(x-x')\n$$\n​\t\t\t而经典力学中的非独立变量如$\\omega(x,p)$ 则用下面的厄米算符表示：\n$$\n\\Omega(X,P) = \\omega(x\\rightarrow X, p\\rightarrow P)\n$$\n\n## 假设 III\n\n经典力学：\t如果粒子的状态由给定的 $x​$ 和 $p​$ 所确定，则对 $\\omega​$ 的测量将产生一个值 $\\omega(x,p)​$ ，并且该系统的状态不会被改变；\n\n量子力学：\t如果粒子的状态为 $\\mid \\psi \\rangle$ ，则外界对于 $\\Omega$ 的测量行为有 $P(\\omega) \\propto |\\langle \\omega \\mid \\psi\\rangle|^2$ 的概率得到 $\\Omega$ 的一个特征值 $\\omega$ 。**并且由于测量行为，该系统的状态将会从 $\\mid\\psi\\rangle$ 变为 $\\mid \\omega \\rangle$ **。\n\n## 假设 IV\n\n经典力学：\t变量随时间的变化规律满足哈密顿方程：\n$$\n\\dot{x} = \\frac{\\partial \\mathscr{H} }{\\partial p} \\\\\\\\\n\\dot{p} = -\\frac{\\partial \\mathscr{H} }{\\partial x}\n$$\n量子力学：\t状态向量 $\\mid \\psi(t) \\rangle$ 服从薛定谔方程：\n$$\ni\\hbar \\frac{\\mathrm d}{\\mathrm dt}\\mid \\psi(t) \\rangle = H\\mid\\psi(t)\\rangle\n$$\n​\t\t\t其中 $H(X,P) = \\mathscr{H}(x\\rightarrow X, p\\rightarrow P)$ 是量子力学中的哈密顿算符，而 $\\mathscr{H}$ 是经典理论中的哈密顿算符。\n\n\n\n以上四个假设对于量子力学 **非常重要** ，每天早起背一遍都不为过。\n\n------\n\n下面我们来讨论这些假设。\n\n## ","slug":"Quantum-Physics-Learning-Log-2","published":0,"updated":"2018-12-31T11:47:25.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjb5s0000zq4iu868k674","content":"<h1 id=\"量子力学学习手记（2）—量子力学假设\"><a href=\"#量子力学学习手记（2）—量子力学假设\" class=\"headerlink\" title=\"量子力学学习手记（2）—量子力学假设\"></a>量子力学学习手记（2）—量子力学假设</h1><p><strong>以下是在不考虑相对论的情况下进行的量子力学假设。</strong> </p>\n<p>为了使问题简化，我们会先讨论自由度为 <strong>1</strong> 的系统状况，很自然地，这个系统包含一个粒子，并且该粒子存在于一维空间中，此时我们会进行一些假设，根据假设对这个系统进行相应的计算，取其结果与经典力学的结果进行对比；之后，我们会将假设推广到多维系统以及多个粒子的系统中去。</p>\n<hr>\n<p>接下来要阐述的是量子力学的四个基本假设与经典力学假设的对比：</p>\n<h2 id=\"假设-I\"><a href=\"#假设-I\" class=\"headerlink\" title=\"假设 I\"></a>假设 I</h2><p>经典力学：    一个粒子在任意时刻下的状态由两个变量决定：$x(t)$ 和 $p(t)$ ，这就像在一个二维空间确定一个点需要两个坐标一样；</p>\n<p>量子力学：    粒子的状态用希尔伯特空间中的向量 $\\mid \\psi(t) \\rangle$ 表示。</p>\n<h2 id=\"假设-II\"><a href=\"#假设-II\" class=\"headerlink\" title=\"假设 II\"></a>假设 II</h2><p>经典力学：    任何动力学变量 $\\omega$ 都是 $x$ 和 $p$ 的函数： $\\omega = \\omega(x,p)$ ；</p>\n<p>量子力学：    经典力学中的独立变量 $x$ 和 $p$ 在量子力学中由厄米算符 $X$ , $P$ 以及下面矩阵的元素代替：<br>$$<br>\\langle x\\mid X\\mid x’\\rangle = x\\delta(x-x’) \\\\<br>\\langle x\\mid P\\mid x’\\rangle = -i\\hbar\\delta(x-x’)<br>$$<br>​            而经典力学中的非独立变量如$\\omega(x,p)$ 则用下面的厄米算符表示：<br>$$<br>\\Omega(X,P) = \\omega(x\\rightarrow X, p\\rightarrow P)<br>$$</p>\n<h2 id=\"假设-III\"><a href=\"#假设-III\" class=\"headerlink\" title=\"假设 III\"></a>假设 III</h2><p>经典力学：    如果粒子的状态由给定的 $x​$ 和 $p​$ 所确定，则对 $\\omega​$ 的测量将产生一个值 $\\omega(x,p)​$ ，并且该系统的状态不会被改变；</p>\n<p>量子力学：    如果粒子的状态为 $\\mid \\psi \\rangle$ ，则外界对于 $\\Omega$ 的测量行为有 $P(\\omega) \\propto |\\langle \\omega \\mid \\psi\\rangle|^2$ 的概率得到 $\\Omega$ 的一个特征值 $\\omega$ 。<strong>并且由于测量行为，该系统的状态将会从 $\\mid\\psi\\rangle$ 变为 $\\mid \\omega \\rangle$ </strong>。</p>\n<h2 id=\"假设-IV\"><a href=\"#假设-IV\" class=\"headerlink\" title=\"假设 IV\"></a>假设 IV</h2><p>经典力学：    变量随时间的变化规律满足哈密顿方程：<br>$$<br>\\dot{x} = \\frac{\\partial \\mathscr{H} }{\\partial p} \\\\<br>\\dot{p} = -\\frac{\\partial \\mathscr{H} }{\\partial x}<br>$$<br>量子力学：    状态向量 $\\mid \\psi(t) \\rangle$ 服从薛定谔方程：<br>$$<br>i\\hbar \\frac{\\mathrm d}{\\mathrm dt}\\mid \\psi(t) \\rangle = H\\mid\\psi(t)\\rangle<br>$$<br>​            其中 $H(X,P) = \\mathscr{H}(x\\rightarrow X, p\\rightarrow P)$ 是量子力学中的哈密顿算符，而 $\\mathscr{H}$ 是经典理论中的哈密顿算符。</p>\n<p>以上四个假设对于量子力学 <strong>非常重要</strong> ，每天早起背一遍都不为过。</p>\n<hr>\n<p>下面我们来讨论这些假设。</p>\n<p>## </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"量子力学学习手记（2）—量子力学假设\"><a href=\"#量子力学学习手记（2）—量子力学假设\" class=\"headerlink\" title=\"量子力学学习手记（2）—量子力学假设\"></a>量子力学学习手记（2）—量子力学假设</h1><p><strong>以下是在不考虑相对论的情况下进行的量子力学假设。</strong> </p>\n<p>为了使问题简化，我们会先讨论自由度为 <strong>1</strong> 的系统状况，很自然地，这个系统包含一个粒子，并且该粒子存在于一维空间中，此时我们会进行一些假设，根据假设对这个系统进行相应的计算，取其结果与经典力学的结果进行对比；之后，我们会将假设推广到多维系统以及多个粒子的系统中去。</p>\n<hr>\n<p>接下来要阐述的是量子力学的四个基本假设与经典力学假设的对比：</p>\n<h2 id=\"假设-I\"><a href=\"#假设-I\" class=\"headerlink\" title=\"假设 I\"></a>假设 I</h2><p>经典力学：    一个粒子在任意时刻下的状态由两个变量决定：$x(t)$ 和 $p(t)$ ，这就像在一个二维空间确定一个点需要两个坐标一样；</p>\n<p>量子力学：    粒子的状态用希尔伯特空间中的向量 $\\mid \\psi(t) \\rangle$ 表示。</p>\n<h2 id=\"假设-II\"><a href=\"#假设-II\" class=\"headerlink\" title=\"假设 II\"></a>假设 II</h2><p>经典力学：    任何动力学变量 $\\omega$ 都是 $x$ 和 $p$ 的函数： $\\omega = \\omega(x,p)$ ；</p>\n<p>量子力学：    经典力学中的独立变量 $x$ 和 $p$ 在量子力学中由厄米算符 $X$ , $P$ 以及下面矩阵的元素代替：<br>$$<br>\\langle x\\mid X\\mid x’\\rangle = x\\delta(x-x’) \\\\<br>\\langle x\\mid P\\mid x’\\rangle = -i\\hbar\\delta(x-x’)<br>$$<br>​            而经典力学中的非独立变量如$\\omega(x,p)$ 则用下面的厄米算符表示：<br>$$<br>\\Omega(X,P) = \\omega(x\\rightarrow X, p\\rightarrow P)<br>$$</p>\n<h2 id=\"假设-III\"><a href=\"#假设-III\" class=\"headerlink\" title=\"假设 III\"></a>假设 III</h2><p>经典力学：    如果粒子的状态由给定的 $x​$ 和 $p​$ 所确定，则对 $\\omega​$ 的测量将产生一个值 $\\omega(x,p)​$ ，并且该系统的状态不会被改变；</p>\n<p>量子力学：    如果粒子的状态为 $\\mid \\psi \\rangle$ ，则外界对于 $\\Omega$ 的测量行为有 $P(\\omega) \\propto |\\langle \\omega \\mid \\psi\\rangle|^2$ 的概率得到 $\\Omega$ 的一个特征值 $\\omega$ 。<strong>并且由于测量行为，该系统的状态将会从 $\\mid\\psi\\rangle$ 变为 $\\mid \\omega \\rangle$ </strong>。</p>\n<h2 id=\"假设-IV\"><a href=\"#假设-IV\" class=\"headerlink\" title=\"假设 IV\"></a>假设 IV</h2><p>经典力学：    变量随时间的变化规律满足哈密顿方程：<br>$$<br>\\dot{x} = \\frac{\\partial \\mathscr{H} }{\\partial p} \\\\<br>\\dot{p} = -\\frac{\\partial \\mathscr{H} }{\\partial x}<br>$$<br>量子力学：    状态向量 $\\mid \\psi(t) \\rangle$ 服从薛定谔方程：<br>$$<br>i\\hbar \\frac{\\mathrm d}{\\mathrm dt}\\mid \\psi(t) \\rangle = H\\mid\\psi(t)\\rangle<br>$$<br>​            其中 $H(X,P) = \\mathscr{H}(x\\rightarrow X, p\\rightarrow P)$ 是量子力学中的哈密顿算符，而 $\\mathscr{H}$ 是经典理论中的哈密顿算符。</p>\n<p>以上四个假设对于量子力学 <strong>非常重要</strong> ，每天早起背一遍都不为过。</p>\n<hr>\n<p>下面我们来讨论这些假设。</p>\n<p>## </p>\n"},{"title":"从零开始计算氢原子","_content":"\n","source":"_drafts/calculate-hydrogen-atom-from-zero.md","raw":"---\ntitle: 从零开始计算氢原子\ntags:\n    - 氢原子\n    - 薛定谔方程\n    - 波尔半径\n    - 量子力学\ncategories: Quantum Mechanics\n---\n\n","slug":"calculate-hydrogen-atom-from-zero","published":0,"date":"2018-12-31T11:47:25.677Z","updated":"2018-12-31T11:47:25.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjb5w0002zq4iq8z5vzh9","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"如何求摆的角频率？","_content":"\n[TOC]\n\n# 什么是摆？\n\n## 什么样的运动称之为简谐运动？\n\n让我们来先看一个例子：\n\n<--有一单摆，即在一个细线下面悬挂一个可以视为质点的小球（忽略小球的自转），给小球一个很小的水平初速度，小球将在竖直平面内（忽略科里奥利力）做小角度的摆动并且忽略一切阻力。\n\n设细线长为 $l$ ，小球质量为 $m$ ，重力加速度为 $g$ ，画出示意图如下：\n\n\n\n很容易看出摆锤（小球）的重力势能是：\n$$\nE_{\\rm p重} = mgl(1-\\cos\\theta)\n$$\n摆锤的速度\n$$\nv = l \\omega = l\\cdot\\frac{\\mathrm d \\theta}{\\mathrm d t} = l\\dot{\\theta}\n$$\n摆锤的动能\n$$\nE_{k} = \\frac 12 m l^2 \\dot{\\theta}^2\n$$\n在摆动过程中没有外界能量输入，由能量守恒\n$$\n\\begin{aligned}\nE &= E_{\\rm k} + E_{\\rm p 重} \\\\\n&= \\frac 12 m l^2 \\dot{\\theta}^2 + mgl(1-\\cos\\theta)\\\\\n&= \\rm Constant\n\\end{aligned}\n$$\n\n即可解得\n$$\n\\dot{\\theta} = \\pm \\sqrt{\\frac{2g}{l} (\\frac{E}{mgl} - 1 + \\cos\\theta) }\n$$\n\n-->","source":"_drafts/how-to-solve-angular-frequency.md","raw":"---\ntitle: 如何求摆的角频率？\ntags:\n\t- 物理学\n\t- 振动\ncategories: Physics\n---\n\n[TOC]\n\n# 什么是摆？\n\n## 什么样的运动称之为简谐运动？\n\n让我们来先看一个例子：\n\n<--有一单摆，即在一个细线下面悬挂一个可以视为质点的小球（忽略小球的自转），给小球一个很小的水平初速度，小球将在竖直平面内（忽略科里奥利力）做小角度的摆动并且忽略一切阻力。\n\n设细线长为 $l$ ，小球质量为 $m$ ，重力加速度为 $g$ ，画出示意图如下：\n\n\n\n很容易看出摆锤（小球）的重力势能是：\n$$\nE_{\\rm p重} = mgl(1-\\cos\\theta)\n$$\n摆锤的速度\n$$\nv = l \\omega = l\\cdot\\frac{\\mathrm d \\theta}{\\mathrm d t} = l\\dot{\\theta}\n$$\n摆锤的动能\n$$\nE_{k} = \\frac 12 m l^2 \\dot{\\theta}^2\n$$\n在摆动过程中没有外界能量输入，由能量守恒\n$$\n\\begin{aligned}\nE &= E_{\\rm k} + E_{\\rm p 重} \\\\\n&= \\frac 12 m l^2 \\dot{\\theta}^2 + mgl(1-\\cos\\theta)\\\\\n&= \\rm Constant\n\\end{aligned}\n$$\n\n即可解得\n$$\n\\dot{\\theta} = \\pm \\sqrt{\\frac{2g}{l} (\\frac{E}{mgl} - 1 + \\cos\\theta) }\n$$\n\n-->","slug":"how-to-solve-angular-frequency","published":0,"date":"2018-12-31T11:47:25.677Z","updated":"2018-12-31T11:47:25.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjb5z0006zq4i366vmxx3","content":"<p>[TOC]</p>\n<h1 id=\"什么是摆？\"><a href=\"#什么是摆？\" class=\"headerlink\" title=\"什么是摆？\"></a>什么是摆？</h1><h2 id=\"什么样的运动称之为简谐运动？\"><a href=\"#什么样的运动称之为简谐运动？\" class=\"headerlink\" title=\"什么样的运动称之为简谐运动？\"></a>什么样的运动称之为简谐运动？</h2><p>让我们来先看一个例子：</p>\n<p>&lt;–有一单摆，即在一个细线下面悬挂一个可以视为质点的小球（忽略小球的自转），给小球一个很小的水平初速度，小球将在竖直平面内（忽略科里奥利力）做小角度的摆动并且忽略一切阻力。</p>\n<p>设细线长为 $l$ ，小球质量为 $m$ ，重力加速度为 $g$ ，画出示意图如下：</p>\n<p>很容易看出摆锤（小球）的重力势能是：<br>$$<br>E_{\\rm p重} = mgl(1-\\cos\\theta)<br>$$<br>摆锤的速度<br>$$<br>v = l \\omega = l\\cdot\\frac{\\mathrm d \\theta}{\\mathrm d t} = l\\dot{\\theta}<br>$$<br>摆锤的动能<br>$$<br>E_{k} = \\frac 12 m l^2 \\dot{\\theta}^2<br>$$<br>在摆动过程中没有外界能量输入，由能量守恒<br>$$<br>\\begin{aligned}<br>E &amp;= E_{\\rm k} + E_{\\rm p 重} \\<br>&amp;= \\frac 12 m l^2 \\dot{\\theta}^2 + mgl(1-\\cos\\theta)\\<br>&amp;= \\rm Constant<br>\\end{aligned}<br>$$</p>\n<p>即可解得<br>$$<br>\\dot{\\theta} = \\pm \\sqrt{\\frac{2g}{l} (\\frac{E}{mgl} - 1 + \\cos\\theta) }<br>$$</p>\n<p>–&gt;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>[TOC]</p>\n<h1 id=\"什么是摆？\"><a href=\"#什么是摆？\" class=\"headerlink\" title=\"什么是摆？\"></a>什么是摆？</h1><h2 id=\"什么样的运动称之为简谐运动？\"><a href=\"#什么样的运动称之为简谐运动？\" class=\"headerlink\" title=\"什么样的运动称之为简谐运动？\"></a>什么样的运动称之为简谐运动？</h2><p>让我们来先看一个例子：</p>\n<p>&lt;–有一单摆，即在一个细线下面悬挂一个可以视为质点的小球（忽略小球的自转），给小球一个很小的水平初速度，小球将在竖直平面内（忽略科里奥利力）做小角度的摆动并且忽略一切阻力。</p>\n<p>设细线长为 $l$ ，小球质量为 $m$ ，重力加速度为 $g$ ，画出示意图如下：</p>\n<p>很容易看出摆锤（小球）的重力势能是：<br>$$<br>E_{\\rm p重} = mgl(1-\\cos\\theta)<br>$$<br>摆锤的速度<br>$$<br>v = l \\omega = l\\cdot\\frac{\\mathrm d \\theta}{\\mathrm d t} = l\\dot{\\theta}<br>$$<br>摆锤的动能<br>$$<br>E_{k} = \\frac 12 m l^2 \\dot{\\theta}^2<br>$$<br>在摆动过程中没有外界能量输入，由能量守恒<br>$$<br>\\begin{aligned}<br>E &amp;= E_{\\rm k} + E_{\\rm p 重} \\<br>&amp;= \\frac 12 m l^2 \\dot{\\theta}^2 + mgl(1-\\cos\\theta)\\<br>&amp;= \\rm Constant<br>\\end{aligned}<br>$$</p>\n<p>即可解得<br>$$<br>\\dot{\\theta} = \\pm \\sqrt{\\frac{2g}{l} (\\frac{E}{mgl} - 1 + \\cos\\theta) }<br>$$</p>\n<p>–&gt;</p>\n"},{"title":"量子力学学习手记（二）----一维定态薛定谔方程的求解","draft":true,"_content":"\n# 量子力学假设\n\n## 1. 态的定义\n\n## 2. 算符的定义\n\n## 3. 测量行为\n\n## 4. 态的演化\n\n# 一维定态问题——薛定谔方程的简化\n\n# 求解薛定谔方程\n\n## 1. 方势阱\n\n## 2. $\\delta$ 势阱\n\n## 3. 一维谐振子","source":"_drafts/solve-Schrodinger-equation-in-one-dimension.md","raw":"---\ntitle: 量子力学学习手记（二）----一维定态薛定谔方程的求解\ndraft: true\ntags: \n\t- 量子力学\n\t- 物理学\n\t- 薛定谔方程\n\t- 定态\ncategories: Quantum Mechanics\n---\n\n# 量子力学假设\n\n## 1. 态的定义\n\n## 2. 算符的定义\n\n## 3. 测量行为\n\n## 4. 态的演化\n\n# 一维定态问题——薛定谔方程的简化\n\n# 求解薛定谔方程\n\n## 1. 方势阱\n\n## 2. $\\delta$ 势阱\n\n## 3. 一维谐振子","slug":"solve-Schrodinger-equation-in-one-dimension","published":0,"date":"2018-12-31T11:47:25.677Z","updated":"2018-12-31T11:47:25.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjb610008zq4i0511em0q","content":"<h1 id=\"量子力学假设\"><a href=\"#量子力学假设\" class=\"headerlink\" title=\"量子力学假设\"></a>量子力学假设</h1><h2 id=\"1-态的定义\"><a href=\"#1-态的定义\" class=\"headerlink\" title=\"1. 态的定义\"></a>1. 态的定义</h2><h2 id=\"2-算符的定义\"><a href=\"#2-算符的定义\" class=\"headerlink\" title=\"2. 算符的定义\"></a>2. 算符的定义</h2><h2 id=\"3-测量行为\"><a href=\"#3-测量行为\" class=\"headerlink\" title=\"3. 测量行为\"></a>3. 测量行为</h2><h2 id=\"4-态的演化\"><a href=\"#4-态的演化\" class=\"headerlink\" title=\"4. 态的演化\"></a>4. 态的演化</h2><h1 id=\"一维定态问题——薛定谔方程的简化\"><a href=\"#一维定态问题——薛定谔方程的简化\" class=\"headerlink\" title=\"一维定态问题——薛定谔方程的简化\"></a>一维定态问题——薛定谔方程的简化</h1><h1 id=\"求解薛定谔方程\"><a href=\"#求解薛定谔方程\" class=\"headerlink\" title=\"求解薛定谔方程\"></a>求解薛定谔方程</h1><h2 id=\"1-方势阱\"><a href=\"#1-方势阱\" class=\"headerlink\" title=\"1. 方势阱\"></a>1. 方势阱</h2><h2 id=\"2-delta-势阱\"><a href=\"#2-delta-势阱\" class=\"headerlink\" title=\"2. $\\delta$ 势阱\"></a>2. $\\delta$ 势阱</h2><h2 id=\"3-一维谐振子\"><a href=\"#3-一维谐振子\" class=\"headerlink\" title=\"3. 一维谐振子\"></a>3. 一维谐振子</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"量子力学假设\"><a href=\"#量子力学假设\" class=\"headerlink\" title=\"量子力学假设\"></a>量子力学假设</h1><h2 id=\"1-态的定义\"><a href=\"#1-态的定义\" class=\"headerlink\" title=\"1. 态的定义\"></a>1. 态的定义</h2><h2 id=\"2-算符的定义\"><a href=\"#2-算符的定义\" class=\"headerlink\" title=\"2. 算符的定义\"></a>2. 算符的定义</h2><h2 id=\"3-测量行为\"><a href=\"#3-测量行为\" class=\"headerlink\" title=\"3. 测量行为\"></a>3. 测量行为</h2><h2 id=\"4-态的演化\"><a href=\"#4-态的演化\" class=\"headerlink\" title=\"4. 态的演化\"></a>4. 态的演化</h2><h1 id=\"一维定态问题——薛定谔方程的简化\"><a href=\"#一维定态问题——薛定谔方程的简化\" class=\"headerlink\" title=\"一维定态问题——薛定谔方程的简化\"></a>一维定态问题——薛定谔方程的简化</h1><h1 id=\"求解薛定谔方程\"><a href=\"#求解薛定谔方程\" class=\"headerlink\" title=\"求解薛定谔方程\"></a>求解薛定谔方程</h1><h2 id=\"1-方势阱\"><a href=\"#1-方势阱\" class=\"headerlink\" title=\"1. 方势阱\"></a>1. 方势阱</h2><h2 id=\"2-delta-势阱\"><a href=\"#2-delta-势阱\" class=\"headerlink\" title=\"2. $\\delta$ 势阱\"></a>2. $\\delta$ 势阱</h2><h2 id=\"3-一维谐振子\"><a href=\"#3-一维谐振子\" class=\"headerlink\" title=\"3. 一维谐振子\"></a>3. 一维谐振子</h2>"},{"title":"如何为 github 上的 cpp 项目设置 Travis-CI 自动测试","date":"2019-01-21T03:32:17.000Z","_content":"\n# 前言\n\nTravis-CI 是一个持续集成测试网站，其 org 版对用户免费开放，对用户的 public 仓库可以免费提供 持续集成测试服务（私有仓库要使用 com 版）\n\n# 设置步骤\n\n1. 访问 [](https://travis-ci.org) 并使自己的 github 账户与 travis-ci 关联，并给予它足够的权限 （一路下一步就行）；\n2. 点击右上角的用户头像，进入自己的 repositories 配置面板，找到自己想要开启集成测试的项目， 开启集成测试功能；\n3. 进入刚刚项目集成测试的 settings ，在页面最下面的 Cron Jobs 一栏设置自己想要的定时测试任务 配置；\n4. 在**本地**该仓库的根目录下写好 `Makefile` ；\n5. 在**本地**该仓库的根目录下创建 `.travis.yml` ，里面写上如下内容：\n```yml\nlanguage: cpp     # 指定项目语言类型\ndist: trusty\nsudo: false       # 是否需要 sudo 权限\nmatrix:           # 配置 travis-ci 系统变量\n  include:\n    - os: linux   # 指定构建环境的系统类型\n    - compiler: gcc  # 指定编译器\n\naddons:           # 第三方依赖库的添加\n  apt:\n    packages:\n      - libfftw*\n\nscript:           # 构建的命令，默认为 ./configure && make\n  - make\n```\n6. git push\n\n然后 Travis-CI 应该就开始进行构建了，在构建的页面上还有构建状态的 badge ，可以放到 github 的 `README.md` 上标注构建状态 = =\n\n# 后记\n\nTravis-CI 还有很多功能没有用到，不过对于现在我的 repo 已经完全够用了。\n\nGitHub 都已经开通了免费的 private repo ，travis-ci 什么时候也能开通免费版的 private plan 呢？\n\n\n参考来源: https://blog.csdn.net/u012348774/article/details/78663381\n","source":"_posts/2019-1-21-how-to-setup-travis-ci.md","raw":"---\ntitle: 如何为 github 上的 cpp 项目设置 Travis-CI 自动测试\ndate: 2019-01-21 11:32:17\ntags:\n  - cpp\n  - travis-ci\n---\n\n# 前言\n\nTravis-CI 是一个持续集成测试网站，其 org 版对用户免费开放，对用户的 public 仓库可以免费提供 持续集成测试服务（私有仓库要使用 com 版）\n\n# 设置步骤\n\n1. 访问 [](https://travis-ci.org) 并使自己的 github 账户与 travis-ci 关联，并给予它足够的权限 （一路下一步就行）；\n2. 点击右上角的用户头像，进入自己的 repositories 配置面板，找到自己想要开启集成测试的项目， 开启集成测试功能；\n3. 进入刚刚项目集成测试的 settings ，在页面最下面的 Cron Jobs 一栏设置自己想要的定时测试任务 配置；\n4. 在**本地**该仓库的根目录下写好 `Makefile` ；\n5. 在**本地**该仓库的根目录下创建 `.travis.yml` ，里面写上如下内容：\n```yml\nlanguage: cpp     # 指定项目语言类型\ndist: trusty\nsudo: false       # 是否需要 sudo 权限\nmatrix:           # 配置 travis-ci 系统变量\n  include:\n    - os: linux   # 指定构建环境的系统类型\n    - compiler: gcc  # 指定编译器\n\naddons:           # 第三方依赖库的添加\n  apt:\n    packages:\n      - libfftw*\n\nscript:           # 构建的命令，默认为 ./configure && make\n  - make\n```\n6. git push\n\n然后 Travis-CI 应该就开始进行构建了，在构建的页面上还有构建状态的 badge ，可以放到 github 的 `README.md` 上标注构建状态 = =\n\n# 后记\n\nTravis-CI 还有很多功能没有用到，不过对于现在我的 repo 已经完全够用了。\n\nGitHub 都已经开通了免费的 private repo ，travis-ci 什么时候也能开通免费版的 private plan 呢？\n\n\n参考来源: https://blog.csdn.net/u012348774/article/details/78663381\n","slug":"2019-1-21-how-to-setup-travis-ci","published":1,"updated":"2019-01-21T04:03:13.173Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjb620009zq4itpqyjzdh","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>Travis-CI 是一个持续集成测试网站，其 org 版对用户免费开放，对用户的 public 仓库可以免费提供 持续集成测试服务（私有仓库要使用 com 版）</p>\n<h1 id=\"设置步骤\"><a href=\"#设置步骤\" class=\"headerlink\" title=\"设置步骤\"></a>设置步骤</h1><ol>\n<li>访问 <a href=\"https://travis-ci.org\" target=\"_blank\" rel=\"noopener\"></a> 并使自己的 github 账户与 travis-ci 关联，并给予它足够的权限 （一路下一步就行）；</li>\n<li>点击右上角的用户头像，进入自己的 repositories 配置面板，找到自己想要开启集成测试的项目， 开启集成测试功能；</li>\n<li>进入刚刚项目集成测试的 settings ，在页面最下面的 Cron Jobs 一栏设置自己想要的定时测试任务 配置；</li>\n<li>在<strong>本地</strong>该仓库的根目录下写好 <code>Makefile</code> ；</li>\n<li><p>在<strong>本地</strong>该仓库的根目录下创建 <code>.travis.yml</code> ，里面写上如下内容：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">cpp</span>     <span class=\"comment\"># 指定项目语言类型</span></span><br><span class=\"line\"><span class=\"attr\">dist:</span> <span class=\"string\">trusty</span></span><br><span class=\"line\"><span class=\"attr\">sudo:</span> <span class=\"literal\">false</span>       <span class=\"comment\"># 是否需要 sudo 权限</span></span><br><span class=\"line\"><span class=\"attr\">matrix:</span>           <span class=\"comment\"># 配置 travis-ci 系统变量</span></span><br><span class=\"line\"><span class=\"attr\">  include:</span></span><br><span class=\"line\"><span class=\"attr\">    - os:</span> <span class=\"string\">linux</span>   <span class=\"comment\"># 指定构建环境的系统类型</span></span><br><span class=\"line\"><span class=\"attr\">    - compiler:</span> <span class=\"string\">gcc</span>  <span class=\"comment\"># 指定编译器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">addons:</span>           <span class=\"comment\"># 第三方依赖库的添加</span></span><br><span class=\"line\"><span class=\"attr\">  apt:</span></span><br><span class=\"line\"><span class=\"attr\">    packages:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">libfftw*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">script:</span>           <span class=\"comment\"># 构建的命令，默认为 ./configure &amp;&amp; make</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">make</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>git push</p>\n</li>\n</ol>\n<p>然后 Travis-CI 应该就开始进行构建了，在构建的页面上还有构建状态的 badge ，可以放到 github 的 <code>README.md</code> 上标注构建状态 = =</p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>Travis-CI 还有很多功能没有用到，不过对于现在我的 repo 已经完全够用了。</p>\n<p>GitHub 都已经开通了免费的 private repo ，travis-ci 什么时候也能开通免费版的 private plan 呢？</p>\n<p>参考来源: <a href=\"https://blog.csdn.net/u012348774/article/details/78663381\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/u012348774/article/details/78663381</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>Travis-CI 是一个持续集成测试网站，其 org 版对用户免费开放，对用户的 public 仓库可以免费提供 持续集成测试服务（私有仓库要使用 com 版）</p>\n<h1 id=\"设置步骤\"><a href=\"#设置步骤\" class=\"headerlink\" title=\"设置步骤\"></a>设置步骤</h1><ol>\n<li>访问 <a href=\"https://travis-ci.org\" target=\"_blank\" rel=\"noopener\"></a> 并使自己的 github 账户与 travis-ci 关联，并给予它足够的权限 （一路下一步就行）；</li>\n<li>点击右上角的用户头像，进入自己的 repositories 配置面板，找到自己想要开启集成测试的项目， 开启集成测试功能；</li>\n<li>进入刚刚项目集成测试的 settings ，在页面最下面的 Cron Jobs 一栏设置自己想要的定时测试任务 配置；</li>\n<li>在<strong>本地</strong>该仓库的根目录下写好 <code>Makefile</code> ；</li>\n<li><p>在<strong>本地</strong>该仓库的根目录下创建 <code>.travis.yml</code> ，里面写上如下内容：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">cpp</span>     <span class=\"comment\"># 指定项目语言类型</span></span><br><span class=\"line\"><span class=\"attr\">dist:</span> <span class=\"string\">trusty</span></span><br><span class=\"line\"><span class=\"attr\">sudo:</span> <span class=\"literal\">false</span>       <span class=\"comment\"># 是否需要 sudo 权限</span></span><br><span class=\"line\"><span class=\"attr\">matrix:</span>           <span class=\"comment\"># 配置 travis-ci 系统变量</span></span><br><span class=\"line\"><span class=\"attr\">  include:</span></span><br><span class=\"line\"><span class=\"attr\">    - os:</span> <span class=\"string\">linux</span>   <span class=\"comment\"># 指定构建环境的系统类型</span></span><br><span class=\"line\"><span class=\"attr\">    - compiler:</span> <span class=\"string\">gcc</span>  <span class=\"comment\"># 指定编译器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">addons:</span>           <span class=\"comment\"># 第三方依赖库的添加</span></span><br><span class=\"line\"><span class=\"attr\">  apt:</span></span><br><span class=\"line\"><span class=\"attr\">    packages:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">libfftw*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">script:</span>           <span class=\"comment\"># 构建的命令，默认为 ./configure &amp;&amp; make</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">make</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>git push</p>\n</li>\n</ol>\n<p>然后 Travis-CI 应该就开始进行构建了，在构建的页面上还有构建状态的 badge ，可以放到 github 的 <code>README.md</code> 上标注构建状态 = =</p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>Travis-CI 还有很多功能没有用到，不过对于现在我的 repo 已经完全够用了。</p>\n<p>GitHub 都已经开通了免费的 private repo ，travis-ci 什么时候也能开通免费版的 private plan 呢？</p>\n<p>参考来源: <a href=\"https://blog.csdn.net/u012348774/article/details/78663381\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/u012348774/article/details/78663381</a></p>\n"},{"title":"如何求解 A * B = C 中的矩阵 B ？","date":"2019-01-25T15:44:50.000Z","Category":["Linear Algebra"],"_content":"\n\n# 问题\n\n给定一个矩阵方程\n$$\n\\mathbf{A} \\times \\mathbf{B} = \\mathbf{C}\n$$\n其中 $\\mathbf{B}$ 是方阵， $\\mathbf{A}$  和 $\\mathbf{C}$ 的形状相同，问如何求解 $\\mathbf{B}$ ?\n\n# 解答\n\n$\\mathbf{A}$ 和 $\\mathbf{C}$ 的形状相同，如果它们都是方阵，则\n$$\n\\begin{align}\n\\mathbf{A} \\times \\mathbf{B} ={}& \\mathbf{C} \\\\\n\\mathbf{A}^{-1} \\times \\mathbf{A} \\times \\mathbf{B} ={}& \\mathbf{A}^{-1} \\times \\mathbf{C} \\\\\n\\mathbf{B} ={}& \\mathbf{A}^{-1} \\times \\mathbf{C} \\label{eq:easy}\n\\end{align}\n$$\n\n\n但 $\\mathbf{A}$ 和 $\\mathbf{C}$ 未必是方阵，所以不存在逆矩阵，也就无法通过等式左右同时左乘 $\\mathbf{A}^{-1}$ 的方法直接求出 $\\mathbf{B}$ 。那么此时如何求解 $\\mathbf{B}$ 呢？\n\n既然 $\\mathbf{A}$ 和 $\\mathbf{C}$ 不是方阵，那么把它们变换成方阵不就好了吗？因此等式左右共同左乘 $\\mathbf{A}^{T}$ ，即可将 $\\mathbf{A}$ 和 $\\mathbf{C}$ 变换成方阵，即\n$$\n\\begin{align}\n\\mathbf{A}_{m\\times n} \\times \\mathbf{B}_{n\\times n} ={}& \\mathbf{C}_{m\\times n} \\\\\n\\mathbf{A}^{T}_{n\\times m} \\times \\mathbf{A}_{m\\times n} \\times \\mathbf{B}_{n\\times n} ={}& \\mathbf{A}^{T}_{n\\times m} \\times  \\mathbf{C}_{m\\times n} \\\\\n\\mathbf{A}'_{n\\times n} \\mathbf{B}_{n\\times n} ={}& \\mathbf{C}'_{n\\times n} \\label{eq:difficult}\n\\end{align}\n$$\n$\\eqref{eq:difficult}$ 即是我们熟悉的形式，直接使用 $\\eqref{eq:easy}$ 的解法即可解得 $\\mathbf{B}$ 。 ","source":"_posts/how-to-solve-matrix-B-in-A-times-B-equals-C.md","raw":"---\ntitle: 如何求解 A * B = C 中的矩阵 B ？\ndate: 2019-01-25 23:44:50\ntags:\n - Linear Algebra\n - VASP\n - OUTCAR\nCategory:\n - Linear Algebra\n---\n\n\n# 问题\n\n给定一个矩阵方程\n$$\n\\mathbf{A} \\times \\mathbf{B} = \\mathbf{C}\n$$\n其中 $\\mathbf{B}$ 是方阵， $\\mathbf{A}$  和 $\\mathbf{C}$ 的形状相同，问如何求解 $\\mathbf{B}$ ?\n\n# 解答\n\n$\\mathbf{A}$ 和 $\\mathbf{C}$ 的形状相同，如果它们都是方阵，则\n$$\n\\begin{align}\n\\mathbf{A} \\times \\mathbf{B} ={}& \\mathbf{C} \\\\\n\\mathbf{A}^{-1} \\times \\mathbf{A} \\times \\mathbf{B} ={}& \\mathbf{A}^{-1} \\times \\mathbf{C} \\\\\n\\mathbf{B} ={}& \\mathbf{A}^{-1} \\times \\mathbf{C} \\label{eq:easy}\n\\end{align}\n$$\n\n\n但 $\\mathbf{A}$ 和 $\\mathbf{C}$ 未必是方阵，所以不存在逆矩阵，也就无法通过等式左右同时左乘 $\\mathbf{A}^{-1}$ 的方法直接求出 $\\mathbf{B}$ 。那么此时如何求解 $\\mathbf{B}$ 呢？\n\n既然 $\\mathbf{A}$ 和 $\\mathbf{C}$ 不是方阵，那么把它们变换成方阵不就好了吗？因此等式左右共同左乘 $\\mathbf{A}^{T}$ ，即可将 $\\mathbf{A}$ 和 $\\mathbf{C}$ 变换成方阵，即\n$$\n\\begin{align}\n\\mathbf{A}_{m\\times n} \\times \\mathbf{B}_{n\\times n} ={}& \\mathbf{C}_{m\\times n} \\\\\n\\mathbf{A}^{T}_{n\\times m} \\times \\mathbf{A}_{m\\times n} \\times \\mathbf{B}_{n\\times n} ={}& \\mathbf{A}^{T}_{n\\times m} \\times  \\mathbf{C}_{m\\times n} \\\\\n\\mathbf{A}'_{n\\times n} \\mathbf{B}_{n\\times n} ={}& \\mathbf{C}'_{n\\times n} \\label{eq:difficult}\n\\end{align}\n$$\n$\\eqref{eq:difficult}$ 即是我们熟悉的形式，直接使用 $\\eqref{eq:easy}$ 的解法即可解得 $\\mathbf{B}$ 。 ","slug":"how-to-solve-matrix-B-in-A-times-B-equals-C","published":1,"updated":"2019-01-25T16:19:11.608Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjb64000dzq4iowv70axl","content":"<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p>给定一个矩阵方程<br>$$<br>\\mathbf{A} \\times \\mathbf{B} = \\mathbf{C}<br>$$<br>其中 $\\mathbf{B}$ 是方阵， $\\mathbf{A}$  和 $\\mathbf{C}$ 的形状相同，问如何求解 $\\mathbf{B}$ ?</p>\n<h1 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h1><p>$\\mathbf{A}$ 和 $\\mathbf{C}$ 的形状相同，如果它们都是方阵，则<br>$$<br>\\begin{align}<br>\\mathbf{A} \\times \\mathbf{B} ={}&amp; \\mathbf{C} \\<br>\\mathbf{A}^{-1} \\times \\mathbf{A} \\times \\mathbf{B} ={}&amp; \\mathbf{A}^{-1} \\times \\mathbf{C} \\<br>\\mathbf{B} ={}&amp; \\mathbf{A}^{-1} \\times \\mathbf{C} \\label{eq:easy}<br>\\end{align}<br>$$</p>\n<p>但 $\\mathbf{A}$ 和 $\\mathbf{C}$ 未必是方阵，所以不存在逆矩阵，也就无法通过等式左右同时左乘 $\\mathbf{A}^{-1}$ 的方法直接求出 $\\mathbf{B}$ 。那么此时如何求解 $\\mathbf{B}$ 呢？</p>\n<p>既然 $\\mathbf{A}$ 和 $\\mathbf{C}$ 不是方阵，那么把它们变换成方阵不就好了吗？因此等式左右共同左乘 $\\mathbf{A}^{T}$ ，即可将 $\\mathbf{A}$ 和 $\\mathbf{C}$ 变换成方阵，即<br>$$<br>\\begin{align}<br>\\mathbf{A}<em>{m\\times n} \\times \\mathbf{B}</em>{n\\times n} ={}&amp; \\mathbf{C}<em>{m\\times n} \\<br>\\mathbf{A}^{T}</em>{n\\times m} \\times \\mathbf{A}<em>{m\\times n} \\times \\mathbf{B}</em>{n\\times n} ={}&amp; \\mathbf{A}^{T}<em>{n\\times m} \\times  \\mathbf{C}</em>{m\\times n} \\<br>\\mathbf{A}’<em>{n\\times n} \\mathbf{B}</em>{n\\times n} ={}&amp; \\mathbf{C}’_{n\\times n} \\label{eq:difficult}<br>\\end{align}<br>$$<br>$\\eqref{eq:difficult}$ 即是我们熟悉的形式，直接使用 $\\eqref{eq:easy}$ 的解法即可解得 $\\mathbf{B}$ 。 </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p>给定一个矩阵方程<br>$$<br>\\mathbf{A} \\times \\mathbf{B} = \\mathbf{C}<br>$$<br>其中 $\\mathbf{B}$ 是方阵， $\\mathbf{A}$  和 $\\mathbf{C}$ 的形状相同，问如何求解 $\\mathbf{B}$ ?</p>\n<h1 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h1><p>$\\mathbf{A}$ 和 $\\mathbf{C}$ 的形状相同，如果它们都是方阵，则<br>$$<br>\\begin{align}<br>\\mathbf{A} \\times \\mathbf{B} ={}&amp; \\mathbf{C} \\<br>\\mathbf{A}^{-1} \\times \\mathbf{A} \\times \\mathbf{B} ={}&amp; \\mathbf{A}^{-1} \\times \\mathbf{C} \\<br>\\mathbf{B} ={}&amp; \\mathbf{A}^{-1} \\times \\mathbf{C} \\label{eq:easy}<br>\\end{align}<br>$$</p>\n<p>但 $\\mathbf{A}$ 和 $\\mathbf{C}$ 未必是方阵，所以不存在逆矩阵，也就无法通过等式左右同时左乘 $\\mathbf{A}^{-1}$ 的方法直接求出 $\\mathbf{B}$ 。那么此时如何求解 $\\mathbf{B}$ 呢？</p>\n<p>既然 $\\mathbf{A}$ 和 $\\mathbf{C}$ 不是方阵，那么把它们变换成方阵不就好了吗？因此等式左右共同左乘 $\\mathbf{A}^{T}$ ，即可将 $\\mathbf{A}$ 和 $\\mathbf{C}$ 变换成方阵，即<br>$$<br>\\begin{align}<br>\\mathbf{A}<em>{m\\times n} \\times \\mathbf{B}</em>{n\\times n} ={}&amp; \\mathbf{C}<em>{m\\times n} \\<br>\\mathbf{A}^{T}</em>{n\\times m} \\times \\mathbf{A}<em>{m\\times n} \\times \\mathbf{B}</em>{n\\times n} ={}&amp; \\mathbf{A}^{T}<em>{n\\times m} \\times  \\mathbf{C}</em>{m\\times n} \\<br>\\mathbf{A}’<em>{n\\times n} \\mathbf{B}</em>{n\\times n} ={}&amp; \\mathbf{C}’_{n\\times n} \\label{eq:difficult}<br>\\end{align}<br>$$<br>$\\eqref{eq:difficult}$ 即是我们熟悉的形式，直接使用 $\\eqref{eq:easy}$ 的解法即可解得 $\\mathbf{B}$ 。 </p>\n"},{"title":"WAVECAR 数据结构的解析","date":"2018-12-31T12:16:24.000Z","_content":"\n我们知道，WAVECAR 是 VASP 计算完成后输出的一个二进制文件，它包含的信息用普通的文本编辑器不能直接查看。但有时一些拥有好奇心的人总想看看它里面到底储存了什么东东，于是闲得 X 疼的本人就本着生命不息、折腾不止的态度研究了一下 WAVECAR 的数据结构，终于写出了一个能解析 WAVECAR 的小程序，于是有了这篇博客。\n\n# WAVECAR 的基本结构\n\n`WAVECAR` 本身是由多个等长的记录 (record) 组成的，没有特殊说明的情况下，`WAVECAR` 中大部分数据的存储类型为`double`(64-bit)，即使是整数也会被转换为双精度浮点数存储。\n\n```bash WAVECAR的基本结构\n ---------------------------------------------\n|info    |header  |body   |body    | ....\n ---------------------------------------------\n```\n\n下面我们从源码的角度分析一下 VASP 在读写 `WAVECAR` 时都发生了哪些操作。\n\n# 读写 WAVECAR 的函数\n\n与文件读写有关的操作有一些定义在源码的 `fileio.F` 中（本渣读的是 VASP 5.4.1 的源码，但这种很基础的函数在版本更新时应该不会有太大变动吧），其中读写 WAVECAR 的函数有：\n\n- `OPENWAV(IO, COM, EXT)`\n- `CLOSEWAV`\n- `READ_TO_BUF(IU, IREC, IRECL_REAL, INBUF, IFAIL)`\n- `WRITE_FROM_BUF(IU, IREC, IRECL_REAL, OUTBUF)`\n- `INWAV_HEAD(WDES, LATT_INI, LATT_CUR, ENMAXI, ISTART, IU0)`\n- `INWAV_FAST(IO, WDES, W, GRID, LATT_CUR, LATT_INI, ISTART, EFERMI)`\n- ~~`INWAV_ALTERNATIVE(IO, WDES, W, GRID, LATT_CUR, LREAD, EXT)`~~\n- `OUTWAV_4(IO, WDES, W, LATT_INI, EXT)`\n- `OUTWAV(IO, WDES, W, LATT_INI, EFERMI, EXT)`\n\n上面`OPENWAV`, `CLOSEWAV`, 分别是打开文件操作句柄同时确定写入的一些参数和关闭文件操作句柄，对应 C++ 里面的 `fstream::open()` 和 `fstream::close()` 操作；\n\n\n## `READ_TO_BUF` 和 `WRITE_FROM_BUF` \n\n顾名思义，它们执行的是一个读取和写入一个 **buffer** 到文件的操作（对于相同的数据量一次性读写大量数据比多次读写，每次读写少量的数据效率更高）。函数参数中的 `*BUF` 就是读写用到的 `buffer`，由于 Fortran 语言的特性，它的函数传参默认为传引用，所以 `READ_TO_BUF` 函数执行完毕后数据已经放到了 `INBUF` 中了，这一点对从 C 系语言入门的本渣来说很不习惯。函数的 `IREC` 和 `IRECL_REAL` 分别表示 `WAVECAR` 中记录的位置和 `real(q)` 的数据在内存中占的大小。 `IU` 参数在本函数中没有作用（目测作者是想将文件指针作为参数传进来，但最后因为某种原因放弃了，现在 VASP 中 `WAVECAR` 的 `unit` 已经写死了，为 `12`）。\n\n- `IU`: 文件操作结构，此处无作用；\n- `IREC`：此次读取/写入 `buffer` 的记录的编号；\n- `IRECL_REAL`：此次读取/写入 `buffer` 中 `real(q)` 的长度；\n- `*BUF`：读取、写入的 `buffer` ，是一个一维数组；\n- `IFAIL`：读取时是否失败的标志。\n\n## `INWAV_HEAD`\n这个函数读取 `WAVECAR` 的 header 部分，即 `WAVECAR` 中第**二**个记录的前 12 个`double` 型的值。这 12 个值按照顺序分别表示：\n\n- `_nKpoints`: 体系取了多少个 K 点，转换为 `int` 型；\n- `_nBands`: 体系中有多少条能带，转换为 `int` 型；\n- `_enCut`: 体系的截断能，无需转换；\n- `_latticeVectors`: 接下来的⑨个 `double` 值构成了一个矩阵，它们表示体系在实空间中的格矢，按照行优先的顺序分别存放，无需转换；\n- `_eFermi`: 体系的费米能级（在早期版本的 VASP 不会写入这个值）\n\n事实上，这个函数还做了一些检查，比如用户提供的 `NBAND` 、 `NKPOINTS` 是否与 `WAVECAR` 中对应值一致等，由于现在这些都不重要，我们暂时略过。\n\n- `WDES`: `WAVECAR` 的描述结构，包含了波函数的一些初步描述信息；\n- `LATT_INI`: 从 `WAVECAR` 读取的格子结构；\n- `LATT_CUR`: 从 `POSCAR` 读取的格子结构，程序会对 `LATT_INI` 和 `LATT_CUR` 作 diff 操作，如果两者有差别，则给出警告；\n- `ENMAXI`: 从 `WAVECAR` 中读取的截断能（`ENCUT`）；\n- `ISTART`: 是否为从头算，即是否舍弃 `WAVECAR` 重新计算波函数，手册中有详细说明；\n- `IU0`: 文件句柄，各种错误信息、警告信息都将从这个句柄输出。\n\n~~### `INWAV_ALTERNATIVE`\n这个函数很迷，它只在 `chi.F` 中有调用，并且是在 `LGW0 == true` 时才调用，并且实质上只是调用了 `INWAV_HEAD` 和一些输出警告、帮助的函数，在 `chi.F` 中在对它的调用后面还有一些其他的读写函数，个人认为 `INWAV_ALTERNATIVE` 是在执行特殊计算任务时读取 `WAVECAR` 的函数，它与我们解析 `WAVECAR` 的任务关系不大。~~\n\n## `INWAV_FAST` \n这个函数是读取 `WAVECAR` 的 **主要函数** 。\n\n它首先读取 `WAVECAR` 的开头部分，获得以下三个值： \n\n- `_recordLength`: `WAVECAR` 中每个记录的长度，应转换为 `int` 类型；\n- `_nSpin`: `WAVECAR` 中是否开启自旋，如果开启自旋，则上下两个自旋的波函数等将分别存放，应转换为 `int` 类型；\n- `_precisionTag`: `WAVECAR` 中平面波系数的精度标签，它决定了平面系数是使用 `complex<float>` 存储还是 `complex<double>` 来存储。这个标签应转换为 `int` 类型；\n\n然后调用 `INWAV_HEAD` 获得体系的 header 信息。\n\n最后，它将文件指针定位到第**三**个记录，并开始读取体系的能带、K 点的波函数信息。\n\n从第三个记录开始，`WAVECAR` 的数据结构如下：\n```cpp\nfor (int ispin=0; i!=_nSpin; ++i) {\n    for (int ikpoint=0; ikpoint!=_nKpoint; ++ikpoint) {\n        // one record here.\t        (1)\n        for (int iband=0; iband!=_nBand; ++iband) {\n            // one record here.\t    (2)\n        } // end for iband\n    } // end for ikpoint\n} // end for ispin\n```\n\n其中 `(1)` 处的记录读取 `4 + 3*_nBand` 个值，前四个值分别为：\n- `current_nPlaneWave`: 该 K 点波函数展开需要的平面波数量，转换为 `int` 类型；\n- `current_kVector`: 该 K 点的坐标（倒空间），转换为 3 个 `double` 类型；\n\n之后的 `3*_nBand` 个值构成一个 `_nBand * 3` 的矩阵，前两列分别表示该 K 点处各个能带的特征值（能量），由于特征值解出来可能是复数，所以这里用两列表示，第一列表示 `band` 的实部，第二列表示 `band` 的虚部，第三列表示每个能带的费米权重，即\n```\nRe(band[0]), Im(band[0]), fermiWeights[0];\nRe(band[1]), Im(band[1]), fermiWeights[1];\n...          ...          ...\n```\n\n`(2)` 处的记录就是每个 K 点每条能带波函数展开的平面波系数，系数的个数由前面得到的 `current_nPlaneWave` 决定。由于 `WAVECAR` 中占比最大的部分就是这部分，故设法减小文件的体积时便从这里开刀。还记得这个函数开头得到的 `_precisionTag` 吗？这里就派上用场了：\n如果 `_precisionTag == 45200 || _precisionTag == 53300` ，则后面的波函数展开的平面波系数就是由 `complex<float>` 类型存储，否则由 `complex<double>` 类型存储，即\n```cpp\nswitch (_precisionTag) {\n    case 45200: ;\n    case 53300: 平面波系数类型 = complex<float >; break;\n    case 45210: ;\n    case 53310: 平面波系数类型 = complex<double>; break;\n    default: _precisionTag 无效，终止程序。\n}\n```\n\n因此， `WAVECAR` 共有 `2 + nSpin * nKpoint * (1 + nBand)` 条记录，每条记录的长度都是一样的。\n\n其大部分参数和 `INWAV_HEAD` 一致，只多了一个 `GRID` \n- `GRID`: 格子的 mesh 结构，但在这个函数中不参与文件读写，暂时不需要了解它的作用。\n\n## `OUTWAV` 和 `OUTWAV_4`\n这两个函数的功能几乎一致，只是 `OUTWAV` 比 `OUTWAV_4` 多了一个 `EFERMI` 的参数，很自然地 `OUTWAV` 将这个参数写在了 header 的最后，这也解释了为什么早期版本的 header 没有 `_eFermi` 这一项。至于函数的具体流程，读者只需按照 `INWAV_FAST` 的流程把读改成写即可，事实上源代码也确实是这样做的。\n\n读到这里读者是否有个疑问， `WAVECAR` 是由连续的等长的记录组成的，这个记录的长度在读取时可以得到，那么在写入的时候如何确定？源代码中是这样确定这个数的：\n\n```fortran\n      IO%IRECLW=MAX((NPL_TOT+1)/2,7)*IO%ICMPLX\n      IRECLW_OLD=MAX(MAX((NPL_TOT+1)/2,6),((WDES%NB_TOT*3+1)/2+2))*IO%ICMPLX\n```\n翻译成人话就是使每条记录都不溢出的最小值，（我在实现小程序时直接使用 `_recordLength = (_maxOfNPlaneWaves + 1) / 2` 来决定平面波系数数组的大小，这样虽然会浪费一点内存，但省去了很多麻烦）。\n\n- `IO`: 文件读写的句柄结构，包含多个文件读写的句柄；\n- `WDES`: 波函数的描述结构，这里只用到了里面对于 `_nBand`、`nSpin` 、 `_nKpoint`以及 `_enCut` 等值（未全列出）；\n- `W`: 储存 `band` 、`fermiWeight` 等值的结构\n- `LATT_INI`: 格子的描述结构，包含格子在实空间的格矢；\n- `EFERMI`: 费米能级；\n- `EXT`: 这是个可选参数，表示写入前 `WAVECAR` 是否存在。\n\n\n\n#  `WAVECAR` 解析小程序的实现\n\n显然我们要构建一个类，这个类要包含至少两部分内容：\n1. `WAVECAR` 的 header 部分；\n2. `WAVECAR` 的 body 部分。\n\nheader 部分直接按照 `INWAV_FAST` 或者 `OUTWAV` 给出的顺序读取即可：\n```cpp header\nprivate:\n    int  _recordLength, _nSpin, _precisionTag;\n    bool _isDoubleType;\n    int _fileSize;\n\n    int _nKpoints, _nBands;\n    double _enCut;\n    Eigen::Matrix<double, 3, 3> _latticeVectors;\n    Eigen::Matrix<double, 3, 3> _reciprocalVectors;\n    double _omega;\n    double _eFermi;\n```\n\nbody 部分与之类似：\n```cpp body\n    VectorXi _nPlaneWaves;\n    Matrix<double, Dynamic, 3> _kVectors;\n    std::vector<Matrix<std::complex<double>, Dynamic, Dynamic>> _bands;\n    std::vector<Matrix<double, Dynamic, Dynamic>> _fermiWeights;\n    int _maxOfNPlaneWaves;\n\n    // 4 dimensions are: (ispin, kpoint, nband, nplanewaves)\n    std::vector< Matrix<\n        VectorXcd, Dynamic, Dynamic>> _complexWaves;\n```\n\n需要的操作也很简单：\n```cpp operations\nprivate:\n  void read_info();\n  void read_header();\n  void read_band();\n```\n\n按照上文和源码稍微修改一下基本就能实现了，限于篇幅原因，这里不贴出所有代码了（\n\n输出的效果如图：\n\n![](a.png)\n\n2019-1-15 更新: 已实现的波函数解析程序请见[这里](https://github.com/Ionizing/wavecar_parser)\n","source":"_posts/2018-12-31_WAVECAR-parsing.md","raw":"---\ntitle: WAVECAR 数据结构的解析\ndate: 2018-12-31 20:16:24\ntags:\n   - VASP\n   - C++\n   - WAVECAR\ncategories: First Principle\n---\n\n我们知道，WAVECAR 是 VASP 计算完成后输出的一个二进制文件，它包含的信息用普通的文本编辑器不能直接查看。但有时一些拥有好奇心的人总想看看它里面到底储存了什么东东，于是闲得 X 疼的本人就本着生命不息、折腾不止的态度研究了一下 WAVECAR 的数据结构，终于写出了一个能解析 WAVECAR 的小程序，于是有了这篇博客。\n\n# WAVECAR 的基本结构\n\n`WAVECAR` 本身是由多个等长的记录 (record) 组成的，没有特殊说明的情况下，`WAVECAR` 中大部分数据的存储类型为`double`(64-bit)，即使是整数也会被转换为双精度浮点数存储。\n\n```bash WAVECAR的基本结构\n ---------------------------------------------\n|info    |header  |body   |body    | ....\n ---------------------------------------------\n```\n\n下面我们从源码的角度分析一下 VASP 在读写 `WAVECAR` 时都发生了哪些操作。\n\n# 读写 WAVECAR 的函数\n\n与文件读写有关的操作有一些定义在源码的 `fileio.F` 中（本渣读的是 VASP 5.4.1 的源码，但这种很基础的函数在版本更新时应该不会有太大变动吧），其中读写 WAVECAR 的函数有：\n\n- `OPENWAV(IO, COM, EXT)`\n- `CLOSEWAV`\n- `READ_TO_BUF(IU, IREC, IRECL_REAL, INBUF, IFAIL)`\n- `WRITE_FROM_BUF(IU, IREC, IRECL_REAL, OUTBUF)`\n- `INWAV_HEAD(WDES, LATT_INI, LATT_CUR, ENMAXI, ISTART, IU0)`\n- `INWAV_FAST(IO, WDES, W, GRID, LATT_CUR, LATT_INI, ISTART, EFERMI)`\n- ~~`INWAV_ALTERNATIVE(IO, WDES, W, GRID, LATT_CUR, LREAD, EXT)`~~\n- `OUTWAV_4(IO, WDES, W, LATT_INI, EXT)`\n- `OUTWAV(IO, WDES, W, LATT_INI, EFERMI, EXT)`\n\n上面`OPENWAV`, `CLOSEWAV`, 分别是打开文件操作句柄同时确定写入的一些参数和关闭文件操作句柄，对应 C++ 里面的 `fstream::open()` 和 `fstream::close()` 操作；\n\n\n## `READ_TO_BUF` 和 `WRITE_FROM_BUF` \n\n顾名思义，它们执行的是一个读取和写入一个 **buffer** 到文件的操作（对于相同的数据量一次性读写大量数据比多次读写，每次读写少量的数据效率更高）。函数参数中的 `*BUF` 就是读写用到的 `buffer`，由于 Fortran 语言的特性，它的函数传参默认为传引用，所以 `READ_TO_BUF` 函数执行完毕后数据已经放到了 `INBUF` 中了，这一点对从 C 系语言入门的本渣来说很不习惯。函数的 `IREC` 和 `IRECL_REAL` 分别表示 `WAVECAR` 中记录的位置和 `real(q)` 的数据在内存中占的大小。 `IU` 参数在本函数中没有作用（目测作者是想将文件指针作为参数传进来，但最后因为某种原因放弃了，现在 VASP 中 `WAVECAR` 的 `unit` 已经写死了，为 `12`）。\n\n- `IU`: 文件操作结构，此处无作用；\n- `IREC`：此次读取/写入 `buffer` 的记录的编号；\n- `IRECL_REAL`：此次读取/写入 `buffer` 中 `real(q)` 的长度；\n- `*BUF`：读取、写入的 `buffer` ，是一个一维数组；\n- `IFAIL`：读取时是否失败的标志。\n\n## `INWAV_HEAD`\n这个函数读取 `WAVECAR` 的 header 部分，即 `WAVECAR` 中第**二**个记录的前 12 个`double` 型的值。这 12 个值按照顺序分别表示：\n\n- `_nKpoints`: 体系取了多少个 K 点，转换为 `int` 型；\n- `_nBands`: 体系中有多少条能带，转换为 `int` 型；\n- `_enCut`: 体系的截断能，无需转换；\n- `_latticeVectors`: 接下来的⑨个 `double` 值构成了一个矩阵，它们表示体系在实空间中的格矢，按照行优先的顺序分别存放，无需转换；\n- `_eFermi`: 体系的费米能级（在早期版本的 VASP 不会写入这个值）\n\n事实上，这个函数还做了一些检查，比如用户提供的 `NBAND` 、 `NKPOINTS` 是否与 `WAVECAR` 中对应值一致等，由于现在这些都不重要，我们暂时略过。\n\n- `WDES`: `WAVECAR` 的描述结构，包含了波函数的一些初步描述信息；\n- `LATT_INI`: 从 `WAVECAR` 读取的格子结构；\n- `LATT_CUR`: 从 `POSCAR` 读取的格子结构，程序会对 `LATT_INI` 和 `LATT_CUR` 作 diff 操作，如果两者有差别，则给出警告；\n- `ENMAXI`: 从 `WAVECAR` 中读取的截断能（`ENCUT`）；\n- `ISTART`: 是否为从头算，即是否舍弃 `WAVECAR` 重新计算波函数，手册中有详细说明；\n- `IU0`: 文件句柄，各种错误信息、警告信息都将从这个句柄输出。\n\n~~### `INWAV_ALTERNATIVE`\n这个函数很迷，它只在 `chi.F` 中有调用，并且是在 `LGW0 == true` 时才调用，并且实质上只是调用了 `INWAV_HEAD` 和一些输出警告、帮助的函数，在 `chi.F` 中在对它的调用后面还有一些其他的读写函数，个人认为 `INWAV_ALTERNATIVE` 是在执行特殊计算任务时读取 `WAVECAR` 的函数，它与我们解析 `WAVECAR` 的任务关系不大。~~\n\n## `INWAV_FAST` \n这个函数是读取 `WAVECAR` 的 **主要函数** 。\n\n它首先读取 `WAVECAR` 的开头部分，获得以下三个值： \n\n- `_recordLength`: `WAVECAR` 中每个记录的长度，应转换为 `int` 类型；\n- `_nSpin`: `WAVECAR` 中是否开启自旋，如果开启自旋，则上下两个自旋的波函数等将分别存放，应转换为 `int` 类型；\n- `_precisionTag`: `WAVECAR` 中平面波系数的精度标签，它决定了平面系数是使用 `complex<float>` 存储还是 `complex<double>` 来存储。这个标签应转换为 `int` 类型；\n\n然后调用 `INWAV_HEAD` 获得体系的 header 信息。\n\n最后，它将文件指针定位到第**三**个记录，并开始读取体系的能带、K 点的波函数信息。\n\n从第三个记录开始，`WAVECAR` 的数据结构如下：\n```cpp\nfor (int ispin=0; i!=_nSpin; ++i) {\n    for (int ikpoint=0; ikpoint!=_nKpoint; ++ikpoint) {\n        // one record here.\t        (1)\n        for (int iband=0; iband!=_nBand; ++iband) {\n            // one record here.\t    (2)\n        } // end for iband\n    } // end for ikpoint\n} // end for ispin\n```\n\n其中 `(1)` 处的记录读取 `4 + 3*_nBand` 个值，前四个值分别为：\n- `current_nPlaneWave`: 该 K 点波函数展开需要的平面波数量，转换为 `int` 类型；\n- `current_kVector`: 该 K 点的坐标（倒空间），转换为 3 个 `double` 类型；\n\n之后的 `3*_nBand` 个值构成一个 `_nBand * 3` 的矩阵，前两列分别表示该 K 点处各个能带的特征值（能量），由于特征值解出来可能是复数，所以这里用两列表示，第一列表示 `band` 的实部，第二列表示 `band` 的虚部，第三列表示每个能带的费米权重，即\n```\nRe(band[0]), Im(band[0]), fermiWeights[0];\nRe(band[1]), Im(band[1]), fermiWeights[1];\n...          ...          ...\n```\n\n`(2)` 处的记录就是每个 K 点每条能带波函数展开的平面波系数，系数的个数由前面得到的 `current_nPlaneWave` 决定。由于 `WAVECAR` 中占比最大的部分就是这部分，故设法减小文件的体积时便从这里开刀。还记得这个函数开头得到的 `_precisionTag` 吗？这里就派上用场了：\n如果 `_precisionTag == 45200 || _precisionTag == 53300` ，则后面的波函数展开的平面波系数就是由 `complex<float>` 类型存储，否则由 `complex<double>` 类型存储，即\n```cpp\nswitch (_precisionTag) {\n    case 45200: ;\n    case 53300: 平面波系数类型 = complex<float >; break;\n    case 45210: ;\n    case 53310: 平面波系数类型 = complex<double>; break;\n    default: _precisionTag 无效，终止程序。\n}\n```\n\n因此， `WAVECAR` 共有 `2 + nSpin * nKpoint * (1 + nBand)` 条记录，每条记录的长度都是一样的。\n\n其大部分参数和 `INWAV_HEAD` 一致，只多了一个 `GRID` \n- `GRID`: 格子的 mesh 结构，但在这个函数中不参与文件读写，暂时不需要了解它的作用。\n\n## `OUTWAV` 和 `OUTWAV_4`\n这两个函数的功能几乎一致，只是 `OUTWAV` 比 `OUTWAV_4` 多了一个 `EFERMI` 的参数，很自然地 `OUTWAV` 将这个参数写在了 header 的最后，这也解释了为什么早期版本的 header 没有 `_eFermi` 这一项。至于函数的具体流程，读者只需按照 `INWAV_FAST` 的流程把读改成写即可，事实上源代码也确实是这样做的。\n\n读到这里读者是否有个疑问， `WAVECAR` 是由连续的等长的记录组成的，这个记录的长度在读取时可以得到，那么在写入的时候如何确定？源代码中是这样确定这个数的：\n\n```fortran\n      IO%IRECLW=MAX((NPL_TOT+1)/2,7)*IO%ICMPLX\n      IRECLW_OLD=MAX(MAX((NPL_TOT+1)/2,6),((WDES%NB_TOT*3+1)/2+2))*IO%ICMPLX\n```\n翻译成人话就是使每条记录都不溢出的最小值，（我在实现小程序时直接使用 `_recordLength = (_maxOfNPlaneWaves + 1) / 2` 来决定平面波系数数组的大小，这样虽然会浪费一点内存，但省去了很多麻烦）。\n\n- `IO`: 文件读写的句柄结构，包含多个文件读写的句柄；\n- `WDES`: 波函数的描述结构，这里只用到了里面对于 `_nBand`、`nSpin` 、 `_nKpoint`以及 `_enCut` 等值（未全列出）；\n- `W`: 储存 `band` 、`fermiWeight` 等值的结构\n- `LATT_INI`: 格子的描述结构，包含格子在实空间的格矢；\n- `EFERMI`: 费米能级；\n- `EXT`: 这是个可选参数，表示写入前 `WAVECAR` 是否存在。\n\n\n\n#  `WAVECAR` 解析小程序的实现\n\n显然我们要构建一个类，这个类要包含至少两部分内容：\n1. `WAVECAR` 的 header 部分；\n2. `WAVECAR` 的 body 部分。\n\nheader 部分直接按照 `INWAV_FAST` 或者 `OUTWAV` 给出的顺序读取即可：\n```cpp header\nprivate:\n    int  _recordLength, _nSpin, _precisionTag;\n    bool _isDoubleType;\n    int _fileSize;\n\n    int _nKpoints, _nBands;\n    double _enCut;\n    Eigen::Matrix<double, 3, 3> _latticeVectors;\n    Eigen::Matrix<double, 3, 3> _reciprocalVectors;\n    double _omega;\n    double _eFermi;\n```\n\nbody 部分与之类似：\n```cpp body\n    VectorXi _nPlaneWaves;\n    Matrix<double, Dynamic, 3> _kVectors;\n    std::vector<Matrix<std::complex<double>, Dynamic, Dynamic>> _bands;\n    std::vector<Matrix<double, Dynamic, Dynamic>> _fermiWeights;\n    int _maxOfNPlaneWaves;\n\n    // 4 dimensions are: (ispin, kpoint, nband, nplanewaves)\n    std::vector< Matrix<\n        VectorXcd, Dynamic, Dynamic>> _complexWaves;\n```\n\n需要的操作也很简单：\n```cpp operations\nprivate:\n  void read_info();\n  void read_header();\n  void read_band();\n```\n\n按照上文和源码稍微修改一下基本就能实现了，限于篇幅原因，这里不贴出所有代码了（\n\n输出的效果如图：\n\n![](a.png)\n\n2019-1-15 更新: 已实现的波函数解析程序请见[这里](https://github.com/Ionizing/wavecar_parser)\n","slug":"2018-12-31_WAVECAR-parsing","published":1,"updated":"2019-01-16T11:19:49.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjbbl001bzq4izeii8x5n","content":"<p>我们知道，WAVECAR 是 VASP 计算完成后输出的一个二进制文件，它包含的信息用普通的文本编辑器不能直接查看。但有时一些拥有好奇心的人总想看看它里面到底储存了什么东东，于是闲得 X 疼的本人就本着生命不息、折腾不止的态度研究了一下 WAVECAR 的数据结构，终于写出了一个能解析 WAVECAR 的小程序，于是有了这篇博客。</p>\n<h1 id=\"WAVECAR-的基本结构\"><a href=\"#WAVECAR-的基本结构\" class=\"headerlink\" title=\"WAVECAR 的基本结构\"></a>WAVECAR 的基本结构</h1><p><code>WAVECAR</code> 本身是由多个等长的记录 (record) 组成的，没有特殊说明的情况下，<code>WAVECAR</code> 中大部分数据的存储类型为<code>double</code>(64-bit)，即使是整数也会被转换为双精度浮点数存储。</p>\n<figure class=\"highlight bash\"><figcaption><span>WAVECAR的基本结构</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> ---------------------------------------------</span><br><span class=\"line\">|info    |header  |body   |body    | ....</span><br><span class=\"line\"> ---------------------------------------------</span><br></pre></td></tr></table></figure>\n<p>下面我们从源码的角度分析一下 VASP 在读写 <code>WAVECAR</code> 时都发生了哪些操作。</p>\n<h1 id=\"读写-WAVECAR-的函数\"><a href=\"#读写-WAVECAR-的函数\" class=\"headerlink\" title=\"读写 WAVECAR 的函数\"></a>读写 WAVECAR 的函数</h1><p>与文件读写有关的操作有一些定义在源码的 <code>fileio.F</code> 中（本渣读的是 VASP 5.4.1 的源码，但这种很基础的函数在版本更新时应该不会有太大变动吧），其中读写 WAVECAR 的函数有：</p>\n<ul>\n<li><code>OPENWAV(IO, COM, EXT)</code></li>\n<li><code>CLOSEWAV</code></li>\n<li><code>READ_TO_BUF(IU, IREC, IRECL_REAL, INBUF, IFAIL)</code></li>\n<li><code>WRITE_FROM_BUF(IU, IREC, IRECL_REAL, OUTBUF)</code></li>\n<li><code>INWAV_HEAD(WDES, LATT_INI, LATT_CUR, ENMAXI, ISTART, IU0)</code></li>\n<li><code>INWAV_FAST(IO, WDES, W, GRID, LATT_CUR, LATT_INI, ISTART, EFERMI)</code></li>\n<li><del><code>INWAV_ALTERNATIVE(IO, WDES, W, GRID, LATT_CUR, LREAD, EXT)</code></del></li>\n<li><code>OUTWAV_4(IO, WDES, W, LATT_INI, EXT)</code></li>\n<li><code>OUTWAV(IO, WDES, W, LATT_INI, EFERMI, EXT)</code></li>\n</ul>\n<p>上面<code>OPENWAV</code>, <code>CLOSEWAV</code>, 分别是打开文件操作句柄同时确定写入的一些参数和关闭文件操作句柄，对应 C++ 里面的 <code>fstream::open()</code> 和 <code>fstream::close()</code> 操作；</p>\n<h2 id=\"READ-TO-BUF-和-WRITE-FROM-BUF\"><a href=\"#READ-TO-BUF-和-WRITE-FROM-BUF\" class=\"headerlink\" title=\"READ_TO_BUF 和 WRITE_FROM_BUF\"></a><code>READ_TO_BUF</code> 和 <code>WRITE_FROM_BUF</code></h2><p>顾名思义，它们执行的是一个读取和写入一个 <strong>buffer</strong> 到文件的操作（对于相同的数据量一次性读写大量数据比多次读写，每次读写少量的数据效率更高）。函数参数中的 <code>*BUF</code> 就是读写用到的 <code>buffer</code>，由于 Fortran 语言的特性，它的函数传参默认为传引用，所以 <code>READ_TO_BUF</code> 函数执行完毕后数据已经放到了 <code>INBUF</code> 中了，这一点对从 C 系语言入门的本渣来说很不习惯。函数的 <code>IREC</code> 和 <code>IRECL_REAL</code> 分别表示 <code>WAVECAR</code> 中记录的位置和 <code>real(q)</code> 的数据在内存中占的大小。 <code>IU</code> 参数在本函数中没有作用（目测作者是想将文件指针作为参数传进来，但最后因为某种原因放弃了，现在 VASP 中 <code>WAVECAR</code> 的 <code>unit</code> 已经写死了，为 <code>12</code>）。</p>\n<ul>\n<li><code>IU</code>: 文件操作结构，此处无作用；</li>\n<li><code>IREC</code>：此次读取/写入 <code>buffer</code> 的记录的编号；</li>\n<li><code>IRECL_REAL</code>：此次读取/写入 <code>buffer</code> 中 <code>real(q)</code> 的长度；</li>\n<li><code>*BUF</code>：读取、写入的 <code>buffer</code> ，是一个一维数组；</li>\n<li><code>IFAIL</code>：读取时是否失败的标志。</li>\n</ul>\n<h2 id=\"INWAV-HEAD\"><a href=\"#INWAV-HEAD\" class=\"headerlink\" title=\"INWAV_HEAD\"></a><code>INWAV_HEAD</code></h2><p>这个函数读取 <code>WAVECAR</code> 的 header 部分，即 <code>WAVECAR</code> 中第<strong>二</strong>个记录的前 12 个<code>double</code> 型的值。这 12 个值按照顺序分别表示：</p>\n<ul>\n<li><code>_nKpoints</code>: 体系取了多少个 K 点，转换为 <code>int</code> 型；</li>\n<li><code>_nBands</code>: 体系中有多少条能带，转换为 <code>int</code> 型；</li>\n<li><code>_enCut</code>: 体系的截断能，无需转换；</li>\n<li><code>_latticeVectors</code>: 接下来的⑨个 <code>double</code> 值构成了一个矩阵，它们表示体系在实空间中的格矢，按照行优先的顺序分别存放，无需转换；</li>\n<li><code>_eFermi</code>: 体系的费米能级（在早期版本的 VASP 不会写入这个值）</li>\n</ul>\n<p>事实上，这个函数还做了一些检查，比如用户提供的 <code>NBAND</code> 、 <code>NKPOINTS</code> 是否与 <code>WAVECAR</code> 中对应值一致等，由于现在这些都不重要，我们暂时略过。</p>\n<ul>\n<li><code>WDES</code>: <code>WAVECAR</code> 的描述结构，包含了波函数的一些初步描述信息；</li>\n<li><code>LATT_INI</code>: 从 <code>WAVECAR</code> 读取的格子结构；</li>\n<li><code>LATT_CUR</code>: 从 <code>POSCAR</code> 读取的格子结构，程序会对 <code>LATT_INI</code> 和 <code>LATT_CUR</code> 作 diff 操作，如果两者有差别，则给出警告；</li>\n<li><code>ENMAXI</code>: 从 <code>WAVECAR</code> 中读取的截断能（<code>ENCUT</code>）；</li>\n<li><code>ISTART</code>: 是否为从头算，即是否舍弃 <code>WAVECAR</code> 重新计算波函数，手册中有详细说明；</li>\n<li><code>IU0</code>: 文件句柄，各种错误信息、警告信息都将从这个句柄输出。</li>\n</ul>\n<p><del>### <code>INWAV_ALTERNATIVE</code><br>这个函数很迷，它只在 <code>chi.F</code> 中有调用，并且是在 <code>LGW0 == true</code> 时才调用，并且实质上只是调用了 <code>INWAV_HEAD</code> 和一些输出警告、帮助的函数，在 <code>chi.F</code> 中在对它的调用后面还有一些其他的读写函数，个人认为 <code>INWAV_ALTERNATIVE</code> 是在执行特殊计算任务时读取 <code>WAVECAR</code> 的函数，它与我们解析 <code>WAVECAR</code> 的任务关系不大。</del></p>\n<h2 id=\"INWAV-FAST\"><a href=\"#INWAV-FAST\" class=\"headerlink\" title=\"INWAV_FAST\"></a><code>INWAV_FAST</code></h2><p>这个函数是读取 <code>WAVECAR</code> 的 <strong>主要函数</strong> 。</p>\n<p>它首先读取 <code>WAVECAR</code> 的开头部分，获得以下三个值： </p>\n<ul>\n<li><code>_recordLength</code>: <code>WAVECAR</code> 中每个记录的长度，应转换为 <code>int</code> 类型；</li>\n<li><code>_nSpin</code>: <code>WAVECAR</code> 中是否开启自旋，如果开启自旋，则上下两个自旋的波函数等将分别存放，应转换为 <code>int</code> 类型；</li>\n<li><code>_precisionTag</code>: <code>WAVECAR</code> 中平面波系数的精度标签，它决定了平面系数是使用 <code>complex&lt;float&gt;</code> 存储还是 <code>complex&lt;double&gt;</code> 来存储。这个标签应转换为 <code>int</code> 类型；</li>\n</ul>\n<p>然后调用 <code>INWAV_HEAD</code> 获得体系的 header 信息。</p>\n<p>最后，它将文件指针定位到第<strong>三</strong>个记录，并开始读取体系的能带、K 点的波函数信息。</p>\n<p>从第三个记录开始，<code>WAVECAR</code> 的数据结构如下：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> ispin=<span class=\"number\">0</span>; i!=_nSpin; ++i) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> ikpoint=<span class=\"number\">0</span>; ikpoint!=_nKpoint; ++ikpoint) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// one record here.\t        (1)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> iband=<span class=\"number\">0</span>; iband!=_nBand; ++iband) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// one record here.\t    (2)</span></span><br><span class=\"line\">        &#125; <span class=\"comment\">// end for iband</span></span><br><span class=\"line\">    &#125; <span class=\"comment\">// end for ikpoint</span></span><br><span class=\"line\">&#125; <span class=\"comment\">// end for ispin</span></span><br></pre></td></tr></table></figure></p>\n<p>其中 <code>(1)</code> 处的记录读取 <code>4 + 3*_nBand</code> 个值，前四个值分别为：</p>\n<ul>\n<li><code>current_nPlaneWave</code>: 该 K 点波函数展开需要的平面波数量，转换为 <code>int</code> 类型；</li>\n<li><code>current_kVector</code>: 该 K 点的坐标（倒空间），转换为 3 个 <code>double</code> 类型；</li>\n</ul>\n<p>之后的 <code>3*_nBand</code> 个值构成一个 <code>_nBand * 3</code> 的矩阵，前两列分别表示该 K 点处各个能带的特征值（能量），由于特征值解出来可能是复数，所以这里用两列表示，第一列表示 <code>band</code> 的实部，第二列表示 <code>band</code> 的虚部，第三列表示每个能带的费米权重，即<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Re(band[0]), Im(band[0]), fermiWeights[0];</span><br><span class=\"line\">Re(band[1]), Im(band[1]), fermiWeights[1];</span><br><span class=\"line\">...          ...          ...</span><br></pre></td></tr></table></figure></p>\n<p><code>(2)</code> 处的记录就是每个 K 点每条能带波函数展开的平面波系数，系数的个数由前面得到的 <code>current_nPlaneWave</code> 决定。由于 <code>WAVECAR</code> 中占比最大的部分就是这部分，故设法减小文件的体积时便从这里开刀。还记得这个函数开头得到的 <code>_precisionTag</code> 吗？这里就派上用场了：<br>如果 <code>_precisionTag == 45200 || _precisionTag == 53300</code> ，则后面的波函数展开的平面波系数就是由 <code>complex&lt;float&gt;</code> 类型存储，否则由 <code>complex&lt;double&gt;</code> 类型存储，即<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (_precisionTag) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">45200</span>: ;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">53300</span>: 平面波系数类型 = <span class=\"keyword\">complex</span>&lt;<span class=\"keyword\">float</span> &gt;; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">45210</span>: ;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">53310</span>: 平面波系数类型 = <span class=\"keyword\">complex</span>&lt;<span class=\"keyword\">double</span>&gt;; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>: _precisionTag 无效，终止程序。</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>因此， <code>WAVECAR</code> 共有 <code>2 + nSpin * nKpoint * (1 + nBand)</code> 条记录，每条记录的长度都是一样的。</p>\n<p>其大部分参数和 <code>INWAV_HEAD</code> 一致，只多了一个 <code>GRID</code> </p>\n<ul>\n<li><code>GRID</code>: 格子的 mesh 结构，但在这个函数中不参与文件读写，暂时不需要了解它的作用。</li>\n</ul>\n<h2 id=\"OUTWAV-和-OUTWAV-4\"><a href=\"#OUTWAV-和-OUTWAV-4\" class=\"headerlink\" title=\"OUTWAV 和 OUTWAV_4\"></a><code>OUTWAV</code> 和 <code>OUTWAV_4</code></h2><p>这两个函数的功能几乎一致，只是 <code>OUTWAV</code> 比 <code>OUTWAV_4</code> 多了一个 <code>EFERMI</code> 的参数，很自然地 <code>OUTWAV</code> 将这个参数写在了 header 的最后，这也解释了为什么早期版本的 header 没有 <code>_eFermi</code> 这一项。至于函数的具体流程，读者只需按照 <code>INWAV_FAST</code> 的流程把读改成写即可，事实上源代码也确实是这样做的。</p>\n<p>读到这里读者是否有个疑问， <code>WAVECAR</code> 是由连续的等长的记录组成的，这个记录的长度在读取时可以得到，那么在写入的时候如何确定？源代码中是这样确定这个数的：</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IO%IRECLW=<span class=\"built_in\">MAX</span>((NPL_TOT+<span class=\"number\">1</span>)/<span class=\"number\">2</span>,<span class=\"number\">7</span>)*IO%ICMPLX</span><br><span class=\"line\">IRECLW_OLD=<span class=\"built_in\">MAX</span>(<span class=\"built_in\">MAX</span>((NPL_TOT+<span class=\"number\">1</span>)/<span class=\"number\">2</span>,<span class=\"number\">6</span>),((WDES%NB_TOT*<span class=\"number\">3</span>+<span class=\"number\">1</span>)/<span class=\"number\">2</span>+<span class=\"number\">2</span>))*IO%ICMPLX</span><br></pre></td></tr></table></figure>\n<p>翻译成人话就是使每条记录都不溢出的最小值，（我在实现小程序时直接使用 <code>_recordLength = (_maxOfNPlaneWaves + 1) / 2</code> 来决定平面波系数数组的大小，这样虽然会浪费一点内存，但省去了很多麻烦）。</p>\n<ul>\n<li><code>IO</code>: 文件读写的句柄结构，包含多个文件读写的句柄；</li>\n<li><code>WDES</code>: 波函数的描述结构，这里只用到了里面对于 <code>_nBand</code>、<code>nSpin</code> 、 <code>_nKpoint</code>以及 <code>_enCut</code> 等值（未全列出）；</li>\n<li><code>W</code>: 储存 <code>band</code> 、<code>fermiWeight</code> 等值的结构</li>\n<li><code>LATT_INI</code>: 格子的描述结构，包含格子在实空间的格矢；</li>\n<li><code>EFERMI</code>: 费米能级；</li>\n<li><code>EXT</code>: 这是个可选参数，表示写入前 <code>WAVECAR</code> 是否存在。</li>\n</ul>\n<h1 id=\"WAVECAR-解析小程序的实现\"><a href=\"#WAVECAR-解析小程序的实现\" class=\"headerlink\" title=\"WAVECAR 解析小程序的实现\"></a><code>WAVECAR</code> 解析小程序的实现</h1><p>显然我们要构建一个类，这个类要包含至少两部分内容：</p>\n<ol>\n<li><code>WAVECAR</code> 的 header 部分；</li>\n<li><code>WAVECAR</code> 的 body 部分。</li>\n</ol>\n<p>header 部分直接按照 <code>INWAV_FAST</code> 或者 <code>OUTWAV</code> 给出的顺序读取即可：<br><figure class=\"highlight cpp\"><figcaption><span>header</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"keyword\">int</span>  _recordLength, _nSpin, _precisionTag;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> _isDoubleType;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> _fileSize;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> _nKpoints, _nBands;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> _enCut;</span><br><span class=\"line\">    Eigen::Matrix&lt;<span class=\"keyword\">double</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>&gt; _latticeVectors;</span><br><span class=\"line\">    Eigen::Matrix&lt;<span class=\"keyword\">double</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>&gt; _reciprocalVectors;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> _omega;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> _eFermi;</span><br></pre></td></tr></table></figure></p>\n<p>body 部分与之类似：<br><figure class=\"highlight cpp\"><figcaption><span>body</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VectorXi _nPlaneWaves;</span><br><span class=\"line\">Matrix&lt;<span class=\"keyword\">double</span>, Dynamic, <span class=\"number\">3</span>&gt; _kVectors;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;Matrix&lt;<span class=\"built_in\">std</span>::<span class=\"keyword\">complex</span>&lt;<span class=\"keyword\">double</span>&gt;, Dynamic, Dynamic&gt;&gt; _bands;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;Matrix&lt;<span class=\"keyword\">double</span>, Dynamic, Dynamic&gt;&gt; _fermiWeights;</span><br><span class=\"line\"><span class=\"keyword\">int</span> _maxOfNPlaneWaves;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4 dimensions are: (ispin, kpoint, nband, nplanewaves)</span></span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt; Matrix&lt;</span><br><span class=\"line\">    VectorXcd, Dynamic, Dynamic&gt;&gt; _complexWaves;</span><br></pre></td></tr></table></figure></p>\n<p>需要的操作也很简单：<br><figure class=\"highlight cpp\"><figcaption><span>operations</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">read_info</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">read_header</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">read_band</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure></p>\n<p>按照上文和源码稍微修改一下基本就能实现了，限于篇幅原因，这里不贴出所有代码了（</p>\n<p>输出的效果如图：</p>\n<p><img src=\"a.png\" alt></p>\n<p>2019-1-15 更新: 已实现的波函数解析程序请见<a href=\"https://github.com/Ionizing/wavecar_parser\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>我们知道，WAVECAR 是 VASP 计算完成后输出的一个二进制文件，它包含的信息用普通的文本编辑器不能直接查看。但有时一些拥有好奇心的人总想看看它里面到底储存了什么东东，于是闲得 X 疼的本人就本着生命不息、折腾不止的态度研究了一下 WAVECAR 的数据结构，终于写出了一个能解析 WAVECAR 的小程序，于是有了这篇博客。</p>\n<h1 id=\"WAVECAR-的基本结构\"><a href=\"#WAVECAR-的基本结构\" class=\"headerlink\" title=\"WAVECAR 的基本结构\"></a>WAVECAR 的基本结构</h1><p><code>WAVECAR</code> 本身是由多个等长的记录 (record) 组成的，没有特殊说明的情况下，<code>WAVECAR</code> 中大部分数据的存储类型为<code>double</code>(64-bit)，即使是整数也会被转换为双精度浮点数存储。</p>\n<figure class=\"highlight bash\"><figcaption><span>WAVECAR的基本结构</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> ---------------------------------------------</span><br><span class=\"line\">|info    |header  |body   |body    | ....</span><br><span class=\"line\"> ---------------------------------------------</span><br></pre></td></tr></table></figure>\n<p>下面我们从源码的角度分析一下 VASP 在读写 <code>WAVECAR</code> 时都发生了哪些操作。</p>\n<h1 id=\"读写-WAVECAR-的函数\"><a href=\"#读写-WAVECAR-的函数\" class=\"headerlink\" title=\"读写 WAVECAR 的函数\"></a>读写 WAVECAR 的函数</h1><p>与文件读写有关的操作有一些定义在源码的 <code>fileio.F</code> 中（本渣读的是 VASP 5.4.1 的源码，但这种很基础的函数在版本更新时应该不会有太大变动吧），其中读写 WAVECAR 的函数有：</p>\n<ul>\n<li><code>OPENWAV(IO, COM, EXT)</code></li>\n<li><code>CLOSEWAV</code></li>\n<li><code>READ_TO_BUF(IU, IREC, IRECL_REAL, INBUF, IFAIL)</code></li>\n<li><code>WRITE_FROM_BUF(IU, IREC, IRECL_REAL, OUTBUF)</code></li>\n<li><code>INWAV_HEAD(WDES, LATT_INI, LATT_CUR, ENMAXI, ISTART, IU0)</code></li>\n<li><code>INWAV_FAST(IO, WDES, W, GRID, LATT_CUR, LATT_INI, ISTART, EFERMI)</code></li>\n<li><del><code>INWAV_ALTERNATIVE(IO, WDES, W, GRID, LATT_CUR, LREAD, EXT)</code></del></li>\n<li><code>OUTWAV_4(IO, WDES, W, LATT_INI, EXT)</code></li>\n<li><code>OUTWAV(IO, WDES, W, LATT_INI, EFERMI, EXT)</code></li>\n</ul>\n<p>上面<code>OPENWAV</code>, <code>CLOSEWAV</code>, 分别是打开文件操作句柄同时确定写入的一些参数和关闭文件操作句柄，对应 C++ 里面的 <code>fstream::open()</code> 和 <code>fstream::close()</code> 操作；</p>\n<h2 id=\"READ-TO-BUF-和-WRITE-FROM-BUF\"><a href=\"#READ-TO-BUF-和-WRITE-FROM-BUF\" class=\"headerlink\" title=\"READ_TO_BUF 和 WRITE_FROM_BUF\"></a><code>READ_TO_BUF</code> 和 <code>WRITE_FROM_BUF</code></h2><p>顾名思义，它们执行的是一个读取和写入一个 <strong>buffer</strong> 到文件的操作（对于相同的数据量一次性读写大量数据比多次读写，每次读写少量的数据效率更高）。函数参数中的 <code>*BUF</code> 就是读写用到的 <code>buffer</code>，由于 Fortran 语言的特性，它的函数传参默认为传引用，所以 <code>READ_TO_BUF</code> 函数执行完毕后数据已经放到了 <code>INBUF</code> 中了，这一点对从 C 系语言入门的本渣来说很不习惯。函数的 <code>IREC</code> 和 <code>IRECL_REAL</code> 分别表示 <code>WAVECAR</code> 中记录的位置和 <code>real(q)</code> 的数据在内存中占的大小。 <code>IU</code> 参数在本函数中没有作用（目测作者是想将文件指针作为参数传进来，但最后因为某种原因放弃了，现在 VASP 中 <code>WAVECAR</code> 的 <code>unit</code> 已经写死了，为 <code>12</code>）。</p>\n<ul>\n<li><code>IU</code>: 文件操作结构，此处无作用；</li>\n<li><code>IREC</code>：此次读取/写入 <code>buffer</code> 的记录的编号；</li>\n<li><code>IRECL_REAL</code>：此次读取/写入 <code>buffer</code> 中 <code>real(q)</code> 的长度；</li>\n<li><code>*BUF</code>：读取、写入的 <code>buffer</code> ，是一个一维数组；</li>\n<li><code>IFAIL</code>：读取时是否失败的标志。</li>\n</ul>\n<h2 id=\"INWAV-HEAD\"><a href=\"#INWAV-HEAD\" class=\"headerlink\" title=\"INWAV_HEAD\"></a><code>INWAV_HEAD</code></h2><p>这个函数读取 <code>WAVECAR</code> 的 header 部分，即 <code>WAVECAR</code> 中第<strong>二</strong>个记录的前 12 个<code>double</code> 型的值。这 12 个值按照顺序分别表示：</p>\n<ul>\n<li><code>_nKpoints</code>: 体系取了多少个 K 点，转换为 <code>int</code> 型；</li>\n<li><code>_nBands</code>: 体系中有多少条能带，转换为 <code>int</code> 型；</li>\n<li><code>_enCut</code>: 体系的截断能，无需转换；</li>\n<li><code>_latticeVectors</code>: 接下来的⑨个 <code>double</code> 值构成了一个矩阵，它们表示体系在实空间中的格矢，按照行优先的顺序分别存放，无需转换；</li>\n<li><code>_eFermi</code>: 体系的费米能级（在早期版本的 VASP 不会写入这个值）</li>\n</ul>\n<p>事实上，这个函数还做了一些检查，比如用户提供的 <code>NBAND</code> 、 <code>NKPOINTS</code> 是否与 <code>WAVECAR</code> 中对应值一致等，由于现在这些都不重要，我们暂时略过。</p>\n<ul>\n<li><code>WDES</code>: <code>WAVECAR</code> 的描述结构，包含了波函数的一些初步描述信息；</li>\n<li><code>LATT_INI</code>: 从 <code>WAVECAR</code> 读取的格子结构；</li>\n<li><code>LATT_CUR</code>: 从 <code>POSCAR</code> 读取的格子结构，程序会对 <code>LATT_INI</code> 和 <code>LATT_CUR</code> 作 diff 操作，如果两者有差别，则给出警告；</li>\n<li><code>ENMAXI</code>: 从 <code>WAVECAR</code> 中读取的截断能（<code>ENCUT</code>）；</li>\n<li><code>ISTART</code>: 是否为从头算，即是否舍弃 <code>WAVECAR</code> 重新计算波函数，手册中有详细说明；</li>\n<li><code>IU0</code>: 文件句柄，各种错误信息、警告信息都将从这个句柄输出。</li>\n</ul>\n<p><del>### <code>INWAV_ALTERNATIVE</code><br>这个函数很迷，它只在 <code>chi.F</code> 中有调用，并且是在 <code>LGW0 == true</code> 时才调用，并且实质上只是调用了 <code>INWAV_HEAD</code> 和一些输出警告、帮助的函数，在 <code>chi.F</code> 中在对它的调用后面还有一些其他的读写函数，个人认为 <code>INWAV_ALTERNATIVE</code> 是在执行特殊计算任务时读取 <code>WAVECAR</code> 的函数，它与我们解析 <code>WAVECAR</code> 的任务关系不大。</del></p>\n<h2 id=\"INWAV-FAST\"><a href=\"#INWAV-FAST\" class=\"headerlink\" title=\"INWAV_FAST\"></a><code>INWAV_FAST</code></h2><p>这个函数是读取 <code>WAVECAR</code> 的 <strong>主要函数</strong> 。</p>\n<p>它首先读取 <code>WAVECAR</code> 的开头部分，获得以下三个值： </p>\n<ul>\n<li><code>_recordLength</code>: <code>WAVECAR</code> 中每个记录的长度，应转换为 <code>int</code> 类型；</li>\n<li><code>_nSpin</code>: <code>WAVECAR</code> 中是否开启自旋，如果开启自旋，则上下两个自旋的波函数等将分别存放，应转换为 <code>int</code> 类型；</li>\n<li><code>_precisionTag</code>: <code>WAVECAR</code> 中平面波系数的精度标签，它决定了平面系数是使用 <code>complex&lt;float&gt;</code> 存储还是 <code>complex&lt;double&gt;</code> 来存储。这个标签应转换为 <code>int</code> 类型；</li>\n</ul>\n<p>然后调用 <code>INWAV_HEAD</code> 获得体系的 header 信息。</p>\n<p>最后，它将文件指针定位到第<strong>三</strong>个记录，并开始读取体系的能带、K 点的波函数信息。</p>\n<p>从第三个记录开始，<code>WAVECAR</code> 的数据结构如下：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> ispin=<span class=\"number\">0</span>; i!=_nSpin; ++i) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> ikpoint=<span class=\"number\">0</span>; ikpoint!=_nKpoint; ++ikpoint) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// one record here.\t        (1)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> iband=<span class=\"number\">0</span>; iband!=_nBand; ++iband) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// one record here.\t    (2)</span></span><br><span class=\"line\">        &#125; <span class=\"comment\">// end for iband</span></span><br><span class=\"line\">    &#125; <span class=\"comment\">// end for ikpoint</span></span><br><span class=\"line\">&#125; <span class=\"comment\">// end for ispin</span></span><br></pre></td></tr></table></figure></p>\n<p>其中 <code>(1)</code> 处的记录读取 <code>4 + 3*_nBand</code> 个值，前四个值分别为：</p>\n<ul>\n<li><code>current_nPlaneWave</code>: 该 K 点波函数展开需要的平面波数量，转换为 <code>int</code> 类型；</li>\n<li><code>current_kVector</code>: 该 K 点的坐标（倒空间），转换为 3 个 <code>double</code> 类型；</li>\n</ul>\n<p>之后的 <code>3*_nBand</code> 个值构成一个 <code>_nBand * 3</code> 的矩阵，前两列分别表示该 K 点处各个能带的特征值（能量），由于特征值解出来可能是复数，所以这里用两列表示，第一列表示 <code>band</code> 的实部，第二列表示 <code>band</code> 的虚部，第三列表示每个能带的费米权重，即<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Re(band[0]), Im(band[0]), fermiWeights[0];</span><br><span class=\"line\">Re(band[1]), Im(band[1]), fermiWeights[1];</span><br><span class=\"line\">...          ...          ...</span><br></pre></td></tr></table></figure></p>\n<p><code>(2)</code> 处的记录就是每个 K 点每条能带波函数展开的平面波系数，系数的个数由前面得到的 <code>current_nPlaneWave</code> 决定。由于 <code>WAVECAR</code> 中占比最大的部分就是这部分，故设法减小文件的体积时便从这里开刀。还记得这个函数开头得到的 <code>_precisionTag</code> 吗？这里就派上用场了：<br>如果 <code>_precisionTag == 45200 || _precisionTag == 53300</code> ，则后面的波函数展开的平面波系数就是由 <code>complex&lt;float&gt;</code> 类型存储，否则由 <code>complex&lt;double&gt;</code> 类型存储，即<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (_precisionTag) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">45200</span>: ;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">53300</span>: 平面波系数类型 = <span class=\"keyword\">complex</span>&lt;<span class=\"keyword\">float</span> &gt;; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">45210</span>: ;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">53310</span>: 平面波系数类型 = <span class=\"keyword\">complex</span>&lt;<span class=\"keyword\">double</span>&gt;; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>: _precisionTag 无效，终止程序。</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>因此， <code>WAVECAR</code> 共有 <code>2 + nSpin * nKpoint * (1 + nBand)</code> 条记录，每条记录的长度都是一样的。</p>\n<p>其大部分参数和 <code>INWAV_HEAD</code> 一致，只多了一个 <code>GRID</code> </p>\n<ul>\n<li><code>GRID</code>: 格子的 mesh 结构，但在这个函数中不参与文件读写，暂时不需要了解它的作用。</li>\n</ul>\n<h2 id=\"OUTWAV-和-OUTWAV-4\"><a href=\"#OUTWAV-和-OUTWAV-4\" class=\"headerlink\" title=\"OUTWAV 和 OUTWAV_4\"></a><code>OUTWAV</code> 和 <code>OUTWAV_4</code></h2><p>这两个函数的功能几乎一致，只是 <code>OUTWAV</code> 比 <code>OUTWAV_4</code> 多了一个 <code>EFERMI</code> 的参数，很自然地 <code>OUTWAV</code> 将这个参数写在了 header 的最后，这也解释了为什么早期版本的 header 没有 <code>_eFermi</code> 这一项。至于函数的具体流程，读者只需按照 <code>INWAV_FAST</code> 的流程把读改成写即可，事实上源代码也确实是这样做的。</p>\n<p>读到这里读者是否有个疑问， <code>WAVECAR</code> 是由连续的等长的记录组成的，这个记录的长度在读取时可以得到，那么在写入的时候如何确定？源代码中是这样确定这个数的：</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IO%IRECLW=<span class=\"built_in\">MAX</span>((NPL_TOT+<span class=\"number\">1</span>)/<span class=\"number\">2</span>,<span class=\"number\">7</span>)*IO%ICMPLX</span><br><span class=\"line\">IRECLW_OLD=<span class=\"built_in\">MAX</span>(<span class=\"built_in\">MAX</span>((NPL_TOT+<span class=\"number\">1</span>)/<span class=\"number\">2</span>,<span class=\"number\">6</span>),((WDES%NB_TOT*<span class=\"number\">3</span>+<span class=\"number\">1</span>)/<span class=\"number\">2</span>+<span class=\"number\">2</span>))*IO%ICMPLX</span><br></pre></td></tr></table></figure>\n<p>翻译成人话就是使每条记录都不溢出的最小值，（我在实现小程序时直接使用 <code>_recordLength = (_maxOfNPlaneWaves + 1) / 2</code> 来决定平面波系数数组的大小，这样虽然会浪费一点内存，但省去了很多麻烦）。</p>\n<ul>\n<li><code>IO</code>: 文件读写的句柄结构，包含多个文件读写的句柄；</li>\n<li><code>WDES</code>: 波函数的描述结构，这里只用到了里面对于 <code>_nBand</code>、<code>nSpin</code> 、 <code>_nKpoint</code>以及 <code>_enCut</code> 等值（未全列出）；</li>\n<li><code>W</code>: 储存 <code>band</code> 、<code>fermiWeight</code> 等值的结构</li>\n<li><code>LATT_INI</code>: 格子的描述结构，包含格子在实空间的格矢；</li>\n<li><code>EFERMI</code>: 费米能级；</li>\n<li><code>EXT</code>: 这是个可选参数，表示写入前 <code>WAVECAR</code> 是否存在。</li>\n</ul>\n<h1 id=\"WAVECAR-解析小程序的实现\"><a href=\"#WAVECAR-解析小程序的实现\" class=\"headerlink\" title=\"WAVECAR 解析小程序的实现\"></a><code>WAVECAR</code> 解析小程序的实现</h1><p>显然我们要构建一个类，这个类要包含至少两部分内容：</p>\n<ol>\n<li><code>WAVECAR</code> 的 header 部分；</li>\n<li><code>WAVECAR</code> 的 body 部分。</li>\n</ol>\n<p>header 部分直接按照 <code>INWAV_FAST</code> 或者 <code>OUTWAV</code> 给出的顺序读取即可：<br><figure class=\"highlight cpp\"><figcaption><span>header</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"keyword\">int</span>  _recordLength, _nSpin, _precisionTag;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> _isDoubleType;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> _fileSize;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> _nKpoints, _nBands;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> _enCut;</span><br><span class=\"line\">    Eigen::Matrix&lt;<span class=\"keyword\">double</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>&gt; _latticeVectors;</span><br><span class=\"line\">    Eigen::Matrix&lt;<span class=\"keyword\">double</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>&gt; _reciprocalVectors;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> _omega;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> _eFermi;</span><br></pre></td></tr></table></figure></p>\n<p>body 部分与之类似：<br><figure class=\"highlight cpp\"><figcaption><span>body</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VectorXi _nPlaneWaves;</span><br><span class=\"line\">Matrix&lt;<span class=\"keyword\">double</span>, Dynamic, <span class=\"number\">3</span>&gt; _kVectors;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;Matrix&lt;<span class=\"built_in\">std</span>::<span class=\"keyword\">complex</span>&lt;<span class=\"keyword\">double</span>&gt;, Dynamic, Dynamic&gt;&gt; _bands;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;Matrix&lt;<span class=\"keyword\">double</span>, Dynamic, Dynamic&gt;&gt; _fermiWeights;</span><br><span class=\"line\"><span class=\"keyword\">int</span> _maxOfNPlaneWaves;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4 dimensions are: (ispin, kpoint, nband, nplanewaves)</span></span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt; Matrix&lt;</span><br><span class=\"line\">    VectorXcd, Dynamic, Dynamic&gt;&gt; _complexWaves;</span><br></pre></td></tr></table></figure></p>\n<p>需要的操作也很简单：<br><figure class=\"highlight cpp\"><figcaption><span>operations</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">read_info</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">read_header</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">read_band</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure></p>\n<p>按照上文和源码稍微修改一下基本就能实现了，限于篇幅原因，这里不贴出所有代码了（</p>\n<p>输出的效果如图：</p>\n<p><img src=\"a.png\" alt></p>\n<p>2019-1-15 更新: 已实现的波函数解析程序请见<a href=\"https://github.com/Ionizing/wavecar_parser\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n"},{"title":"PAT题解 B 1035","date":"2017-06-22T05:33:59.000Z","_content":"\n# 题解:PAT-B 1035 插入与归并\n\n这是一篇测试用文章，欢迎围观.\n\n## 题目全文：\n题目地址在[这里](https://www.patest.cn/contests/pat-b-practise/1035)\n> 根据维基百科的定义：\n\n> 插入排序是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。如此迭代直到全部元素有序。\n\n> 归并排序进行如下迭代操作：首先将原始序列看成N个只包含1个元素的有序子序列，然后每次迭代归并两个相邻的有序子序列，直到最后只剩下1个有序的序列。\n\n> 现给定原始序列和由某排序算法产生的中间序列，请你判断该算法究竟是哪种排序算法？\n\n> 输入格式：\n\n> 输入在第一行给出正整数N (<=100)；随后一行给出原始序列的N个整数；最后一行给出由某排序算法产生的中间序列。这里假设排序的目标序列是升序。数字间以空格分隔。\n\n> 输出格式：\n\n> 首先在第1行中输出“Insertion Sort”表示插入排序、或“Merge Sort”表示归并排序；然后在第2行中输出用该排序算法再迭代一轮的结果序列。题目保证每组测试的结果是唯一的。数字间以空格分隔，且行末不得有多余空格。\n\n输入样例1：\n```\n10\n3 1 2 8 7 5 9 4 6 0\n1 2 3 7 8 5 9 4 6 0\n```\n输出样例1：\n```\nInsertion Sort\n1 2 3 5 7 8 9 4 6 0\n```\n输入样例2：\n```\n10\n3 1 2 8 7 5 9 4 0 6\n1 3 2 8 5 7 4 9 0 6\n```\n输出样例2：\n```\nMerge Sort\n1 2 3 8 4 5 7 9 0 6\n```\n\n\n## 题目解读\n这是我刷乙级题时比较头疼的一道题，前后查阅了很多别人的代码，后又观看了陈越姥姥的[视频](http://www.icourse163.org/learn/ZJU-93001?tid=1002019005#/learn/content?type=detail&id=1002635050)总算弄明白了这道题需要注意哪些.\n\n1. 如何区分简单插入排序和**非递归**的归并排序;\n2. 如何根据测试用例的类型再迭代一次运算;\n3. 如何处理边界测试.\n\n这里要强调一下本题使用递归的归并排序是**无法AC**的，本渣使用递归的归并排序最多只能得到17分. 关于递归的归并与迭代归并区别请围观[这里](https://en.wikipedia.org/wiki/Merge_sort) (中文版省去了很多分析过程，强烈建议读英文原版)，另外，关于插入排序算法的Wiki在[这里](https://en.wikipedia.org/wiki/Insertion_sort).\n\n## 解题过程\n\n### 如何区分简单插入排序和非递归的归并排序\n只要抓住两个关键点即可：\n1. **使用插入排序序列的开头一部分一定是有序的**;\n2. **无序部分与原文一致**．\n\n比如下面这个例子:\n> 10  \n3 1 2 8 7 `5 9 4 6 0`  \n**1 2 3 7 8** `5 9 4 6 0`\n\n我们可以这样来判断:\n1. 首先扫描 `1 2 3 7 8` 为有序序列，当读取到`5`时发现 `8 > 5`暂停，执行步骤2;\n2. 从`5`开始对后面的序列与原序列进行比较，若发现全部是匹配的，则该序列的排序算法为插入排序,并记录下开始无序的位置;否则为归并排序.\n\n显然后面的部分与原文一致，因此这个序列排序使用的是插入排序. 注意这里必须满足以上***两个***条件才能推出插入排序算法．\n\n这里不得不提到有同学使用从后向前寻找不匹配点的方法来判断排序算法，这个方法是不对的，比如下面这个例子:  \n>3 1 2 8 7 5 9 4 `0 6`  \n1 3 2 8 5 7 4 9 `0 6`  \n\n虽然这里的后面一部分`0　6`与原题一致，但它并不满足前置子序列有序，因此它不是插入排序，后面的测试用例就有一个测试点来卡这种情况。\n\n对于如何判断是否使用归并排序则相对麻烦，考虑到题目中明确指出测试用例是合法的并且只能是归并和插入排序两种之一，所以这里使用排除法来确定归并排序．\n\n### 如何根据测试用例的类型再迭代一次运算\n#### 对于插入排序\n这个就非常简单了，如果明白了插入排序的算法，直接从上面记录下的点进行再迭代一次即可。\n\n#### 对于归并排序\n这个相对要麻烦一些，其关键步骤是确定归并段的长度。有的同学想到像插入排序一样从头开始寻找最长有序子序列，这是不对的，因为题意中归并排序是迭代一轮后才得到题目序列，即题目序列被分为若干归并段，**每一小段都是有序的**，因此若原文前一段本身已经有序，那么进行归并后得到的序列一定也是整体有序的，那么也就无法通过通过前置子序列的最大有序长度来代表所有归并段的长度。比如下面这个例子:\n\n> 10  \n`2 1 8 3` `7 5` `9 4` `0 6`  \n`1 2 3 8` `5 7` `4 9` `0 6`\n\n显然我们无法从`1 3 2 8`是最长前置有序子列就判断出归并段的长度为`4`。正确答案应该是`2`。\n\n有的同学使用模拟法，即对原序列进行分步归并排序，每迭代一次都与题目序列进行比较，直到发现匹配的情况为止。　这种方法在题目所给的时间限制下也能通过，但本着认真负责的态度，我们应该寻找一种更加**聪明**的办法来确定\n\n通过陈越姥姥的启发，我们总结出一下步骤判断最大归并段的长度：\n1. 假设每个归并段的长度为`l`, (`l`的初始值为`2`，因为一个元素不存在有序无序的概念);\n2. 对所有相邻两个归并段相连的两个元素进行比较，若该两元素仍有序，则归并段的长度`l *= 2`; 否则终止循环，`l`即为要确定的最大归并段长度。\n\n程序实现起来就是通过`for(l=2; l<=N; l*=2)`这个大循环内部完成的。  \n\n当确定了最大归并段长度，余下的工作就变得简单了，直接再迭代归并一次即可。\n具体代码可以参考最后的AC代码。\n### 如何处理边界测试\nPAT的题目测试不给出测试数据以及测试提示，比较考验同学们的程序测试能力，本渣在通过这道题时前后想了很久，也提交了很多次，还是在看了陈越姥姥的讲解后才知道测试数据的提示，测试数据包含一下几类：\n\n1. 最小`N`(`N = 4`，因为只有当`N >= 4`时才能区分出归并排序与插入排序中间子列).\n    * 插入排序第`1`步，什么都没改变;\n    * 归并排序第`1`步，什么都变了;\n2. 尾部子列无变化，但是前面变了(归并).\n3. 最大`N`.\n\n有了如上提示，加上前面的讲解，相信读者一定能够独立AC这道题了。\n\n## AC代码:\n```cpp\n#include <iostream>\n//#include <fstream>\n\nusing std::cin;\nusing std::cout;\nusing std::endl;\n\nint main()\n{\n//    std::ifstream cin(\"in.txt\");\n    int N;\n    cin >> N;\n    int *Orig = new int[N];\n    for(int i=0; i!=N; ++i){\n        cin >> Orig[i];\n    }\n    int *tmp = new int[N];\n    for(int i=0; i!=N; ++i){\n        cin >> tmp[i];\n    }\n    int k(0);\n    for(int i=k; i!=N-1; ++i){\n        if( tmp[i] > tmp[i+1] ){\n            k = i;\n            break;\n        }\n    }\n    bool IsInsertion(true);\n    for(int i=++k; i!=N; ++i){\n        if( tmp[i] != Orig[i] ){\n            IsInsertion = false;\n            break;\n        }\n    }\n    if( IsInsertion ){\n        cout << \"Insertion Sort\" << endl;\n        for(int i=k; i!=0; --i){\n            if( tmp[i] < tmp[i-1] ){\n                int t = tmp[i];\n                tmp[i] = tmp[i-1];\n                tmp[i-1] = t;\n            }else break;\n        }\n        for(int i=0; i!=N-1; ++i){\n            cout << tmp[i] << \" \";\n        }cout << tmp[N-1] << endl;\n    }else{\n        cout << \"Merge Sort\" << endl;\n        bool Identified = false;\n        for(int l=2; l<=N; l*=2){\n            for(int i=l; i<N; i += 2*l){\n                if( tmp[i-1] > tmp[i] ){\n                    Identified = true;\n                    break;\n                }\n            }\n            if( Identified ){\n                k = l;\n                break;\n            }\n        }\n//        cout << \"k = \" << k << endl;\n        for(int i=0; i<N; i+=k*2){\n            int *tmpArr = new int[k*2];\n            int lef = i;\n            const int mid = ( lef+k < N ) ? lef+k : N;\n            const int rig = ( mid+k < N ) ? mid+k : N;\n            int cur = mid;\n            int j=0;\n            while( lef < mid and cur < rig ){\n                if( tmp[lef] < tmp[cur] ){\n                    tmpArr[j++] = tmp[lef++];\n                }else{\n                    tmpArr[j++] = tmp[cur++];\n                }\n            }\n            while( lef < mid ){\n                tmpArr[j++] = tmp[lef++];\n            }\n            while( cur < rig ){\n                tmpArr[j++] = tmp[cur++];\n            }\n            for(int t=0; t!=j; ++t){\n                tmp[i+t] = tmpArr[t];\n            }\n            delete[] tmpArr;\n        }\n        for(int i=0; i!=N-1; ++i){\n            cout << tmp[i] << \" \";\n        }cout << tmp[N-1] << endl;\n    }\n    return 0;\n}\n\n```\n","source":"_posts/PAT题解-B-1035.md","raw":"---\ntitle: PAT题解 B 1035\ndate: 2017-06-22 13:33:59\ntags:\n    - C++\n    - PAT\n    - 排序\ncategories: Data Structure & Algorithm\n---\n\n# 题解:PAT-B 1035 插入与归并\n\n这是一篇测试用文章，欢迎围观.\n\n## 题目全文：\n题目地址在[这里](https://www.patest.cn/contests/pat-b-practise/1035)\n> 根据维基百科的定义：\n\n> 插入排序是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。如此迭代直到全部元素有序。\n\n> 归并排序进行如下迭代操作：首先将原始序列看成N个只包含1个元素的有序子序列，然后每次迭代归并两个相邻的有序子序列，直到最后只剩下1个有序的序列。\n\n> 现给定原始序列和由某排序算法产生的中间序列，请你判断该算法究竟是哪种排序算法？\n\n> 输入格式：\n\n> 输入在第一行给出正整数N (<=100)；随后一行给出原始序列的N个整数；最后一行给出由某排序算法产生的中间序列。这里假设排序的目标序列是升序。数字间以空格分隔。\n\n> 输出格式：\n\n> 首先在第1行中输出“Insertion Sort”表示插入排序、或“Merge Sort”表示归并排序；然后在第2行中输出用该排序算法再迭代一轮的结果序列。题目保证每组测试的结果是唯一的。数字间以空格分隔，且行末不得有多余空格。\n\n输入样例1：\n```\n10\n3 1 2 8 7 5 9 4 6 0\n1 2 3 7 8 5 9 4 6 0\n```\n输出样例1：\n```\nInsertion Sort\n1 2 3 5 7 8 9 4 6 0\n```\n输入样例2：\n```\n10\n3 1 2 8 7 5 9 4 0 6\n1 3 2 8 5 7 4 9 0 6\n```\n输出样例2：\n```\nMerge Sort\n1 2 3 8 4 5 7 9 0 6\n```\n\n\n## 题目解读\n这是我刷乙级题时比较头疼的一道题，前后查阅了很多别人的代码，后又观看了陈越姥姥的[视频](http://www.icourse163.org/learn/ZJU-93001?tid=1002019005#/learn/content?type=detail&id=1002635050)总算弄明白了这道题需要注意哪些.\n\n1. 如何区分简单插入排序和**非递归**的归并排序;\n2. 如何根据测试用例的类型再迭代一次运算;\n3. 如何处理边界测试.\n\n这里要强调一下本题使用递归的归并排序是**无法AC**的，本渣使用递归的归并排序最多只能得到17分. 关于递归的归并与迭代归并区别请围观[这里](https://en.wikipedia.org/wiki/Merge_sort) (中文版省去了很多分析过程，强烈建议读英文原版)，另外，关于插入排序算法的Wiki在[这里](https://en.wikipedia.org/wiki/Insertion_sort).\n\n## 解题过程\n\n### 如何区分简单插入排序和非递归的归并排序\n只要抓住两个关键点即可：\n1. **使用插入排序序列的开头一部分一定是有序的**;\n2. **无序部分与原文一致**．\n\n比如下面这个例子:\n> 10  \n3 1 2 8 7 `5 9 4 6 0`  \n**1 2 3 7 8** `5 9 4 6 0`\n\n我们可以这样来判断:\n1. 首先扫描 `1 2 3 7 8` 为有序序列，当读取到`5`时发现 `8 > 5`暂停，执行步骤2;\n2. 从`5`开始对后面的序列与原序列进行比较，若发现全部是匹配的，则该序列的排序算法为插入排序,并记录下开始无序的位置;否则为归并排序.\n\n显然后面的部分与原文一致，因此这个序列排序使用的是插入排序. 注意这里必须满足以上***两个***条件才能推出插入排序算法．\n\n这里不得不提到有同学使用从后向前寻找不匹配点的方法来判断排序算法，这个方法是不对的，比如下面这个例子:  \n>3 1 2 8 7 5 9 4 `0 6`  \n1 3 2 8 5 7 4 9 `0 6`  \n\n虽然这里的后面一部分`0　6`与原题一致，但它并不满足前置子序列有序，因此它不是插入排序，后面的测试用例就有一个测试点来卡这种情况。\n\n对于如何判断是否使用归并排序则相对麻烦，考虑到题目中明确指出测试用例是合法的并且只能是归并和插入排序两种之一，所以这里使用排除法来确定归并排序．\n\n### 如何根据测试用例的类型再迭代一次运算\n#### 对于插入排序\n这个就非常简单了，如果明白了插入排序的算法，直接从上面记录下的点进行再迭代一次即可。\n\n#### 对于归并排序\n这个相对要麻烦一些，其关键步骤是确定归并段的长度。有的同学想到像插入排序一样从头开始寻找最长有序子序列，这是不对的，因为题意中归并排序是迭代一轮后才得到题目序列，即题目序列被分为若干归并段，**每一小段都是有序的**，因此若原文前一段本身已经有序，那么进行归并后得到的序列一定也是整体有序的，那么也就无法通过通过前置子序列的最大有序长度来代表所有归并段的长度。比如下面这个例子:\n\n> 10  \n`2 1 8 3` `7 5` `9 4` `0 6`  \n`1 2 3 8` `5 7` `4 9` `0 6`\n\n显然我们无法从`1 3 2 8`是最长前置有序子列就判断出归并段的长度为`4`。正确答案应该是`2`。\n\n有的同学使用模拟法，即对原序列进行分步归并排序，每迭代一次都与题目序列进行比较，直到发现匹配的情况为止。　这种方法在题目所给的时间限制下也能通过，但本着认真负责的态度，我们应该寻找一种更加**聪明**的办法来确定\n\n通过陈越姥姥的启发，我们总结出一下步骤判断最大归并段的长度：\n1. 假设每个归并段的长度为`l`, (`l`的初始值为`2`，因为一个元素不存在有序无序的概念);\n2. 对所有相邻两个归并段相连的两个元素进行比较，若该两元素仍有序，则归并段的长度`l *= 2`; 否则终止循环，`l`即为要确定的最大归并段长度。\n\n程序实现起来就是通过`for(l=2; l<=N; l*=2)`这个大循环内部完成的。  \n\n当确定了最大归并段长度，余下的工作就变得简单了，直接再迭代归并一次即可。\n具体代码可以参考最后的AC代码。\n### 如何处理边界测试\nPAT的题目测试不给出测试数据以及测试提示，比较考验同学们的程序测试能力，本渣在通过这道题时前后想了很久，也提交了很多次，还是在看了陈越姥姥的讲解后才知道测试数据的提示，测试数据包含一下几类：\n\n1. 最小`N`(`N = 4`，因为只有当`N >= 4`时才能区分出归并排序与插入排序中间子列).\n    * 插入排序第`1`步，什么都没改变;\n    * 归并排序第`1`步，什么都变了;\n2. 尾部子列无变化，但是前面变了(归并).\n3. 最大`N`.\n\n有了如上提示，加上前面的讲解，相信读者一定能够独立AC这道题了。\n\n## AC代码:\n```cpp\n#include <iostream>\n//#include <fstream>\n\nusing std::cin;\nusing std::cout;\nusing std::endl;\n\nint main()\n{\n//    std::ifstream cin(\"in.txt\");\n    int N;\n    cin >> N;\n    int *Orig = new int[N];\n    for(int i=0; i!=N; ++i){\n        cin >> Orig[i];\n    }\n    int *tmp = new int[N];\n    for(int i=0; i!=N; ++i){\n        cin >> tmp[i];\n    }\n    int k(0);\n    for(int i=k; i!=N-1; ++i){\n        if( tmp[i] > tmp[i+1] ){\n            k = i;\n            break;\n        }\n    }\n    bool IsInsertion(true);\n    for(int i=++k; i!=N; ++i){\n        if( tmp[i] != Orig[i] ){\n            IsInsertion = false;\n            break;\n        }\n    }\n    if( IsInsertion ){\n        cout << \"Insertion Sort\" << endl;\n        for(int i=k; i!=0; --i){\n            if( tmp[i] < tmp[i-1] ){\n                int t = tmp[i];\n                tmp[i] = tmp[i-1];\n                tmp[i-1] = t;\n            }else break;\n        }\n        for(int i=0; i!=N-1; ++i){\n            cout << tmp[i] << \" \";\n        }cout << tmp[N-1] << endl;\n    }else{\n        cout << \"Merge Sort\" << endl;\n        bool Identified = false;\n        for(int l=2; l<=N; l*=2){\n            for(int i=l; i<N; i += 2*l){\n                if( tmp[i-1] > tmp[i] ){\n                    Identified = true;\n                    break;\n                }\n            }\n            if( Identified ){\n                k = l;\n                break;\n            }\n        }\n//        cout << \"k = \" << k << endl;\n        for(int i=0; i<N; i+=k*2){\n            int *tmpArr = new int[k*2];\n            int lef = i;\n            const int mid = ( lef+k < N ) ? lef+k : N;\n            const int rig = ( mid+k < N ) ? mid+k : N;\n            int cur = mid;\n            int j=0;\n            while( lef < mid and cur < rig ){\n                if( tmp[lef] < tmp[cur] ){\n                    tmpArr[j++] = tmp[lef++];\n                }else{\n                    tmpArr[j++] = tmp[cur++];\n                }\n            }\n            while( lef < mid ){\n                tmpArr[j++] = tmp[lef++];\n            }\n            while( cur < rig ){\n                tmpArr[j++] = tmp[cur++];\n            }\n            for(int t=0; t!=j; ++t){\n                tmp[i+t] = tmpArr[t];\n            }\n            delete[] tmpArr;\n        }\n        for(int i=0; i!=N-1; ++i){\n            cout << tmp[i] << \" \";\n        }cout << tmp[N-1] << endl;\n    }\n    return 0;\n}\n\n```\n","slug":"PAT题解-B-1035","published":1,"updated":"2018-12-31T11:47:25.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjbbn001czq4isl93htlv","content":"<h1 id=\"题解-PAT-B-1035-插入与归并\"><a href=\"#题解-PAT-B-1035-插入与归并\" class=\"headerlink\" title=\"题解:PAT-B 1035 插入与归并\"></a>题解:PAT-B 1035 插入与归并</h1><p>这是一篇测试用文章，欢迎围观.</p>\n<h2 id=\"题目全文：\"><a href=\"#题目全文：\" class=\"headerlink\" title=\"题目全文：\"></a>题目全文：</h2><p>题目地址在<a href=\"https://www.patest.cn/contests/pat-b-practise/1035\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n<blockquote>\n<p>根据维基百科的定义：</p>\n</blockquote>\n<blockquote>\n<p>插入排序是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。如此迭代直到全部元素有序。</p>\n</blockquote>\n<blockquote>\n<p>归并排序进行如下迭代操作：首先将原始序列看成N个只包含1个元素的有序子序列，然后每次迭代归并两个相邻的有序子序列，直到最后只剩下1个有序的序列。</p>\n</blockquote>\n<blockquote>\n<p>现给定原始序列和由某排序算法产生的中间序列，请你判断该算法究竟是哪种排序算法？</p>\n</blockquote>\n<blockquote>\n<p>输入格式：</p>\n</blockquote>\n<blockquote>\n<p>输入在第一行给出正整数N (&lt;=100)；随后一行给出原始序列的N个整数；最后一行给出由某排序算法产生的中间序列。这里假设排序的目标序列是升序。数字间以空格分隔。</p>\n</blockquote>\n<blockquote>\n<p>输出格式：</p>\n</blockquote>\n<blockquote>\n<p>首先在第1行中输出“Insertion Sort”表示插入排序、或“Merge Sort”表示归并排序；然后在第2行中输出用该排序算法再迭代一轮的结果序列。题目保证每组测试的结果是唯一的。数字间以空格分隔，且行末不得有多余空格。</p>\n</blockquote>\n<p>输入样例1：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">3 1 2 8 7 5 9 4 6 0</span><br><span class=\"line\">1 2 3 7 8 5 9 4 6 0</span><br></pre></td></tr></table></figure></p>\n<p>输出样例1：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Insertion Sort</span><br><span class=\"line\">1 2 3 5 7 8 9 4 6 0</span><br></pre></td></tr></table></figure></p>\n<p>输入样例2：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">3 1 2 8 7 5 9 4 0 6</span><br><span class=\"line\">1 3 2 8 5 7 4 9 0 6</span><br></pre></td></tr></table></figure></p>\n<p>输出样例2：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Merge Sort</span><br><span class=\"line\">1 2 3 8 4 5 7 9 0 6</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"题目解读\"><a href=\"#题目解读\" class=\"headerlink\" title=\"题目解读\"></a>题目解读</h2><p>这是我刷乙级题时比较头疼的一道题，前后查阅了很多别人的代码，后又观看了陈越姥姥的<a href=\"http://www.icourse163.org/learn/ZJU-93001?tid=1002019005#/learn/content?type=detail&amp;id=1002635050\" target=\"_blank\" rel=\"noopener\">视频</a>总算弄明白了这道题需要注意哪些.</p>\n<ol>\n<li>如何区分简单插入排序和<strong>非递归</strong>的归并排序;</li>\n<li>如何根据测试用例的类型再迭代一次运算;</li>\n<li>如何处理边界测试.</li>\n</ol>\n<p>这里要强调一下本题使用递归的归并排序是<strong>无法AC</strong>的，本渣使用递归的归并排序最多只能得到17分. 关于递归的归并与迭代归并区别请围观<a href=\"https://en.wikipedia.org/wiki/Merge_sort\" target=\"_blank\" rel=\"noopener\">这里</a> (中文版省去了很多分析过程，强烈建议读英文原版)，另外，关于插入排序算法的Wiki在<a href=\"https://en.wikipedia.org/wiki/Insertion_sort\" target=\"_blank\" rel=\"noopener\">这里</a>.</p>\n<h2 id=\"解题过程\"><a href=\"#解题过程\" class=\"headerlink\" title=\"解题过程\"></a>解题过程</h2><h3 id=\"如何区分简单插入排序和非递归的归并排序\"><a href=\"#如何区分简单插入排序和非递归的归并排序\" class=\"headerlink\" title=\"如何区分简单插入排序和非递归的归并排序\"></a>如何区分简单插入排序和非递归的归并排序</h3><p>只要抓住两个关键点即可：</p>\n<ol>\n<li><strong>使用插入排序序列的开头一部分一定是有序的</strong>;</li>\n<li><strong>无序部分与原文一致</strong>．</li>\n</ol>\n<p>比如下面这个例子:</p>\n<blockquote>\n<p>10<br>3 1 2 8 7 <code>5 9 4 6 0</code><br><strong>1 2 3 7 8</strong> <code>5 9 4 6 0</code></p>\n</blockquote>\n<p>我们可以这样来判断:</p>\n<ol>\n<li>首先扫描 <code>1 2 3 7 8</code> 为有序序列，当读取到<code>5</code>时发现 <code>8 &gt; 5</code>暂停，执行步骤2;</li>\n<li>从<code>5</code>开始对后面的序列与原序列进行比较，若发现全部是匹配的，则该序列的排序算法为插入排序,并记录下开始无序的位置;否则为归并排序.</li>\n</ol>\n<p>显然后面的部分与原文一致，因此这个序列排序使用的是插入排序. 注意这里必须满足以上<strong><em>两个</em></strong>条件才能推出插入排序算法．</p>\n<p>这里不得不提到有同学使用从后向前寻找不匹配点的方法来判断排序算法，这个方法是不对的，比如下面这个例子:  </p>\n<blockquote>\n<p>3 1 2 8 7 5 9 4 <code>0 6</code><br>1 3 2 8 5 7 4 9 <code>0 6</code>  </p>\n</blockquote>\n<p>虽然这里的后面一部分<code>0　6</code>与原题一致，但它并不满足前置子序列有序，因此它不是插入排序，后面的测试用例就有一个测试点来卡这种情况。</p>\n<p>对于如何判断是否使用归并排序则相对麻烦，考虑到题目中明确指出测试用例是合法的并且只能是归并和插入排序两种之一，所以这里使用排除法来确定归并排序．</p>\n<h3 id=\"如何根据测试用例的类型再迭代一次运算\"><a href=\"#如何根据测试用例的类型再迭代一次运算\" class=\"headerlink\" title=\"如何根据测试用例的类型再迭代一次运算\"></a>如何根据测试用例的类型再迭代一次运算</h3><h4 id=\"对于插入排序\"><a href=\"#对于插入排序\" class=\"headerlink\" title=\"对于插入排序\"></a>对于插入排序</h4><p>这个就非常简单了，如果明白了插入排序的算法，直接从上面记录下的点进行再迭代一次即可。</p>\n<h4 id=\"对于归并排序\"><a href=\"#对于归并排序\" class=\"headerlink\" title=\"对于归并排序\"></a>对于归并排序</h4><p>这个相对要麻烦一些，其关键步骤是确定归并段的长度。有的同学想到像插入排序一样从头开始寻找最长有序子序列，这是不对的，因为题意中归并排序是迭代一轮后才得到题目序列，即题目序列被分为若干归并段，<strong>每一小段都是有序的</strong>，因此若原文前一段本身已经有序，那么进行归并后得到的序列一定也是整体有序的，那么也就无法通过通过前置子序列的最大有序长度来代表所有归并段的长度。比如下面这个例子:</p>\n<blockquote>\n<p>10<br><code>2 1 8 3</code> <code>7 5</code> <code>9 4</code> <code>0 6</code><br><code>1 2 3 8</code> <code>5 7</code> <code>4 9</code> <code>0 6</code></p>\n</blockquote>\n<p>显然我们无法从<code>1 3 2 8</code>是最长前置有序子列就判断出归并段的长度为<code>4</code>。正确答案应该是<code>2</code>。</p>\n<p>有的同学使用模拟法，即对原序列进行分步归并排序，每迭代一次都与题目序列进行比较，直到发现匹配的情况为止。　这种方法在题目所给的时间限制下也能通过，但本着认真负责的态度，我们应该寻找一种更加<strong>聪明</strong>的办法来确定</p>\n<p>通过陈越姥姥的启发，我们总结出一下步骤判断最大归并段的长度：</p>\n<ol>\n<li>假设每个归并段的长度为<code>l</code>, (<code>l</code>的初始值为<code>2</code>，因为一个元素不存在有序无序的概念);</li>\n<li>对所有相邻两个归并段相连的两个元素进行比较，若该两元素仍有序，则归并段的长度<code>l *= 2</code>; 否则终止循环，<code>l</code>即为要确定的最大归并段长度。</li>\n</ol>\n<p>程序实现起来就是通过<code>for(l=2; l&lt;=N; l*=2)</code>这个大循环内部完成的。  </p>\n<p>当确定了最大归并段长度，余下的工作就变得简单了，直接再迭代归并一次即可。<br>具体代码可以参考最后的AC代码。</p>\n<h3 id=\"如何处理边界测试\"><a href=\"#如何处理边界测试\" class=\"headerlink\" title=\"如何处理边界测试\"></a>如何处理边界测试</h3><p>PAT的题目测试不给出测试数据以及测试提示，比较考验同学们的程序测试能力，本渣在通过这道题时前后想了很久，也提交了很多次，还是在看了陈越姥姥的讲解后才知道测试数据的提示，测试数据包含一下几类：</p>\n<ol>\n<li>最小<code>N</code>(<code>N = 4</code>，因为只有当<code>N &gt;= 4</code>时才能区分出归并排序与插入排序中间子列).<ul>\n<li>插入排序第<code>1</code>步，什么都没改变;</li>\n<li>归并排序第<code>1</code>步，什么都变了;</li>\n</ul>\n</li>\n<li>尾部子列无变化，但是前面变了(归并).</li>\n<li>最大<code>N</code>.</li>\n</ol>\n<p>有了如上提示，加上前面的讲解，相信读者一定能够独立AC这道题了。</p>\n<h2 id=\"AC代码\"><a href=\"#AC代码\" class=\"headerlink\" title=\"AC代码:\"></a>AC代码:</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//#include &lt;fstream&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">cin</span>;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span>;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//    std::ifstream cin(\"in.txt\");</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> N;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; N;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *Orig = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i!=N; ++i)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; Orig[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *tmp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i!=N; ++i)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; tmp[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">k</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=k; i!=N<span class=\"number\">-1</span>; ++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( tmp[i] &gt; tmp[i+<span class=\"number\">1</span>] )&#123;</span><br><span class=\"line\">            k = i;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">IsInsertion</span><span class=\"params\">(<span class=\"literal\">true</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=++k; i!=N; ++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( tmp[i] != Orig[i] )&#123;</span><br><span class=\"line\">            IsInsertion = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( IsInsertion )&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Insertion Sort\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=k; i!=<span class=\"number\">0</span>; --i)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( tmp[i] &lt; tmp[i<span class=\"number\">-1</span>] )&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> t = tmp[i];</span><br><span class=\"line\">                tmp[i] = tmp[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">                tmp[i<span class=\"number\">-1</span>] = t;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i!=N<span class=\"number\">-1</span>; ++i)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; tmp[i] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        &#125;<span class=\"built_in\">cout</span> &lt;&lt; tmp[N<span class=\"number\">-1</span>] &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Merge Sort\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> Identified = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> l=<span class=\"number\">2</span>; l&lt;=N; l*=<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=l; i&lt;N; i += <span class=\"number\">2</span>*l)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>( tmp[i<span class=\"number\">-1</span>] &gt; tmp[i] )&#123;</span><br><span class=\"line\">                    Identified = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( Identified )&#123;</span><br><span class=\"line\">                k = l;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//        cout &lt;&lt; \"k = \" &lt;&lt; k &lt;&lt; endl;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;N; i+=k*<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> *tmpArr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[k*<span class=\"number\">2</span>];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> lef = i;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mid = ( lef+k &lt; N ) ? lef+k : N;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> rig = ( mid+k &lt; N ) ? mid+k : N;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> cur = mid;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>( lef &lt; mid <span class=\"keyword\">and</span> cur &lt; rig )&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>( tmp[lef] &lt; tmp[cur] )&#123;</span><br><span class=\"line\">                    tmpArr[j++] = tmp[lef++];</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    tmpArr[j++] = tmp[cur++];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>( lef &lt; mid )&#123;</span><br><span class=\"line\">                tmpArr[j++] = tmp[lef++];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>( cur &lt; rig )&#123;</span><br><span class=\"line\">                tmpArr[j++] = tmp[cur++];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> t=<span class=\"number\">0</span>; t!=j; ++t)&#123;</span><br><span class=\"line\">                tmp[i+t] = tmpArr[t];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">delete</span>[] tmpArr;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i!=N<span class=\"number\">-1</span>; ++i)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; tmp[i] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        &#125;<span class=\"built_in\">cout</span> &lt;&lt; tmp[N<span class=\"number\">-1</span>] &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"题解-PAT-B-1035-插入与归并\"><a href=\"#题解-PAT-B-1035-插入与归并\" class=\"headerlink\" title=\"题解:PAT-B 1035 插入与归并\"></a>题解:PAT-B 1035 插入与归并</h1><p>这是一篇测试用文章，欢迎围观.</p>\n<h2 id=\"题目全文：\"><a href=\"#题目全文：\" class=\"headerlink\" title=\"题目全文：\"></a>题目全文：</h2><p>题目地址在<a href=\"https://www.patest.cn/contests/pat-b-practise/1035\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n<blockquote>\n<p>根据维基百科的定义：</p>\n</blockquote>\n<blockquote>\n<p>插入排序是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。如此迭代直到全部元素有序。</p>\n</blockquote>\n<blockquote>\n<p>归并排序进行如下迭代操作：首先将原始序列看成N个只包含1个元素的有序子序列，然后每次迭代归并两个相邻的有序子序列，直到最后只剩下1个有序的序列。</p>\n</blockquote>\n<blockquote>\n<p>现给定原始序列和由某排序算法产生的中间序列，请你判断该算法究竟是哪种排序算法？</p>\n</blockquote>\n<blockquote>\n<p>输入格式：</p>\n</blockquote>\n<blockquote>\n<p>输入在第一行给出正整数N (&lt;=100)；随后一行给出原始序列的N个整数；最后一行给出由某排序算法产生的中间序列。这里假设排序的目标序列是升序。数字间以空格分隔。</p>\n</blockquote>\n<blockquote>\n<p>输出格式：</p>\n</blockquote>\n<blockquote>\n<p>首先在第1行中输出“Insertion Sort”表示插入排序、或“Merge Sort”表示归并排序；然后在第2行中输出用该排序算法再迭代一轮的结果序列。题目保证每组测试的结果是唯一的。数字间以空格分隔，且行末不得有多余空格。</p>\n</blockquote>\n<p>输入样例1：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">3 1 2 8 7 5 9 4 6 0</span><br><span class=\"line\">1 2 3 7 8 5 9 4 6 0</span><br></pre></td></tr></table></figure></p>\n<p>输出样例1：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Insertion Sort</span><br><span class=\"line\">1 2 3 5 7 8 9 4 6 0</span><br></pre></td></tr></table></figure></p>\n<p>输入样例2：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">3 1 2 8 7 5 9 4 0 6</span><br><span class=\"line\">1 3 2 8 5 7 4 9 0 6</span><br></pre></td></tr></table></figure></p>\n<p>输出样例2：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Merge Sort</span><br><span class=\"line\">1 2 3 8 4 5 7 9 0 6</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"题目解读\"><a href=\"#题目解读\" class=\"headerlink\" title=\"题目解读\"></a>题目解读</h2><p>这是我刷乙级题时比较头疼的一道题，前后查阅了很多别人的代码，后又观看了陈越姥姥的<a href=\"http://www.icourse163.org/learn/ZJU-93001?tid=1002019005#/learn/content?type=detail&amp;id=1002635050\" target=\"_blank\" rel=\"noopener\">视频</a>总算弄明白了这道题需要注意哪些.</p>\n<ol>\n<li>如何区分简单插入排序和<strong>非递归</strong>的归并排序;</li>\n<li>如何根据测试用例的类型再迭代一次运算;</li>\n<li>如何处理边界测试.</li>\n</ol>\n<p>这里要强调一下本题使用递归的归并排序是<strong>无法AC</strong>的，本渣使用递归的归并排序最多只能得到17分. 关于递归的归并与迭代归并区别请围观<a href=\"https://en.wikipedia.org/wiki/Merge_sort\" target=\"_blank\" rel=\"noopener\">这里</a> (中文版省去了很多分析过程，强烈建议读英文原版)，另外，关于插入排序算法的Wiki在<a href=\"https://en.wikipedia.org/wiki/Insertion_sort\" target=\"_blank\" rel=\"noopener\">这里</a>.</p>\n<h2 id=\"解题过程\"><a href=\"#解题过程\" class=\"headerlink\" title=\"解题过程\"></a>解题过程</h2><h3 id=\"如何区分简单插入排序和非递归的归并排序\"><a href=\"#如何区分简单插入排序和非递归的归并排序\" class=\"headerlink\" title=\"如何区分简单插入排序和非递归的归并排序\"></a>如何区分简单插入排序和非递归的归并排序</h3><p>只要抓住两个关键点即可：</p>\n<ol>\n<li><strong>使用插入排序序列的开头一部分一定是有序的</strong>;</li>\n<li><strong>无序部分与原文一致</strong>．</li>\n</ol>\n<p>比如下面这个例子:</p>\n<blockquote>\n<p>10<br>3 1 2 8 7 <code>5 9 4 6 0</code><br><strong>1 2 3 7 8</strong> <code>5 9 4 6 0</code></p>\n</blockquote>\n<p>我们可以这样来判断:</p>\n<ol>\n<li>首先扫描 <code>1 2 3 7 8</code> 为有序序列，当读取到<code>5</code>时发现 <code>8 &gt; 5</code>暂停，执行步骤2;</li>\n<li>从<code>5</code>开始对后面的序列与原序列进行比较，若发现全部是匹配的，则该序列的排序算法为插入排序,并记录下开始无序的位置;否则为归并排序.</li>\n</ol>\n<p>显然后面的部分与原文一致，因此这个序列排序使用的是插入排序. 注意这里必须满足以上<strong><em>两个</em></strong>条件才能推出插入排序算法．</p>\n<p>这里不得不提到有同学使用从后向前寻找不匹配点的方法来判断排序算法，这个方法是不对的，比如下面这个例子:  </p>\n<blockquote>\n<p>3 1 2 8 7 5 9 4 <code>0 6</code><br>1 3 2 8 5 7 4 9 <code>0 6</code>  </p>\n</blockquote>\n<p>虽然这里的后面一部分<code>0　6</code>与原题一致，但它并不满足前置子序列有序，因此它不是插入排序，后面的测试用例就有一个测试点来卡这种情况。</p>\n<p>对于如何判断是否使用归并排序则相对麻烦，考虑到题目中明确指出测试用例是合法的并且只能是归并和插入排序两种之一，所以这里使用排除法来确定归并排序．</p>\n<h3 id=\"如何根据测试用例的类型再迭代一次运算\"><a href=\"#如何根据测试用例的类型再迭代一次运算\" class=\"headerlink\" title=\"如何根据测试用例的类型再迭代一次运算\"></a>如何根据测试用例的类型再迭代一次运算</h3><h4 id=\"对于插入排序\"><a href=\"#对于插入排序\" class=\"headerlink\" title=\"对于插入排序\"></a>对于插入排序</h4><p>这个就非常简单了，如果明白了插入排序的算法，直接从上面记录下的点进行再迭代一次即可。</p>\n<h4 id=\"对于归并排序\"><a href=\"#对于归并排序\" class=\"headerlink\" title=\"对于归并排序\"></a>对于归并排序</h4><p>这个相对要麻烦一些，其关键步骤是确定归并段的长度。有的同学想到像插入排序一样从头开始寻找最长有序子序列，这是不对的，因为题意中归并排序是迭代一轮后才得到题目序列，即题目序列被分为若干归并段，<strong>每一小段都是有序的</strong>，因此若原文前一段本身已经有序，那么进行归并后得到的序列一定也是整体有序的，那么也就无法通过通过前置子序列的最大有序长度来代表所有归并段的长度。比如下面这个例子:</p>\n<blockquote>\n<p>10<br><code>2 1 8 3</code> <code>7 5</code> <code>9 4</code> <code>0 6</code><br><code>1 2 3 8</code> <code>5 7</code> <code>4 9</code> <code>0 6</code></p>\n</blockquote>\n<p>显然我们无法从<code>1 3 2 8</code>是最长前置有序子列就判断出归并段的长度为<code>4</code>。正确答案应该是<code>2</code>。</p>\n<p>有的同学使用模拟法，即对原序列进行分步归并排序，每迭代一次都与题目序列进行比较，直到发现匹配的情况为止。　这种方法在题目所给的时间限制下也能通过，但本着认真负责的态度，我们应该寻找一种更加<strong>聪明</strong>的办法来确定</p>\n<p>通过陈越姥姥的启发，我们总结出一下步骤判断最大归并段的长度：</p>\n<ol>\n<li>假设每个归并段的长度为<code>l</code>, (<code>l</code>的初始值为<code>2</code>，因为一个元素不存在有序无序的概念);</li>\n<li>对所有相邻两个归并段相连的两个元素进行比较，若该两元素仍有序，则归并段的长度<code>l *= 2</code>; 否则终止循环，<code>l</code>即为要确定的最大归并段长度。</li>\n</ol>\n<p>程序实现起来就是通过<code>for(l=2; l&lt;=N; l*=2)</code>这个大循环内部完成的。  </p>\n<p>当确定了最大归并段长度，余下的工作就变得简单了，直接再迭代归并一次即可。<br>具体代码可以参考最后的AC代码。</p>\n<h3 id=\"如何处理边界测试\"><a href=\"#如何处理边界测试\" class=\"headerlink\" title=\"如何处理边界测试\"></a>如何处理边界测试</h3><p>PAT的题目测试不给出测试数据以及测试提示，比较考验同学们的程序测试能力，本渣在通过这道题时前后想了很久，也提交了很多次，还是在看了陈越姥姥的讲解后才知道测试数据的提示，测试数据包含一下几类：</p>\n<ol>\n<li>最小<code>N</code>(<code>N = 4</code>，因为只有当<code>N &gt;= 4</code>时才能区分出归并排序与插入排序中间子列).<ul>\n<li>插入排序第<code>1</code>步，什么都没改变;</li>\n<li>归并排序第<code>1</code>步，什么都变了;</li>\n</ul>\n</li>\n<li>尾部子列无变化，但是前面变了(归并).</li>\n<li>最大<code>N</code>.</li>\n</ol>\n<p>有了如上提示，加上前面的讲解，相信读者一定能够独立AC这道题了。</p>\n<h2 id=\"AC代码\"><a href=\"#AC代码\" class=\"headerlink\" title=\"AC代码:\"></a>AC代码:</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//#include &lt;fstream&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">cin</span>;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span>;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//    std::ifstream cin(\"in.txt\");</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> N;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; N;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *Orig = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i!=N; ++i)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; Orig[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *tmp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i!=N; ++i)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; tmp[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">k</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=k; i!=N<span class=\"number\">-1</span>; ++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( tmp[i] &gt; tmp[i+<span class=\"number\">1</span>] )&#123;</span><br><span class=\"line\">            k = i;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">IsInsertion</span><span class=\"params\">(<span class=\"literal\">true</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=++k; i!=N; ++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( tmp[i] != Orig[i] )&#123;</span><br><span class=\"line\">            IsInsertion = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( IsInsertion )&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Insertion Sort\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=k; i!=<span class=\"number\">0</span>; --i)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( tmp[i] &lt; tmp[i<span class=\"number\">-1</span>] )&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> t = tmp[i];</span><br><span class=\"line\">                tmp[i] = tmp[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">                tmp[i<span class=\"number\">-1</span>] = t;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i!=N<span class=\"number\">-1</span>; ++i)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; tmp[i] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        &#125;<span class=\"built_in\">cout</span> &lt;&lt; tmp[N<span class=\"number\">-1</span>] &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Merge Sort\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> Identified = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> l=<span class=\"number\">2</span>; l&lt;=N; l*=<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=l; i&lt;N; i += <span class=\"number\">2</span>*l)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>( tmp[i<span class=\"number\">-1</span>] &gt; tmp[i] )&#123;</span><br><span class=\"line\">                    Identified = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( Identified )&#123;</span><br><span class=\"line\">                k = l;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//        cout &lt;&lt; \"k = \" &lt;&lt; k &lt;&lt; endl;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;N; i+=k*<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> *tmpArr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[k*<span class=\"number\">2</span>];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> lef = i;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mid = ( lef+k &lt; N ) ? lef+k : N;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> rig = ( mid+k &lt; N ) ? mid+k : N;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> cur = mid;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>( lef &lt; mid <span class=\"keyword\">and</span> cur &lt; rig )&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>( tmp[lef] &lt; tmp[cur] )&#123;</span><br><span class=\"line\">                    tmpArr[j++] = tmp[lef++];</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    tmpArr[j++] = tmp[cur++];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>( lef &lt; mid )&#123;</span><br><span class=\"line\">                tmpArr[j++] = tmp[lef++];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>( cur &lt; rig )&#123;</span><br><span class=\"line\">                tmpArr[j++] = tmp[cur++];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> t=<span class=\"number\">0</span>; t!=j; ++t)&#123;</span><br><span class=\"line\">                tmp[i+t] = tmpArr[t];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">delete</span>[] tmpArr;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i!=N<span class=\"number\">-1</span>; ++i)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; tmp[i] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        &#125;<span class=\"built_in\">cout</span> &lt;&lt; tmp[N<span class=\"number\">-1</span>] &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"浅谈科里奥利力","date":"2017-08-23T05:25:06.000Z","_content":"\n\n## 简介\n\n苯渣在补力学时卡在了科氏力这一节，经过 Mr. Ren , 物吧大佬以及 [Wikipedia](https://en.wikipedia.org/wiki/Coriolis_force) 上的详细解释，我总算稍稍弄懂了这个家伙到底是怎么产生的了，于是写下本文分享一下愚见。\n\n# 引子\n\n坐过旋转木马的同学应该会有这样的体验：当坐在绕轴旋转的座位上向轴扔一个纸团（乱扔垃圾什么的最讨厌啦）时，纸团并不会砸到轴上，似乎纸团总是会偏离半径方向，并且总是偏向一个方向，这是为什么呢？这就要涉及到这篇文章要讲到的主角——科里奥利力。\n\n\n\n# 什么是科里奥利力？\n\n引用 Wikipedia 上的描述就是：\n\n> **科里奥利力**（简称：**科氏力**）是对旋转体系中进行直线运动的[质点](https://zh.wikipedia.org/wiki/%E8%B4%A8%E7%82%B9)由于[惯性](https://zh.wikipedia.org/wiki/%E6%85%A3%E6%80%A7)相对于旋转体系产生的直线运动的偏移的一种描述。此现象由法国著名数学家兼物理学家[古斯塔夫・科里奥利](https://zh.wikipedia.org/wiki/%E7%A7%91%E9%87%8C%E5%A5%A7%E5%88%A9)发现，因而得名；同时由于这种力在[地球自转](https://zh.wikipedia.org/wiki/%E5%9C%B0%E7%90%83%E8%87%AA%E8%BD%AC)下产生，因此又称为“**地转偏向力**”。\n\n个人理解：\n\n> 以一个旋转体系为参考系时，若研究对象相对于参考系的有非轴向运动的分量（或在垂直轴的平面内有运动分量）时，这个方向的运动分量会受到一个法向惯性力的作用而偏离原来的运动，这个力就是科里奥利力。\n\n上面的描述有两个要点：\n\n1. 参考体系为旋转体系，这也就意味着该参考系是一个非惯性系，其中必然要考虑惯性力的作用；\n2. 研究对象相对于参考系有相对运动，并且这个运动在垂直轴向的平面内有分量。\n\n# 科里奥利力如何产生？\n\n## 粗略的理解\n\n就拿引子里旋转木马的例子：\n\n假设旋转木马是做匀速圆周运动，角速度为 $ \\vec{\\omega} $ ，读者轨迹半径为 $\\vec{r}$ ，那么读者的公转线速度为\n$$\n\\vec{v}_t = \\vec{\\omega} \\times \\vec{r} \\notag\n$$\n如同这样：\n\n<img src=\"fig1.png\" width=\"400\" />\n\n（**注意这里的变量用矢量表示**）\n\n朝径向，也就是 $-\\vec{r}$ 方向扔一个纸团时，这个纸团既有朝向径向的速度 $\\vec{v}_n$ ，又有线速度 $\\vec{\\omega}\\times\\vec{r}$ ，当其运动到圆内侧时，内侧的线速度 \n$$\n\\vec{v}'_t = \\vec{\\omega}\\times\\vec{r}' < \\vec{\\omega}\\times\\vec{r} = \\vec{v}_t\n$$\n很自然地，纸团此时的切向速度比其所在圆上的的线速度更大，也就偏移了所谓的“直线”，读者视角俯视图见下图：\n\n<img src=\"fig2.svg\" width=\"300\">\n\n从这里也可以看出，所谓的“力”事实上并不存在，纸团的偏转完全是纸团的切向速度大于圆周运动线速度而偏离原来的位置，平面内没有任何力的作用使其真正偏转——假如纸团不受空气阻力，在观众看来，纸团应该做抛体运动，自然其轨迹的俯视图为一条直线，但是当我们置身于旋转木马中时，它的确看起来有一个“力”使其“偏转”，这又如何解释呢？\n\n问题出在我们**置身于旋转木马中**。\n\n## 更严格的推导\n\n继承上面的假设，旋转木马做匀速圆周运动，其可以看成一个[非惯性系](https://en.wikipedia.org/wiki/Inertial_frame_of_reference)，在这个参考系中，牛顿第一定律并不成立，为了使牛顿第一定律看起来成立，我们引入了[惯性力](https://en.wikipedia.org/wiki/Fictitious_force)。\n\n现在，让我们做回观众：\n\n<img src=\"fig3.png\" width=\"500\">\n\n显然有\n\n$$\n\\vec{R}=\\vec{r}_\\perp = \\vec{r} - \\vec{r}_\\parallel = \\vec{r} - \\frac{(\\vec{r}\\cdot\\vec{\\omega}) \\cdot \\vec{\\omega}}{ {\\omega}^2}\n$$\n\n将其简单变形\n\n$$\n{\\omega}^2 \\vec{R} = {\\omega}^2 \\vec{r} -(\\vec{r}\\cdot\\vec{\\omega}) \\cdot \\vec{\\omega} = -\\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r})\n$$\n\n此时的 ${\\omega}^2 \\vec{R}$ 就是我们熟知的惯性离心加速度，方向与 $\\vec{R}$ 一致，它也是惯性加速度的一种，但不是我们今天要研究的主角。\n\n取一小段时间 $\\Delta t$ ：\n\n<img src=\"fig4.png\" width=\"300\">\n\n矢量 $\\vec{P}$ 的增量为\n\n$$\n\\Delta P \\approx P\\sin\\theta\\omega\\Delta t=|\\vec{\\omega}\\times \\vec{P}|\\Delta t\n$$\n\n$\\Delta \\vec{P}$方向与 $\\vec{\\omega}$ 和 $\\vec{P}$ 的方向都垂直，即为 $\\vec{\\omega}\\times\\vec{P}$ 的方向，因此上式可以写为\n\n$$\n\\Delta \\vec{P} \\approx\\vec{\\omega}\\times \\vec{P}\\Delta t\n$$\n\n故 $\\vec{P}$ 的变化率可以表示为其对时间的导数\n\n$$\n\\frac{\\mathrm{D}\\vec{P}}{\\mathrm{D}t} = \\lim_{\\Delta t\\rightarrow0} \\frac{\\Delta\\vec{P}}{\\Delta t} = \\vec{\\omega} \\times \\vec{P}\n$$\n上式中大写的 $\\mathrm D$ 表示以静止系统为参考系时各变量的微分，而小写的 $\\mathrm d$ 则表示以旋转系统为参考系时变量的微分。上面式子中我们假定 $\\vec{P}$ 在旋转体系中都是恒矢量，否则 $\\vec{P}$ 的导数应该表示为\n\n$$\n\\frac{\\mathrm{D}\\vec{P}}{\\mathrm{D}t} = \\lim_{\\Delta t\\rightarrow0} \\frac{\\Delta\\vec{P}}{\\Delta t} = \\vec{\\omega} \\times \\vec{P} + \\frac{\\mathrm d \\vec{P}}{\\mathrm d t}\n$$\n\n上式适用于任何矢量 $\\vec{P}$ ，我们取一个质点的位矢 $\\vec{r} = \\vec{P}$ ，于是有\n\n$$\n\\frac{\\mathrm D \\vec{r}}{\\mathrm D t} = \\vec{\\omega}\\times \\vec{r} + \\frac{\\mathrm d\\vec{r}}{\\mathrm d t} = \\vec{\\omega}\\times \\vec{r} + \\vec{v}\n$$\n\n其中的 $\\vec{v}$ 表示质点相对于旋转体系的速度矢量。对上式再次求导，即得到加速度\n\n$$\\begin{aligned}\n\\vec{A} = \\frac{\\mathrm D^2 \\vec{r}}{\\mathrm D t^2} &= \\vec{\\omega}\\times\\frac{\\mathrm D\\vec{r}}{\\mathrm D t} + \\frac{\\mathrm d \\vec{v}}{\\mathrm dt} \\\\\n\t&= \\vec{\\omega}\\times(\\vec{\\omega}\\times \\vec{r} + \\vec{v}) + (\\vec{\\omega}\\times\\vec{v} + \\frac{\\mathrm d\\vec{v}}{\\mathrm d t}) \\\\\n\t&= \\vec{\\omega}\\times(\\vec{\\omega}\\times \\vec{r} ) + 2\\vec{\\omega}\\times\\vec{v} + \\vec{a}\n\\end{aligned}$$\n\n因此\n\n$$\n\\vec{a} =\\vec{A} - \\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r}) - 2\\vec{\\omega}\\times\\vec{v}\n$$\n上式中 $\\vec{a}$ 表示质点相对于旋转体系的加速度，$\\vec{A}$ 是由真实的力提供的加速度，后面两项都是“假想”存在的加速度，即惯性加速度。其中 $-\\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r})$ 是我们已知的惯性离心加速度，另一项 $-2\\vec{\\omega}\\times\\vec{r}$ 就是**科里奥利加速度**，我们用 $\\vec{a}_c$ 表示，有了科里奥利加速度，就得到科里奥利力 $\\vec{f}_c = m\\vec{a}_c$ 。\n\n根据右手定则，可以判断出其始终垂直于质点相对于旋转体系的速度，因此，质点相对于旋转体系运动时出现偏转也就很自然了。\n\n# 实际应用\n\n既然知道了科里奥利力是如何产生，那么知道这个东西对我们有什么用处呢？~~（可以拿来装X）~~ \n\n## 可以拿来侧纬度啦~\n\n我们所置身的地球就是一个旋转体系，只是它旋转得太慢了，平时难以察觉到科里奥利力的存在，但是有一种东西可以反映出科里奥利力的存在，那就是[傅科摆](https://en.wikipedia.org/wiki/Foucault_pendulum) ，如果你有足够的耐心观察它足够长的时间并确定它进动周期，你就可以很容易算出你所在位置的纬度，后面我们会给上推导这个公式的过程。\n\n为了理解如何通过傅科摆的进动角速度确定纬度，我们先来看一个简单的例子：\n\n<img src=\"fig5.png\" width=\"500\">\n\n一个可以旋转的圆盘上有一个单摆，当缓慢旋转圆盘时，我们假设惯性离心力很小，只有科里奥利力作用于单摆运动的切向。 当我们旋转圆盘 $90^\\circ$ 时，在静止体系观看单摆的摆平面没有任何变化，只是单纯的平移而已，没有任何转动，但是当以圆盘为参考系时（坐在 $C'$ 的位置向 $A$ 看），单摆的摆平面已经旋转了 $90^\\circ$ ，因此以圆盘的视角来观察这个现象时单摆进动的角速度就是圆盘转动的角速度。\n\n下面的动画应该很形象了：\n\n<img src=\"fig5.gif\">\n\n现在，我们让将摆线放大到67m长；将圆盘换成南极点的地面（相信这么做一定会有一群好奇的企鹅来围观）；讲缓慢转动圆盘换成地球大大的缓慢自转，这个上面的结论依然成立（当然如果你有上帝视角来看极点上的单摆进动，会更容易明白，就像看懂上面小圆盘上的单摆一样）。\n\n接下来，让我们把情况更加一般化，将这个巨大的单摆放到地球的任何可行的位置，问题变成了旋转球面上直线运动的进动问题，话不多说，看图：\n\n<img src=\"fig6_1.png\" width=\"400\"/>\n\n假设有一单摆在 $C$ 点（三个蓝点中最下面的那个），且在 $C$ 点建立一个坐标系（为了不使图更乱，我就不画了），平面 $CAE$ ~~（说得装X一些叫“C点所在子午面”）~~如下：\n\n<img src=\"fig6_2.svg\" width=\"150\">\n\n其中 $A$ 是球心， $AC$ 是半径， $CE \\perp CA$ 并且 $E$ 落在自转轴上，$\\angle \\psi$ 表示纬度，$\\angle \\theta$ 则是 $\\angle \\psi$ 的余角。\n\n我们取一小段时间 $\\Delta t$ ，由于地球的自转，单摆从 $C$ 点运动到 $D$ 点，那么 $D$ 点出坐标系的 $y'$ 轴与 $C$ 点处 $y$ 轴所成夹角即为坐标系偏转的角度 $\\angle \\text{看这里}$ （如下图），这个角度也就是在 $\\Delta t$ 时间内单摆进动的角度，现在只要求出 $\\angle \\text{看这里}$ 与 $\\omega \\Delta t$ 之间的关系即可求出单摆进动角速度与地球自转角速度的关系。\n\n<img src=\"fig6_3.svg\" width=\"300\">\n\n下面来求这个关系：\n\n$$\\begin{aligned}\n\\angle \\text{看这里} = \\angle CED  &=  \\frac {\\widehat{CD}}{CE} \\\\\n\t\t\t\t\t& = \\frac{ CE \\times \\sin\\psi \\times \\omega\\Delta t }{ CE } \\\\\n\t\t\t\t\t& = \\omega\\Delta t \\sin\\psi\n\\end{aligned}$$\n\n于是，单摆进动的角速度为\n\n$$\\begin{aligned}\n\\varOmega & = \\lim_{\\Delta t \\rightarrow 0} \\frac{\\angle \\text{看这里}} {\\Delta t} \\\\\n\t\t& = \\omega \\sin \\psi\n\\end{aligned}$$\n\n上面式子表明，当 $\\psi = \\pm 90 ^ \\circ$ 时，$\\varOmega = \\omega$ ，即当单摆处于极点时，其进动角速度等于地球自转角速度，也就是我们开始时提到单摆在圆盘时的情形。\n\n好了，现在回到傅科摆，只要我们观察足够长的时间，测量出其轨迹的进动角速度，又已知地球自转角速度，便可以轻松算出傅科摆所在的纬度。\n\n# 结语\n\n这是我在补《力学》时卡住的一个知识点，之前心中总把科里奥利力想象成惯性离心力那样，导致看到傅科摆时完全不知道如何理解，经过请教群友，老师以及动手画图实验，总算稍稍理解了，上面便是本渣的一点愚见，如有疏漏，还请在评论区指出，或邮件联系（联系方式见关于页面）。\n\n以上\n","source":"_posts/Coriolis-Force.md","raw":"---\ntitle: 浅谈科里奥利力\ntags:\n  - 物理学\n  - 经典力学\n  - 科里奥利力\ncategories:\n  - Physics\ndate: 2017-08-23 13:25:06\n---\n\n\n## 简介\n\n苯渣在补力学时卡在了科氏力这一节，经过 Mr. Ren , 物吧大佬以及 [Wikipedia](https://en.wikipedia.org/wiki/Coriolis_force) 上的详细解释，我总算稍稍弄懂了这个家伙到底是怎么产生的了，于是写下本文分享一下愚见。\n\n# 引子\n\n坐过旋转木马的同学应该会有这样的体验：当坐在绕轴旋转的座位上向轴扔一个纸团（乱扔垃圾什么的最讨厌啦）时，纸团并不会砸到轴上，似乎纸团总是会偏离半径方向，并且总是偏向一个方向，这是为什么呢？这就要涉及到这篇文章要讲到的主角——科里奥利力。\n\n\n\n# 什么是科里奥利力？\n\n引用 Wikipedia 上的描述就是：\n\n> **科里奥利力**（简称：**科氏力**）是对旋转体系中进行直线运动的[质点](https://zh.wikipedia.org/wiki/%E8%B4%A8%E7%82%B9)由于[惯性](https://zh.wikipedia.org/wiki/%E6%85%A3%E6%80%A7)相对于旋转体系产生的直线运动的偏移的一种描述。此现象由法国著名数学家兼物理学家[古斯塔夫・科里奥利](https://zh.wikipedia.org/wiki/%E7%A7%91%E9%87%8C%E5%A5%A7%E5%88%A9)发现，因而得名；同时由于这种力在[地球自转](https://zh.wikipedia.org/wiki/%E5%9C%B0%E7%90%83%E8%87%AA%E8%BD%AC)下产生，因此又称为“**地转偏向力**”。\n\n个人理解：\n\n> 以一个旋转体系为参考系时，若研究对象相对于参考系的有非轴向运动的分量（或在垂直轴的平面内有运动分量）时，这个方向的运动分量会受到一个法向惯性力的作用而偏离原来的运动，这个力就是科里奥利力。\n\n上面的描述有两个要点：\n\n1. 参考体系为旋转体系，这也就意味着该参考系是一个非惯性系，其中必然要考虑惯性力的作用；\n2. 研究对象相对于参考系有相对运动，并且这个运动在垂直轴向的平面内有分量。\n\n# 科里奥利力如何产生？\n\n## 粗略的理解\n\n就拿引子里旋转木马的例子：\n\n假设旋转木马是做匀速圆周运动，角速度为 $ \\vec{\\omega} $ ，读者轨迹半径为 $\\vec{r}$ ，那么读者的公转线速度为\n$$\n\\vec{v}_t = \\vec{\\omega} \\times \\vec{r} \\notag\n$$\n如同这样：\n\n<img src=\"fig1.png\" width=\"400\" />\n\n（**注意这里的变量用矢量表示**）\n\n朝径向，也就是 $-\\vec{r}$ 方向扔一个纸团时，这个纸团既有朝向径向的速度 $\\vec{v}_n$ ，又有线速度 $\\vec{\\omega}\\times\\vec{r}$ ，当其运动到圆内侧时，内侧的线速度 \n$$\n\\vec{v}'_t = \\vec{\\omega}\\times\\vec{r}' < \\vec{\\omega}\\times\\vec{r} = \\vec{v}_t\n$$\n很自然地，纸团此时的切向速度比其所在圆上的的线速度更大，也就偏移了所谓的“直线”，读者视角俯视图见下图：\n\n<img src=\"fig2.svg\" width=\"300\">\n\n从这里也可以看出，所谓的“力”事实上并不存在，纸团的偏转完全是纸团的切向速度大于圆周运动线速度而偏离原来的位置，平面内没有任何力的作用使其真正偏转——假如纸团不受空气阻力，在观众看来，纸团应该做抛体运动，自然其轨迹的俯视图为一条直线，但是当我们置身于旋转木马中时，它的确看起来有一个“力”使其“偏转”，这又如何解释呢？\n\n问题出在我们**置身于旋转木马中**。\n\n## 更严格的推导\n\n继承上面的假设，旋转木马做匀速圆周运动，其可以看成一个[非惯性系](https://en.wikipedia.org/wiki/Inertial_frame_of_reference)，在这个参考系中，牛顿第一定律并不成立，为了使牛顿第一定律看起来成立，我们引入了[惯性力](https://en.wikipedia.org/wiki/Fictitious_force)。\n\n现在，让我们做回观众：\n\n<img src=\"fig3.png\" width=\"500\">\n\n显然有\n\n$$\n\\vec{R}=\\vec{r}_\\perp = \\vec{r} - \\vec{r}_\\parallel = \\vec{r} - \\frac{(\\vec{r}\\cdot\\vec{\\omega}) \\cdot \\vec{\\omega}}{ {\\omega}^2}\n$$\n\n将其简单变形\n\n$$\n{\\omega}^2 \\vec{R} = {\\omega}^2 \\vec{r} -(\\vec{r}\\cdot\\vec{\\omega}) \\cdot \\vec{\\omega} = -\\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r})\n$$\n\n此时的 ${\\omega}^2 \\vec{R}$ 就是我们熟知的惯性离心加速度，方向与 $\\vec{R}$ 一致，它也是惯性加速度的一种，但不是我们今天要研究的主角。\n\n取一小段时间 $\\Delta t$ ：\n\n<img src=\"fig4.png\" width=\"300\">\n\n矢量 $\\vec{P}$ 的增量为\n\n$$\n\\Delta P \\approx P\\sin\\theta\\omega\\Delta t=|\\vec{\\omega}\\times \\vec{P}|\\Delta t\n$$\n\n$\\Delta \\vec{P}$方向与 $\\vec{\\omega}$ 和 $\\vec{P}$ 的方向都垂直，即为 $\\vec{\\omega}\\times\\vec{P}$ 的方向，因此上式可以写为\n\n$$\n\\Delta \\vec{P} \\approx\\vec{\\omega}\\times \\vec{P}\\Delta t\n$$\n\n故 $\\vec{P}$ 的变化率可以表示为其对时间的导数\n\n$$\n\\frac{\\mathrm{D}\\vec{P}}{\\mathrm{D}t} = \\lim_{\\Delta t\\rightarrow0} \\frac{\\Delta\\vec{P}}{\\Delta t} = \\vec{\\omega} \\times \\vec{P}\n$$\n上式中大写的 $\\mathrm D$ 表示以静止系统为参考系时各变量的微分，而小写的 $\\mathrm d$ 则表示以旋转系统为参考系时变量的微分。上面式子中我们假定 $\\vec{P}$ 在旋转体系中都是恒矢量，否则 $\\vec{P}$ 的导数应该表示为\n\n$$\n\\frac{\\mathrm{D}\\vec{P}}{\\mathrm{D}t} = \\lim_{\\Delta t\\rightarrow0} \\frac{\\Delta\\vec{P}}{\\Delta t} = \\vec{\\omega} \\times \\vec{P} + \\frac{\\mathrm d \\vec{P}}{\\mathrm d t}\n$$\n\n上式适用于任何矢量 $\\vec{P}$ ，我们取一个质点的位矢 $\\vec{r} = \\vec{P}$ ，于是有\n\n$$\n\\frac{\\mathrm D \\vec{r}}{\\mathrm D t} = \\vec{\\omega}\\times \\vec{r} + \\frac{\\mathrm d\\vec{r}}{\\mathrm d t} = \\vec{\\omega}\\times \\vec{r} + \\vec{v}\n$$\n\n其中的 $\\vec{v}$ 表示质点相对于旋转体系的速度矢量。对上式再次求导，即得到加速度\n\n$$\\begin{aligned}\n\\vec{A} = \\frac{\\mathrm D^2 \\vec{r}}{\\mathrm D t^2} &= \\vec{\\omega}\\times\\frac{\\mathrm D\\vec{r}}{\\mathrm D t} + \\frac{\\mathrm d \\vec{v}}{\\mathrm dt} \\\\\n\t&= \\vec{\\omega}\\times(\\vec{\\omega}\\times \\vec{r} + \\vec{v}) + (\\vec{\\omega}\\times\\vec{v} + \\frac{\\mathrm d\\vec{v}}{\\mathrm d t}) \\\\\n\t&= \\vec{\\omega}\\times(\\vec{\\omega}\\times \\vec{r} ) + 2\\vec{\\omega}\\times\\vec{v} + \\vec{a}\n\\end{aligned}$$\n\n因此\n\n$$\n\\vec{a} =\\vec{A} - \\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r}) - 2\\vec{\\omega}\\times\\vec{v}\n$$\n上式中 $\\vec{a}$ 表示质点相对于旋转体系的加速度，$\\vec{A}$ 是由真实的力提供的加速度，后面两项都是“假想”存在的加速度，即惯性加速度。其中 $-\\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r})$ 是我们已知的惯性离心加速度，另一项 $-2\\vec{\\omega}\\times\\vec{r}$ 就是**科里奥利加速度**，我们用 $\\vec{a}_c$ 表示，有了科里奥利加速度，就得到科里奥利力 $\\vec{f}_c = m\\vec{a}_c$ 。\n\n根据右手定则，可以判断出其始终垂直于质点相对于旋转体系的速度，因此，质点相对于旋转体系运动时出现偏转也就很自然了。\n\n# 实际应用\n\n既然知道了科里奥利力是如何产生，那么知道这个东西对我们有什么用处呢？~~（可以拿来装X）~~ \n\n## 可以拿来侧纬度啦~\n\n我们所置身的地球就是一个旋转体系，只是它旋转得太慢了，平时难以察觉到科里奥利力的存在，但是有一种东西可以反映出科里奥利力的存在，那就是[傅科摆](https://en.wikipedia.org/wiki/Foucault_pendulum) ，如果你有足够的耐心观察它足够长的时间并确定它进动周期，你就可以很容易算出你所在位置的纬度，后面我们会给上推导这个公式的过程。\n\n为了理解如何通过傅科摆的进动角速度确定纬度，我们先来看一个简单的例子：\n\n<img src=\"fig5.png\" width=\"500\">\n\n一个可以旋转的圆盘上有一个单摆，当缓慢旋转圆盘时，我们假设惯性离心力很小，只有科里奥利力作用于单摆运动的切向。 当我们旋转圆盘 $90^\\circ$ 时，在静止体系观看单摆的摆平面没有任何变化，只是单纯的平移而已，没有任何转动，但是当以圆盘为参考系时（坐在 $C'$ 的位置向 $A$ 看），单摆的摆平面已经旋转了 $90^\\circ$ ，因此以圆盘的视角来观察这个现象时单摆进动的角速度就是圆盘转动的角速度。\n\n下面的动画应该很形象了：\n\n<img src=\"fig5.gif\">\n\n现在，我们让将摆线放大到67m长；将圆盘换成南极点的地面（相信这么做一定会有一群好奇的企鹅来围观）；讲缓慢转动圆盘换成地球大大的缓慢自转，这个上面的结论依然成立（当然如果你有上帝视角来看极点上的单摆进动，会更容易明白，就像看懂上面小圆盘上的单摆一样）。\n\n接下来，让我们把情况更加一般化，将这个巨大的单摆放到地球的任何可行的位置，问题变成了旋转球面上直线运动的进动问题，话不多说，看图：\n\n<img src=\"fig6_1.png\" width=\"400\"/>\n\n假设有一单摆在 $C$ 点（三个蓝点中最下面的那个），且在 $C$ 点建立一个坐标系（为了不使图更乱，我就不画了），平面 $CAE$ ~~（说得装X一些叫“C点所在子午面”）~~如下：\n\n<img src=\"fig6_2.svg\" width=\"150\">\n\n其中 $A$ 是球心， $AC$ 是半径， $CE \\perp CA$ 并且 $E$ 落在自转轴上，$\\angle \\psi$ 表示纬度，$\\angle \\theta$ 则是 $\\angle \\psi$ 的余角。\n\n我们取一小段时间 $\\Delta t$ ，由于地球的自转，单摆从 $C$ 点运动到 $D$ 点，那么 $D$ 点出坐标系的 $y'$ 轴与 $C$ 点处 $y$ 轴所成夹角即为坐标系偏转的角度 $\\angle \\text{看这里}$ （如下图），这个角度也就是在 $\\Delta t$ 时间内单摆进动的角度，现在只要求出 $\\angle \\text{看这里}$ 与 $\\omega \\Delta t$ 之间的关系即可求出单摆进动角速度与地球自转角速度的关系。\n\n<img src=\"fig6_3.svg\" width=\"300\">\n\n下面来求这个关系：\n\n$$\\begin{aligned}\n\\angle \\text{看这里} = \\angle CED  &=  \\frac {\\widehat{CD}}{CE} \\\\\n\t\t\t\t\t& = \\frac{ CE \\times \\sin\\psi \\times \\omega\\Delta t }{ CE } \\\\\n\t\t\t\t\t& = \\omega\\Delta t \\sin\\psi\n\\end{aligned}$$\n\n于是，单摆进动的角速度为\n\n$$\\begin{aligned}\n\\varOmega & = \\lim_{\\Delta t \\rightarrow 0} \\frac{\\angle \\text{看这里}} {\\Delta t} \\\\\n\t\t& = \\omega \\sin \\psi\n\\end{aligned}$$\n\n上面式子表明，当 $\\psi = \\pm 90 ^ \\circ$ 时，$\\varOmega = \\omega$ ，即当单摆处于极点时，其进动角速度等于地球自转角速度，也就是我们开始时提到单摆在圆盘时的情形。\n\n好了，现在回到傅科摆，只要我们观察足够长的时间，测量出其轨迹的进动角速度，又已知地球自转角速度，便可以轻松算出傅科摆所在的纬度。\n\n# 结语\n\n这是我在补《力学》时卡住的一个知识点，之前心中总把科里奥利力想象成惯性离心力那样，导致看到傅科摆时完全不知道如何理解，经过请教群友，老师以及动手画图实验，总算稍稍理解了，上面便是本渣的一点愚见，如有疏漏，还请在评论区指出，或邮件联系（联系方式见关于页面）。\n\n以上\n","slug":"Coriolis-Force","published":1,"updated":"2018-12-31T11:47:25.678Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjbbq001fzq4ik3quozzm","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>苯渣在补力学时卡在了科氏力这一节，经过 Mr. Ren , 物吧大佬以及 <a href=\"https://en.wikipedia.org/wiki/Coriolis_force\" target=\"_blank\" rel=\"noopener\">Wikipedia</a> 上的详细解释，我总算稍稍弄懂了这个家伙到底是怎么产生的了，于是写下本文分享一下愚见。</p>\n<h1 id=\"引子\"><a href=\"#引子\" class=\"headerlink\" title=\"引子\"></a>引子</h1><p>坐过旋转木马的同学应该会有这样的体验：当坐在绕轴旋转的座位上向轴扔一个纸团（乱扔垃圾什么的最讨厌啦）时，纸团并不会砸到轴上，似乎纸团总是会偏离半径方向，并且总是偏向一个方向，这是为什么呢？这就要涉及到这篇文章要讲到的主角——科里奥利力。</p>\n<h1 id=\"什么是科里奥利力？\"><a href=\"#什么是科里奥利力？\" class=\"headerlink\" title=\"什么是科里奥利力？\"></a>什么是科里奥利力？</h1><p>引用 Wikipedia 上的描述就是：</p>\n<blockquote>\n<p><strong>科里奥利力</strong>（简称：<strong>科氏力</strong>）是对旋转体系中进行直线运动的<a href=\"https://zh.wikipedia.org/wiki/%E8%B4%A8%E7%82%B9\" target=\"_blank\" rel=\"noopener\">质点</a>由于<a href=\"https://zh.wikipedia.org/wiki/%E6%85%A3%E6%80%A7\" target=\"_blank\" rel=\"noopener\">惯性</a>相对于旋转体系产生的直线运动的偏移的一种描述。此现象由法国著名数学家兼物理学家<a href=\"https://zh.wikipedia.org/wiki/%E7%A7%91%E9%87%8C%E5%A5%A7%E5%88%A9\" target=\"_blank\" rel=\"noopener\">古斯塔夫・科里奥利</a>发现，因而得名；同时由于这种力在<a href=\"https://zh.wikipedia.org/wiki/%E5%9C%B0%E7%90%83%E8%87%AA%E8%BD%AC\" target=\"_blank\" rel=\"noopener\">地球自转</a>下产生，因此又称为“<strong>地转偏向力</strong>”。</p>\n</blockquote>\n<p>个人理解：</p>\n<blockquote>\n<p>以一个旋转体系为参考系时，若研究对象相对于参考系的有非轴向运动的分量（或在垂直轴的平面内有运动分量）时，这个方向的运动分量会受到一个法向惯性力的作用而偏离原来的运动，这个力就是科里奥利力。</p>\n</blockquote>\n<p>上面的描述有两个要点：</p>\n<ol>\n<li>参考体系为旋转体系，这也就意味着该参考系是一个非惯性系，其中必然要考虑惯性力的作用；</li>\n<li>研究对象相对于参考系有相对运动，并且这个运动在垂直轴向的平面内有分量。</li>\n</ol>\n<h1 id=\"科里奥利力如何产生？\"><a href=\"#科里奥利力如何产生？\" class=\"headerlink\" title=\"科里奥利力如何产生？\"></a>科里奥利力如何产生？</h1><h2 id=\"粗略的理解\"><a href=\"#粗略的理解\" class=\"headerlink\" title=\"粗略的理解\"></a>粗略的理解</h2><p>就拿引子里旋转木马的例子：</p>\n<p>假设旋转木马是做匀速圆周运动，角速度为 $ \\vec{\\omega} $ ，读者轨迹半径为 $\\vec{r}$ ，那么读者的公转线速度为<br>$$<br>\\vec{v}_t = \\vec{\\omega} \\times \\vec{r} \\notag<br>$$<br>如同这样：</p>\n<p><img src=\"fig1.png\" width=\"400\"></p>\n<p>（<strong>注意这里的变量用矢量表示</strong>）</p>\n<p>朝径向，也就是 $-\\vec{r}$ 方向扔一个纸团时，这个纸团既有朝向径向的速度 $\\vec{v}_n$ ，又有线速度 $\\vec{\\omega}\\times\\vec{r}$ ，当其运动到圆内侧时，内侧的线速度<br>$$<br>\\vec{v}’_t = \\vec{\\omega}\\times\\vec{r}’ &lt; \\vec{\\omega}\\times\\vec{r} = \\vec{v}_t<br>$$<br>很自然地，纸团此时的切向速度比其所在圆上的的线速度更大，也就偏移了所谓的“直线”，读者视角俯视图见下图：</p>\n<p><img src=\"fig2.svg\" width=\"300\"></p>\n<p>从这里也可以看出，所谓的“力”事实上并不存在，纸团的偏转完全是纸团的切向速度大于圆周运动线速度而偏离原来的位置，平面内没有任何力的作用使其真正偏转——假如纸团不受空气阻力，在观众看来，纸团应该做抛体运动，自然其轨迹的俯视图为一条直线，但是当我们置身于旋转木马中时，它的确看起来有一个“力”使其“偏转”，这又如何解释呢？</p>\n<p>问题出在我们<strong>置身于旋转木马中</strong>。</p>\n<h2 id=\"更严格的推导\"><a href=\"#更严格的推导\" class=\"headerlink\" title=\"更严格的推导\"></a>更严格的推导</h2><p>继承上面的假设，旋转木马做匀速圆周运动，其可以看成一个<a href=\"https://en.wikipedia.org/wiki/Inertial_frame_of_reference\" target=\"_blank\" rel=\"noopener\">非惯性系</a>，在这个参考系中，牛顿第一定律并不成立，为了使牛顿第一定律看起来成立，我们引入了<a href=\"https://en.wikipedia.org/wiki/Fictitious_force\" target=\"_blank\" rel=\"noopener\">惯性力</a>。</p>\n<p>现在，让我们做回观众：</p>\n<p><img src=\"fig3.png\" width=\"500\"></p>\n<p>显然有</p>\n<p>$$<br>\\vec{R}=\\vec{r}<em>\\perp = \\vec{r} - \\vec{r}</em>\\parallel = \\vec{r} - \\frac{(\\vec{r}\\cdot\\vec{\\omega}) \\cdot \\vec{\\omega}}{ {\\omega}^2}<br>$$</p>\n<p>将其简单变形</p>\n<p>$$<br>{\\omega}^2 \\vec{R} = {\\omega}^2 \\vec{r} -(\\vec{r}\\cdot\\vec{\\omega}) \\cdot \\vec{\\omega} = -\\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r})<br>$$</p>\n<p>此时的 ${\\omega}^2 \\vec{R}$ 就是我们熟知的惯性离心加速度，方向与 $\\vec{R}$ 一致，它也是惯性加速度的一种，但不是我们今天要研究的主角。</p>\n<p>取一小段时间 $\\Delta t$ ：</p>\n<p><img src=\"fig4.png\" width=\"300\"></p>\n<p>矢量 $\\vec{P}$ 的增量为</p>\n<p>$$<br>\\Delta P \\approx P\\sin\\theta\\omega\\Delta t=|\\vec{\\omega}\\times \\vec{P}|\\Delta t<br>$$</p>\n<p>$\\Delta \\vec{P}$方向与 $\\vec{\\omega}$ 和 $\\vec{P}$ 的方向都垂直，即为 $\\vec{\\omega}\\times\\vec{P}$ 的方向，因此上式可以写为</p>\n<p>$$<br>\\Delta \\vec{P} \\approx\\vec{\\omega}\\times \\vec{P}\\Delta t<br>$$</p>\n<p>故 $\\vec{P}$ 的变化率可以表示为其对时间的导数</p>\n<p>$$<br>\\frac{\\mathrm{D}\\vec{P}}{\\mathrm{D}t} = \\lim_{\\Delta t\\rightarrow0} \\frac{\\Delta\\vec{P}}{\\Delta t} = \\vec{\\omega} \\times \\vec{P}<br>$$<br>上式中大写的 $\\mathrm D$ 表示以静止系统为参考系时各变量的微分，而小写的 $\\mathrm d$ 则表示以旋转系统为参考系时变量的微分。上面式子中我们假定 $\\vec{P}$ 在旋转体系中都是恒矢量，否则 $\\vec{P}$ 的导数应该表示为</p>\n<p>$$<br>\\frac{\\mathrm{D}\\vec{P}}{\\mathrm{D}t} = \\lim_{\\Delta t\\rightarrow0} \\frac{\\Delta\\vec{P}}{\\Delta t} = \\vec{\\omega} \\times \\vec{P} + \\frac{\\mathrm d \\vec{P}}{\\mathrm d t}<br>$$</p>\n<p>上式适用于任何矢量 $\\vec{P}$ ，我们取一个质点的位矢 $\\vec{r} = \\vec{P}$ ，于是有</p>\n<p>$$<br>\\frac{\\mathrm D \\vec{r}}{\\mathrm D t} = \\vec{\\omega}\\times \\vec{r} + \\frac{\\mathrm d\\vec{r}}{\\mathrm d t} = \\vec{\\omega}\\times \\vec{r} + \\vec{v}<br>$$</p>\n<p>其中的 $\\vec{v}$ 表示质点相对于旋转体系的速度矢量。对上式再次求导，即得到加速度</p>\n<p>$$\\begin{aligned}<br>\\vec{A} = \\frac{\\mathrm D^2 \\vec{r}}{\\mathrm D t^2} &amp;= \\vec{\\omega}\\times\\frac{\\mathrm D\\vec{r}}{\\mathrm D t} + \\frac{\\mathrm d \\vec{v}}{\\mathrm dt} \\<br>    &amp;= \\vec{\\omega}\\times(\\vec{\\omega}\\times \\vec{r} + \\vec{v}) + (\\vec{\\omega}\\times\\vec{v} + \\frac{\\mathrm d\\vec{v}}{\\mathrm d t}) \\<br>    &amp;= \\vec{\\omega}\\times(\\vec{\\omega}\\times \\vec{r} ) + 2\\vec{\\omega}\\times\\vec{v} + \\vec{a}<br>\\end{aligned}$$</p>\n<p>因此</p>\n<p>$$<br>\\vec{a} =\\vec{A} - \\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r}) - 2\\vec{\\omega}\\times\\vec{v}<br>$$<br>上式中 $\\vec{a}$ 表示质点相对于旋转体系的加速度，$\\vec{A}$ 是由真实的力提供的加速度，后面两项都是“假想”存在的加速度，即惯性加速度。其中 $-\\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r})$ 是我们已知的惯性离心加速度，另一项 $-2\\vec{\\omega}\\times\\vec{r}$ 就是<strong>科里奥利加速度</strong>，我们用 $\\vec{a}_c$ 表示，有了科里奥利加速度，就得到科里奥利力 $\\vec{f}_c = m\\vec{a}_c$ 。</p>\n<p>根据右手定则，可以判断出其始终垂直于质点相对于旋转体系的速度，因此，质点相对于旋转体系运动时出现偏转也就很自然了。</p>\n<h1 id=\"实际应用\"><a href=\"#实际应用\" class=\"headerlink\" title=\"实际应用\"></a>实际应用</h1><p>既然知道了科里奥利力是如何产生，那么知道这个东西对我们有什么用处呢？<del>（可以拿来装X）</del> </p>\n<h2 id=\"可以拿来侧纬度啦\"><a href=\"#可以拿来侧纬度啦\" class=\"headerlink\" title=\"可以拿来侧纬度啦~\"></a>可以拿来侧纬度啦~</h2><p>我们所置身的地球就是一个旋转体系，只是它旋转得太慢了，平时难以察觉到科里奥利力的存在，但是有一种东西可以反映出科里奥利力的存在，那就是<a href=\"https://en.wikipedia.org/wiki/Foucault_pendulum\" target=\"_blank\" rel=\"noopener\">傅科摆</a> ，如果你有足够的耐心观察它足够长的时间并确定它进动周期，你就可以很容易算出你所在位置的纬度，后面我们会给上推导这个公式的过程。</p>\n<p>为了理解如何通过傅科摆的进动角速度确定纬度，我们先来看一个简单的例子：</p>\n<p><img src=\"fig5.png\" width=\"500\"></p>\n<p>一个可以旋转的圆盘上有一个单摆，当缓慢旋转圆盘时，我们假设惯性离心力很小，只有科里奥利力作用于单摆运动的切向。 当我们旋转圆盘 $90^\\circ$ 时，在静止体系观看单摆的摆平面没有任何变化，只是单纯的平移而已，没有任何转动，但是当以圆盘为参考系时（坐在 $C’$ 的位置向 $A$ 看），单摆的摆平面已经旋转了 $90^\\circ$ ，因此以圆盘的视角来观察这个现象时单摆进动的角速度就是圆盘转动的角速度。</p>\n<p>下面的动画应该很形象了：</p>\n<p><img src=\"fig5.gif\"></p>\n<p>现在，我们让将摆线放大到67m长；将圆盘换成南极点的地面（相信这么做一定会有一群好奇的企鹅来围观）；讲缓慢转动圆盘换成地球大大的缓慢自转，这个上面的结论依然成立（当然如果你有上帝视角来看极点上的单摆进动，会更容易明白，就像看懂上面小圆盘上的单摆一样）。</p>\n<p>接下来，让我们把情况更加一般化，将这个巨大的单摆放到地球的任何可行的位置，问题变成了旋转球面上直线运动的进动问题，话不多说，看图：</p>\n<p><img src=\"fig6_1.png\" width=\"400\"></p>\n<p>假设有一单摆在 $C$ 点（三个蓝点中最下面的那个），且在 $C$ 点建立一个坐标系（为了不使图更乱，我就不画了），平面 $CAE$ <del>（说得装X一些叫“C点所在子午面”）</del>如下：</p>\n<p><img src=\"fig6_2.svg\" width=\"150\"></p>\n<p>其中 $A$ 是球心， $AC$ 是半径， $CE \\perp CA$ 并且 $E$ 落在自转轴上，$\\angle \\psi$ 表示纬度，$\\angle \\theta$ 则是 $\\angle \\psi$ 的余角。</p>\n<p>我们取一小段时间 $\\Delta t$ ，由于地球的自转，单摆从 $C$ 点运动到 $D$ 点，那么 $D$ 点出坐标系的 $y’$ 轴与 $C$ 点处 $y$ 轴所成夹角即为坐标系偏转的角度 $\\angle \\text{看这里}$ （如下图），这个角度也就是在 $\\Delta t$ 时间内单摆进动的角度，现在只要求出 $\\angle \\text{看这里}$ 与 $\\omega \\Delta t$ 之间的关系即可求出单摆进动角速度与地球自转角速度的关系。</p>\n<p><img src=\"fig6_3.svg\" width=\"300\"></p>\n<p>下面来求这个关系：</p>\n<p>$$\\begin{aligned}<br>\\angle \\text{看这里} = \\angle CED  &amp;=  \\frac {\\widehat{CD}}{CE} \\<br>                    &amp; = \\frac{ CE \\times \\sin\\psi \\times \\omega\\Delta t }{ CE } \\<br>                    &amp; = \\omega\\Delta t \\sin\\psi<br>\\end{aligned}$$</p>\n<p>于是，单摆进动的角速度为</p>\n<p>$$\\begin{aligned}<br>\\varOmega &amp; = \\lim_{\\Delta t \\rightarrow 0} \\frac{\\angle \\text{看这里}} {\\Delta t} \\<br>        &amp; = \\omega \\sin \\psi<br>\\end{aligned}$$</p>\n<p>上面式子表明，当 $\\psi = \\pm 90 ^ \\circ$ 时，$\\varOmega = \\omega$ ，即当单摆处于极点时，其进动角速度等于地球自转角速度，也就是我们开始时提到单摆在圆盘时的情形。</p>\n<p>好了，现在回到傅科摆，只要我们观察足够长的时间，测量出其轨迹的进动角速度，又已知地球自转角速度，便可以轻松算出傅科摆所在的纬度。</p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>这是我在补《力学》时卡住的一个知识点，之前心中总把科里奥利力想象成惯性离心力那样，导致看到傅科摆时完全不知道如何理解，经过请教群友，老师以及动手画图实验，总算稍稍理解了，上面便是本渣的一点愚见，如有疏漏，还请在评论区指出，或邮件联系（联系方式见关于页面）。</p>\n<p>以上</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>苯渣在补力学时卡在了科氏力这一节，经过 Mr. Ren , 物吧大佬以及 <a href=\"https://en.wikipedia.org/wiki/Coriolis_force\" target=\"_blank\" rel=\"noopener\">Wikipedia</a> 上的详细解释，我总算稍稍弄懂了这个家伙到底是怎么产生的了，于是写下本文分享一下愚见。</p>\n<h1 id=\"引子\"><a href=\"#引子\" class=\"headerlink\" title=\"引子\"></a>引子</h1><p>坐过旋转木马的同学应该会有这样的体验：当坐在绕轴旋转的座位上向轴扔一个纸团（乱扔垃圾什么的最讨厌啦）时，纸团并不会砸到轴上，似乎纸团总是会偏离半径方向，并且总是偏向一个方向，这是为什么呢？这就要涉及到这篇文章要讲到的主角——科里奥利力。</p>\n<h1 id=\"什么是科里奥利力？\"><a href=\"#什么是科里奥利力？\" class=\"headerlink\" title=\"什么是科里奥利力？\"></a>什么是科里奥利力？</h1><p>引用 Wikipedia 上的描述就是：</p>\n<blockquote>\n<p><strong>科里奥利力</strong>（简称：<strong>科氏力</strong>）是对旋转体系中进行直线运动的<a href=\"https://zh.wikipedia.org/wiki/%E8%B4%A8%E7%82%B9\" target=\"_blank\" rel=\"noopener\">质点</a>由于<a href=\"https://zh.wikipedia.org/wiki/%E6%85%A3%E6%80%A7\" target=\"_blank\" rel=\"noopener\">惯性</a>相对于旋转体系产生的直线运动的偏移的一种描述。此现象由法国著名数学家兼物理学家<a href=\"https://zh.wikipedia.org/wiki/%E7%A7%91%E9%87%8C%E5%A5%A7%E5%88%A9\" target=\"_blank\" rel=\"noopener\">古斯塔夫・科里奥利</a>发现，因而得名；同时由于这种力在<a href=\"https://zh.wikipedia.org/wiki/%E5%9C%B0%E7%90%83%E8%87%AA%E8%BD%AC\" target=\"_blank\" rel=\"noopener\">地球自转</a>下产生，因此又称为“<strong>地转偏向力</strong>”。</p>\n</blockquote>\n<p>个人理解：</p>\n<blockquote>\n<p>以一个旋转体系为参考系时，若研究对象相对于参考系的有非轴向运动的分量（或在垂直轴的平面内有运动分量）时，这个方向的运动分量会受到一个法向惯性力的作用而偏离原来的运动，这个力就是科里奥利力。</p>\n</blockquote>\n<p>上面的描述有两个要点：</p>\n<ol>\n<li>参考体系为旋转体系，这也就意味着该参考系是一个非惯性系，其中必然要考虑惯性力的作用；</li>\n<li>研究对象相对于参考系有相对运动，并且这个运动在垂直轴向的平面内有分量。</li>\n</ol>\n<h1 id=\"科里奥利力如何产生？\"><a href=\"#科里奥利力如何产生？\" class=\"headerlink\" title=\"科里奥利力如何产生？\"></a>科里奥利力如何产生？</h1><h2 id=\"粗略的理解\"><a href=\"#粗略的理解\" class=\"headerlink\" title=\"粗略的理解\"></a>粗略的理解</h2><p>就拿引子里旋转木马的例子：</p>\n<p>假设旋转木马是做匀速圆周运动，角速度为 $ \\vec{\\omega} $ ，读者轨迹半径为 $\\vec{r}$ ，那么读者的公转线速度为<br>$$<br>\\vec{v}_t = \\vec{\\omega} \\times \\vec{r} \\notag<br>$$<br>如同这样：</p>\n<p><img src=\"fig1.png\" width=\"400\"></p>\n<p>（<strong>注意这里的变量用矢量表示</strong>）</p>\n<p>朝径向，也就是 $-\\vec{r}$ 方向扔一个纸团时，这个纸团既有朝向径向的速度 $\\vec{v}_n$ ，又有线速度 $\\vec{\\omega}\\times\\vec{r}$ ，当其运动到圆内侧时，内侧的线速度<br>$$<br>\\vec{v}’_t = \\vec{\\omega}\\times\\vec{r}’ &lt; \\vec{\\omega}\\times\\vec{r} = \\vec{v}_t<br>$$<br>很自然地，纸团此时的切向速度比其所在圆上的的线速度更大，也就偏移了所谓的“直线”，读者视角俯视图见下图：</p>\n<p><img src=\"fig2.svg\" width=\"300\"></p>\n<p>从这里也可以看出，所谓的“力”事实上并不存在，纸团的偏转完全是纸团的切向速度大于圆周运动线速度而偏离原来的位置，平面内没有任何力的作用使其真正偏转——假如纸团不受空气阻力，在观众看来，纸团应该做抛体运动，自然其轨迹的俯视图为一条直线，但是当我们置身于旋转木马中时，它的确看起来有一个“力”使其“偏转”，这又如何解释呢？</p>\n<p>问题出在我们<strong>置身于旋转木马中</strong>。</p>\n<h2 id=\"更严格的推导\"><a href=\"#更严格的推导\" class=\"headerlink\" title=\"更严格的推导\"></a>更严格的推导</h2><p>继承上面的假设，旋转木马做匀速圆周运动，其可以看成一个<a href=\"https://en.wikipedia.org/wiki/Inertial_frame_of_reference\" target=\"_blank\" rel=\"noopener\">非惯性系</a>，在这个参考系中，牛顿第一定律并不成立，为了使牛顿第一定律看起来成立，我们引入了<a href=\"https://en.wikipedia.org/wiki/Fictitious_force\" target=\"_blank\" rel=\"noopener\">惯性力</a>。</p>\n<p>现在，让我们做回观众：</p>\n<p><img src=\"fig3.png\" width=\"500\"></p>\n<p>显然有</p>\n<p>$$<br>\\vec{R}=\\vec{r}<em>\\perp = \\vec{r} - \\vec{r}</em>\\parallel = \\vec{r} - \\frac{(\\vec{r}\\cdot\\vec{\\omega}) \\cdot \\vec{\\omega}}{ {\\omega}^2}<br>$$</p>\n<p>将其简单变形</p>\n<p>$$<br>{\\omega}^2 \\vec{R} = {\\omega}^2 \\vec{r} -(\\vec{r}\\cdot\\vec{\\omega}) \\cdot \\vec{\\omega} = -\\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r})<br>$$</p>\n<p>此时的 ${\\omega}^2 \\vec{R}$ 就是我们熟知的惯性离心加速度，方向与 $\\vec{R}$ 一致，它也是惯性加速度的一种，但不是我们今天要研究的主角。</p>\n<p>取一小段时间 $\\Delta t$ ：</p>\n<p><img src=\"fig4.png\" width=\"300\"></p>\n<p>矢量 $\\vec{P}$ 的增量为</p>\n<p>$$<br>\\Delta P \\approx P\\sin\\theta\\omega\\Delta t=|\\vec{\\omega}\\times \\vec{P}|\\Delta t<br>$$</p>\n<p>$\\Delta \\vec{P}$方向与 $\\vec{\\omega}$ 和 $\\vec{P}$ 的方向都垂直，即为 $\\vec{\\omega}\\times\\vec{P}$ 的方向，因此上式可以写为</p>\n<p>$$<br>\\Delta \\vec{P} \\approx\\vec{\\omega}\\times \\vec{P}\\Delta t<br>$$</p>\n<p>故 $\\vec{P}$ 的变化率可以表示为其对时间的导数</p>\n<p>$$<br>\\frac{\\mathrm{D}\\vec{P}}{\\mathrm{D}t} = \\lim_{\\Delta t\\rightarrow0} \\frac{\\Delta\\vec{P}}{\\Delta t} = \\vec{\\omega} \\times \\vec{P}<br>$$<br>上式中大写的 $\\mathrm D$ 表示以静止系统为参考系时各变量的微分，而小写的 $\\mathrm d$ 则表示以旋转系统为参考系时变量的微分。上面式子中我们假定 $\\vec{P}$ 在旋转体系中都是恒矢量，否则 $\\vec{P}$ 的导数应该表示为</p>\n<p>$$<br>\\frac{\\mathrm{D}\\vec{P}}{\\mathrm{D}t} = \\lim_{\\Delta t\\rightarrow0} \\frac{\\Delta\\vec{P}}{\\Delta t} = \\vec{\\omega} \\times \\vec{P} + \\frac{\\mathrm d \\vec{P}}{\\mathrm d t}<br>$$</p>\n<p>上式适用于任何矢量 $\\vec{P}$ ，我们取一个质点的位矢 $\\vec{r} = \\vec{P}$ ，于是有</p>\n<p>$$<br>\\frac{\\mathrm D \\vec{r}}{\\mathrm D t} = \\vec{\\omega}\\times \\vec{r} + \\frac{\\mathrm d\\vec{r}}{\\mathrm d t} = \\vec{\\omega}\\times \\vec{r} + \\vec{v}<br>$$</p>\n<p>其中的 $\\vec{v}$ 表示质点相对于旋转体系的速度矢量。对上式再次求导，即得到加速度</p>\n<p>$$\\begin{aligned}<br>\\vec{A} = \\frac{\\mathrm D^2 \\vec{r}}{\\mathrm D t^2} &amp;= \\vec{\\omega}\\times\\frac{\\mathrm D\\vec{r}}{\\mathrm D t} + \\frac{\\mathrm d \\vec{v}}{\\mathrm dt} \\<br>    &amp;= \\vec{\\omega}\\times(\\vec{\\omega}\\times \\vec{r} + \\vec{v}) + (\\vec{\\omega}\\times\\vec{v} + \\frac{\\mathrm d\\vec{v}}{\\mathrm d t}) \\<br>    &amp;= \\vec{\\omega}\\times(\\vec{\\omega}\\times \\vec{r} ) + 2\\vec{\\omega}\\times\\vec{v} + \\vec{a}<br>\\end{aligned}$$</p>\n<p>因此</p>\n<p>$$<br>\\vec{a} =\\vec{A} - \\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r}) - 2\\vec{\\omega}\\times\\vec{v}<br>$$<br>上式中 $\\vec{a}$ 表示质点相对于旋转体系的加速度，$\\vec{A}$ 是由真实的力提供的加速度，后面两项都是“假想”存在的加速度，即惯性加速度。其中 $-\\vec{\\omega}\\times(\\vec{\\omega}\\times\\vec{r})$ 是我们已知的惯性离心加速度，另一项 $-2\\vec{\\omega}\\times\\vec{r}$ 就是<strong>科里奥利加速度</strong>，我们用 $\\vec{a}_c$ 表示，有了科里奥利加速度，就得到科里奥利力 $\\vec{f}_c = m\\vec{a}_c$ 。</p>\n<p>根据右手定则，可以判断出其始终垂直于质点相对于旋转体系的速度，因此，质点相对于旋转体系运动时出现偏转也就很自然了。</p>\n<h1 id=\"实际应用\"><a href=\"#实际应用\" class=\"headerlink\" title=\"实际应用\"></a>实际应用</h1><p>既然知道了科里奥利力是如何产生，那么知道这个东西对我们有什么用处呢？<del>（可以拿来装X）</del> </p>\n<h2 id=\"可以拿来侧纬度啦\"><a href=\"#可以拿来侧纬度啦\" class=\"headerlink\" title=\"可以拿来侧纬度啦~\"></a>可以拿来侧纬度啦~</h2><p>我们所置身的地球就是一个旋转体系，只是它旋转得太慢了，平时难以察觉到科里奥利力的存在，但是有一种东西可以反映出科里奥利力的存在，那就是<a href=\"https://en.wikipedia.org/wiki/Foucault_pendulum\" target=\"_blank\" rel=\"noopener\">傅科摆</a> ，如果你有足够的耐心观察它足够长的时间并确定它进动周期，你就可以很容易算出你所在位置的纬度，后面我们会给上推导这个公式的过程。</p>\n<p>为了理解如何通过傅科摆的进动角速度确定纬度，我们先来看一个简单的例子：</p>\n<p><img src=\"fig5.png\" width=\"500\"></p>\n<p>一个可以旋转的圆盘上有一个单摆，当缓慢旋转圆盘时，我们假设惯性离心力很小，只有科里奥利力作用于单摆运动的切向。 当我们旋转圆盘 $90^\\circ$ 时，在静止体系观看单摆的摆平面没有任何变化，只是单纯的平移而已，没有任何转动，但是当以圆盘为参考系时（坐在 $C’$ 的位置向 $A$ 看），单摆的摆平面已经旋转了 $90^\\circ$ ，因此以圆盘的视角来观察这个现象时单摆进动的角速度就是圆盘转动的角速度。</p>\n<p>下面的动画应该很形象了：</p>\n<p><img src=\"fig5.gif\"></p>\n<p>现在，我们让将摆线放大到67m长；将圆盘换成南极点的地面（相信这么做一定会有一群好奇的企鹅来围观）；讲缓慢转动圆盘换成地球大大的缓慢自转，这个上面的结论依然成立（当然如果你有上帝视角来看极点上的单摆进动，会更容易明白，就像看懂上面小圆盘上的单摆一样）。</p>\n<p>接下来，让我们把情况更加一般化，将这个巨大的单摆放到地球的任何可行的位置，问题变成了旋转球面上直线运动的进动问题，话不多说，看图：</p>\n<p><img src=\"fig6_1.png\" width=\"400\"></p>\n<p>假设有一单摆在 $C$ 点（三个蓝点中最下面的那个），且在 $C$ 点建立一个坐标系（为了不使图更乱，我就不画了），平面 $CAE$ <del>（说得装X一些叫“C点所在子午面”）</del>如下：</p>\n<p><img src=\"fig6_2.svg\" width=\"150\"></p>\n<p>其中 $A$ 是球心， $AC$ 是半径， $CE \\perp CA$ 并且 $E$ 落在自转轴上，$\\angle \\psi$ 表示纬度，$\\angle \\theta$ 则是 $\\angle \\psi$ 的余角。</p>\n<p>我们取一小段时间 $\\Delta t$ ，由于地球的自转，单摆从 $C$ 点运动到 $D$ 点，那么 $D$ 点出坐标系的 $y’$ 轴与 $C$ 点处 $y$ 轴所成夹角即为坐标系偏转的角度 $\\angle \\text{看这里}$ （如下图），这个角度也就是在 $\\Delta t$ 时间内单摆进动的角度，现在只要求出 $\\angle \\text{看这里}$ 与 $\\omega \\Delta t$ 之间的关系即可求出单摆进动角速度与地球自转角速度的关系。</p>\n<p><img src=\"fig6_3.svg\" width=\"300\"></p>\n<p>下面来求这个关系：</p>\n<p>$$\\begin{aligned}<br>\\angle \\text{看这里} = \\angle CED  &amp;=  \\frac {\\widehat{CD}}{CE} \\<br>                    &amp; = \\frac{ CE \\times \\sin\\psi \\times \\omega\\Delta t }{ CE } \\<br>                    &amp; = \\omega\\Delta t \\sin\\psi<br>\\end{aligned}$$</p>\n<p>于是，单摆进动的角速度为</p>\n<p>$$\\begin{aligned}<br>\\varOmega &amp; = \\lim_{\\Delta t \\rightarrow 0} \\frac{\\angle \\text{看这里}} {\\Delta t} \\<br>        &amp; = \\omega \\sin \\psi<br>\\end{aligned}$$</p>\n<p>上面式子表明，当 $\\psi = \\pm 90 ^ \\circ$ 时，$\\varOmega = \\omega$ ，即当单摆处于极点时，其进动角速度等于地球自转角速度，也就是我们开始时提到单摆在圆盘时的情形。</p>\n<p>好了，现在回到傅科摆，只要我们观察足够长的时间，测量出其轨迹的进动角速度，又已知地球自转角速度，便可以轻松算出傅科摆所在的纬度。</p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>这是我在补《力学》时卡住的一个知识点，之前心中总把科里奥利力想象成惯性离心力那样，导致看到傅科摆时完全不知道如何理解，经过请教群友，老师以及动手画图实验，总算稍稍理解了，上面便是本渣的一点愚见，如有疏漏，还请在评论区指出，或邮件联系（联系方式见关于页面）。</p>\n<p>以上</p>\n"},{"title":"物理化学复习札记（一）：理想气体热力学量求解总结","date":"2017-06-26T09:07:41.000Z","_content":"\n\n**这是这个系列的第一篇，也是第一次写这种类型的札记，如果有纰漏，还请在评论区指出，谢谢各位！**\n\n## 热力学量说明\n物理化学中，热力学主要研究7个热力学量，这7个量如下：\n\n1. $U$，系统的热力学能，或称内能，属于状态函数，$U=f(T)$，无法求出$U$的值，但可以求出$\\Delta U$的值，单位为J；\n2. $Q$，系统与环境交换的热量，当系统放热时，$Q$为负值；系统吸热，则$Q$为正值，单位为J；\n3. $W$，环境对系统所做的功，分为体积功和非体积功，单位为J；\n4. $H$，焓，定义为 $H=U+pV$，无实际含义，仅为计算方便而产生，属于状态函数，$H=f(T)$，与$U$一样，无法求出$H$的值，但可以求出$\\Delta H$的值，单位为J；\n5. $S$，大名鼎鼎的熵，定义为$S=\\int_A^B (\\dfrac{\\delta Q}{T})_R$，属于状态函数，处于绝对零度时完美晶体的熵为0，单位J$\\cdot $K$^{-1}$\n6. $A$，亥姆霍兹自由能，定义为$A=U-TS$，为状态函数，无法求出$A$的值，但可以求出$\\Delta A$的值，单位为J；\n7. $G$，吉布斯自由能，定义为$G=H-TS$，为状态函数，无法求出$G$的值，但可以求出$\\Delta G$的值，单位为J；\n\n以上说明中，状态函数是指当系统状态一定时，其值即确定，亦即在某个过程中其变化量$\\Delta f$只与始末状态有关，与过程细节无关。这个性质**非常重要**，物理化学常见的设计过程求解热力学量的理论基础即在于此。\n\n## 热力学四大定律\n\n是的，热力学有四大定律，分别为热力学第零定律、热力学第一定律、热力学第二定律和热力学第三定律。\n\n### 热力学第零定律\n**如果两个系统分别与处于确定状态的第三个系统达到热平衡，则这两个系统彼此也将处于热平衡。**\n\n这个定律定义了温度的概念，当两个系统相互接触处于热平衡后，它们的性质不再变化，我们称之具有相同的温度。而定义中提到的第三系统为温度计的产生奠定了理论基础。\n\n### 热力学第一定律\n**在变化过程中，系统的热力学能变化量表示为系统和环境的热交换量与外界对系统所做功的总和。**\n写成公式即为 $ \\Delta U = Q + W $，\n或者写成微分形式$ \\mathrm{d}U = \\delta Q + \\delta W $\n\n### 热力学第二定律\n\n文字可表述为：\n\n> 克劳修斯表述：不可能把热从低温物体传到高温物体，而不引起其他变化；\n> 开尔文表述：不可能从单一热源取出热使之完全变为功，而不发生其他变化。\n\n数学形式：\n\n- 克劳修斯不等式表述形式：$ \\Delta S_{A\\to B}-\\sum_A^B \\dfrac{\\delta Q}{T} \\geq 0 $\n- 常用表述形式：$ \\mathrm{d}S - \\dfrac{\\delta Q}{T} \\geq 0 $\n\n\n上式表明，在一个隔离系统中，熵永不减少。 隔离系统是绝热的，即$\\delta Q=0$，因此$\\mathrm{d}S_{\\mathrm{iso}} \\geq 0$。\n\n\n### 热力学第三定律\n可以表述为**在温度趋于热力学温度0K的等温过程中，系统的熵值不变 **，也可以表述为“**在0K时，任何完美晶体的熵等于零**”，还可以表述为”**绝对零度不可能达到**“。\n\n\n## 特殊过程的热力学量求值\n\n**本节所有过程均为$p$,$V$,$T$过程，不考虑非体积功！**\n\n常见的变化过程（均为理想气体的变化过程）有：\n1. 等温过程：系统由状态1变到状态2，变化过程中以及始态和终态的温度不变，**且等于环境温度**；\n2. 等压过程：系统在变化过程中，始态和终态压力相等，且等于环境压力；\n3. 等容过程：系统在变化过程中保持体积不变。在刚性容器中发生的变化一般是等容过程；\n4. 绝热过程：系统在变化过程中与环境之间没有热的交换，或者是由于有绝热壁的存在，或者是因为变化太快而与环境来不及热交换，或者热交换量极少可近似看作是绝热过程；\n5. 环状过程：系统从始态出发，经过一系列变化后又回到了原来状态。经此过程，所有状态函数的变化量都为零。\n\n另外，自由膨胀过程可以看为外压恒为0的等压膨胀过程；节流膨胀过程属于实际气体的不可逆过程，不在本札记讨论范围内。\n\n### 自由膨胀过程\n此过程不可逆，可看作外压恒为零的等压过程。\n\n- $\\Delta U=0$，由`Gay-Lussac-Joule`实验得出，而$U=f(T)$，故此过程中气体$T$不变；\n- $W=0$，显然，自由膨胀时外压恒为零，也无非体积功，故$W=0$；\n- $Q=0$，由热力学第一定律，$\\Delta U=Q+W$，式中$\\Delta U=0$，$W=0$，因此$Q=0$；\n- $\\Delta H=0$，$H$是状态函数，由上文气体$T$不变可以推出$H$不变。 另外也可由公式$\\Delta H=\\Delta U + \\Delta(pV)$，$pV=nRT$（n、T不变，所以$pV$不变）推出$\\Delta H=0$；\n- $\\Delta S>0$，显然该过程不可逆，其对应的可逆过程为等温可逆膨胀，计算得$\\Delta S=\\int\\dfrac{\\delta Q}{T} = \\dfrac{Q}{T} = nR\\ln\\dfrac{V_2}{V_1} = -nR\\ln\\dfrac{p_2}{p_1}$；\n- $\\Delta G<0​$，由公式$\\Delta G=\\Delta H-\\Delta (TS)​$，并且$\\Delta H=0​$、$T​$不变得出$\\Delta G=-T\\Delta S​$；\n- $\\Delta A<0$，与计算$\\Delta G$的过程类似，$\\Delta A=-T\\Delta S$。\n\n### 等温可逆过程\n此过程满足 $pV=nRT=\\mathrm{Constant}$。\n\n- $\\Delta U=0$，$U$为状态函数，等温过程系统温度不变，因此$U$不变、$\\Delta U=0$；\n- $W$，由公式$W=-\\int_{V_1}^{V_2}p_{\\mathrm{e}}\\mathrm{d}V$，且$p_e=p=\\dfrac{nRT}{V}$（可逆过程中环境压力始终近似于系统压力），所以$W=-nRT\\int_{V_1}^{V^2} \\dfrac{1}{V} \\mathrm{d}V=-nRT\\ln\\dfrac{V_2}{V_1}$；此外，若已知系统的始末压力，也可以将前式变换为$W=nRT\\dfrac{p_1}{p_2}$\n- $Q$，由热力学第一定律，$\\Delta U=W+Q$，得$Q=-W=nRT\\ln\\dfrac{V_2}{V_1}$；\n- $\\Delta H$，与$U$类似，为状态函数，$\\Delta H=0$；\n- $\\Delta S$，此过程已经为可逆过程，不必再设计可逆过程。因此$\\Delta S=\\int\\dfrac{\\delta Q}{T} = \\dfrac{Q}{T} = nR\\ln\\dfrac{V_2}{V_1} = -nR\\ln\\dfrac{p_2}{p_1}$；\n- $\\Delta G$，直接代入公式$\\Delta G=\\Delta H-\\Delta(TS)$，得$\\Delta G=-nRT\\ln\\dfrac{V_2}{V_1}=nRT\\ln\\dfrac{p_2}{p_1}=W $；\n- $\\Delta A$，同$\\Delta G$，得到$\\Delta A=\\Delta G=W=-nRT\\ln\\dfrac{V_2}{V_1}=nRT\\ln\\dfrac{p_2}{p_1} $。\n\n### 等压过程\n此过程满足 $\\dfrac{nRT}{V}=\\text{Constant}$\n\n- $\\Delta U$，此时$\\Delta U\\neq 0$，应用公式$\\Delta U=Q_{\\mathrm{V}}=nC_{\\mathrm{V,m}} (T_2 - T_1)=\\dfrac{p}{R}C_{\\mathrm{V,m}} (V_2-V_1)$计算。单原子分子理想气体的$C_\\mathrm{V,m}=\\dfrac{3}{2}R$。\n- $W​$，显然 $W=-\\int_{V_1}^{V_2}p_e\\mathrm{d}V=p(V_2 - V_1)​$；\n- $Q$，等压过程中的热交换量用$Q_\\mathrm{p}$表示，并且$Q_\\mathrm{p}=nC_\\mathrm{p,m}\\Delta T$或者使用$C_\\mathrm{p,m}=C_\\mathrm{V,m}+R$以及$Q=\\Delta U-W$求解。\n- $\\Delta H$，直接使用公式$\\Delta H = \\Delta U + \\Delta(pV) = nC_\\mathrm{P,m}(T_2-T_1)$\n- $\\Delta S$，等压过程对应的可逆过程为物体的可逆加热或冷却，有$\\delta Q_R=C\\mathrm{d}T=nC_\\mathrm{p,m}\\mathrm{d}T$，因此，$\\Delta S = \\int_{T_A}^{T_B} \\dfrac{nC_\\mathrm{p,m}}{T}\\mathrm{d}T=nC_\\mathrm{p,m}\\ln\\dfrac{T_{B}}{T_{A}} $，根据公式$pV=nRT$可以求出$T$，这里不再对式子进行展开；\n- $\\Delta G$，直接代入式子$\\Delta G=\\Delta H-\\Delta(TS)$即可（题目会给出气体的标准摩尔熵，结合上面的$\\Delta S$可以使用$\\Delta (TS)=T_2 n(S_m+\\Delta S) - T_1 nS_m$求出$\\Delta G$）；\n- $\\Delta A$，同$\\Delta G$，直接代入$\\Delta A=\\Delta U-\\Delta (TS)$求解。\n\n### 等容过程\n此过程满足$\\dfrac{nRT}{p}=\\mathrm{Constant}$。\n\n- $\\Delta U$，与等压过程一样，直接使用公式$\\Delta U=Q_\\mathrm{V}=nC_\\mathrm{V,m}\\Delta T$。单原子分子理想气体的$C_\\mathrm{V,m}=\\dfrac{3}{2}R $；\n- $W$，因为体积无变化，$\\mathrm{d}V=0$，故$W=\\int_{V_1}^{V_2} p\\mathrm{d}V=0$；\n- $Q$，等容过程的热交换量也成为恒容热$Q_\\mathrm{V}$，$Q_\\mathrm{V}=nC_\\mathrm{V,m}\\Delta T$；\n- $\\Delta H$，可以结合式子$pV=nRT$求出$\\Delta (pV)=nR\\Delta T$，最后代入$\\Delta H=\\Delta U-\\Delta (PV)$求出$\\Delta H$；\n- $\\Delta S$，等容过程对应的可逆过程为物体的可逆加热或冷却，有$\\delta Q_R=C\\mathrm{d}T=nC_\\mathrm{V,m}\\mathrm{d}T$，因此，$\\Delta S = \\int_{T_A}^{T_B} \\dfrac{nC_\\mathrm{V,m}}{T}\\mathrm{d}T=\\Delta S=nC_\\mathrm{V,m}\\ln\\dfrac{T_{B}}{T_{A}} $，根据公式$pV=nRT$可以求出$T$，这里不再对式子进行展开；\n- $\\Delta G$，同等压过程，因为温度发生改变，必须知道$S$的初始值才能计算出$\\Delta (TS)$，所以题目会给出或间接给出$S$，此时直接代入公式$\\Delta  G=\\Delta H-\\Delta (TS)$即可求出吉布斯自由能的变化值；\n- $\\Delta A$，与$\\Delta G$类似，仅将$\\Delta H$替换为$\\Delta U$其余不变，即可计算出亥姆霍兹自由能的变化值。\n\n### 绝热可逆过程\n这是一个非常重要的过程，可逆，满足方程$pV^\\gamma=K=\\mathrm{Constant}$，式中$\\gamma=\\dfrac{C_\\mathrm{p,m}}{C_\\mathrm{V,m}}$，对于理想气体$\\gamma=\\dfrac{5}{3}$。\n\n- $\\Delta U$，由热力学第一定律，$\\Delta U=Q+W$，$Q=0$，故$\\Delta U=W=nC_\\mathrm{V,m}\\Delta T$；\n- $Q$，绝热过程定义直接表明$Q=0$；\n- $W​$，$W=-\\int_{V_1}^{V_2}p\\mathrm{d}V = -\\int_{V_1}^{V_2}\\dfrac{K}{V^\\gamma}\\mathrm{d}V = -\\big[ \\dfrac{K}{(1-\\gamma)V^{\\gamma-1}} \\big]_{V_1}^{V_2} = -\\dfrac{K}{1-\\gamma} \\big[ \\dfrac{1}{V_2^{\\gamma-1}} - \\dfrac{1}{V_1^{\\gamma-1}} \\big] $\n   因为$p_1 V_1^\\gamma = p_2 V_2^\\gamma = K$，上式写为$ W=\\dfrac{p_2 V_2- p_1 V_1}{\\gamma -1}=\\dfrac{nR(T_2 - T_1)}{\\gamma -1}  $，又因为$\\dfrac{nR}{C_V}=\\gamma-1$，所以$W=C_V(T_2 -T_1)$\n- $\\Delta H$，计算$\\Delta H$必须知道$\\Delta (pV)$，此时没有更加简单的办法，只能分别求出$p_1$，$V_1$，$p_2$，$V_2$然后计算出$p_2 V_2 - p_1 V_1$最后代入$\\Delta H=\\Delta U +p_2 V_2 - p_1 V_1$即可求出$\\Delta H$；\n- $\\Delta S$，该过程为绝热可逆过程，$\\delta Q_R=0$，故熵变为０，即$\\Delta S=0$；\n- $\\Delta G$，该过程为变温过程，故题目会直接或间接给出$S$的初始值，然后利用$\\Delta G=\\Delta H-\\Delta (TS)=\\Delta H-S\\Delta T$计算出$\\Delta G$即可；\n- $\\Delta A$，与$\\Delta G$类似，将$\\Delta G$中的$\\Delta H$换为$\\Delta U$即可。\n\n### 环状过程\n此过程没有具体的方程，但可以多个过程组成，系统最终状态与初始状态相同。\n\n- 由于系统初始状态与终末状态相同，故**系统**中所有状态函数的变化量为零，即$\\Delta U=\\Delta H=\\Delta S=\\Delta G=\\Delta A=0$，**注意，此式子描述的是系统的热力学量，而此系统与外界有能量交换，故为非孤立体系，熵变可以为０**。\n- $W$与$Q$，计算这两个热力学量时**不能**设计过程来求，只能按照过程的具体细节，分解成容易求出$W$和$Q$的过程分别计算出两者，然后求和。\n\n以上为本渣的总结，如有纰漏，还请大神指正。\n","source":"_posts/PhysChem-Revise-1.md","raw":"---\ntitle: 物理化学复习札记（一）：理想气体热力学量求解总结\ndate: 2017-06-26 17:07:41\ntags:\n    - 物理化学\n    - 化学\ncategories: Physical Chemistry\n---\n\n\n**这是这个系列的第一篇，也是第一次写这种类型的札记，如果有纰漏，还请在评论区指出，谢谢各位！**\n\n## 热力学量说明\n物理化学中，热力学主要研究7个热力学量，这7个量如下：\n\n1. $U$，系统的热力学能，或称内能，属于状态函数，$U=f(T)$，无法求出$U$的值，但可以求出$\\Delta U$的值，单位为J；\n2. $Q$，系统与环境交换的热量，当系统放热时，$Q$为负值；系统吸热，则$Q$为正值，单位为J；\n3. $W$，环境对系统所做的功，分为体积功和非体积功，单位为J；\n4. $H$，焓，定义为 $H=U+pV$，无实际含义，仅为计算方便而产生，属于状态函数，$H=f(T)$，与$U$一样，无法求出$H$的值，但可以求出$\\Delta H$的值，单位为J；\n5. $S$，大名鼎鼎的熵，定义为$S=\\int_A^B (\\dfrac{\\delta Q}{T})_R$，属于状态函数，处于绝对零度时完美晶体的熵为0，单位J$\\cdot $K$^{-1}$\n6. $A$，亥姆霍兹自由能，定义为$A=U-TS$，为状态函数，无法求出$A$的值，但可以求出$\\Delta A$的值，单位为J；\n7. $G$，吉布斯自由能，定义为$G=H-TS$，为状态函数，无法求出$G$的值，但可以求出$\\Delta G$的值，单位为J；\n\n以上说明中，状态函数是指当系统状态一定时，其值即确定，亦即在某个过程中其变化量$\\Delta f$只与始末状态有关，与过程细节无关。这个性质**非常重要**，物理化学常见的设计过程求解热力学量的理论基础即在于此。\n\n## 热力学四大定律\n\n是的，热力学有四大定律，分别为热力学第零定律、热力学第一定律、热力学第二定律和热力学第三定律。\n\n### 热力学第零定律\n**如果两个系统分别与处于确定状态的第三个系统达到热平衡，则这两个系统彼此也将处于热平衡。**\n\n这个定律定义了温度的概念，当两个系统相互接触处于热平衡后，它们的性质不再变化，我们称之具有相同的温度。而定义中提到的第三系统为温度计的产生奠定了理论基础。\n\n### 热力学第一定律\n**在变化过程中，系统的热力学能变化量表示为系统和环境的热交换量与外界对系统所做功的总和。**\n写成公式即为 $ \\Delta U = Q + W $，\n或者写成微分形式$ \\mathrm{d}U = \\delta Q + \\delta W $\n\n### 热力学第二定律\n\n文字可表述为：\n\n> 克劳修斯表述：不可能把热从低温物体传到高温物体，而不引起其他变化；\n> 开尔文表述：不可能从单一热源取出热使之完全变为功，而不发生其他变化。\n\n数学形式：\n\n- 克劳修斯不等式表述形式：$ \\Delta S_{A\\to B}-\\sum_A^B \\dfrac{\\delta Q}{T} \\geq 0 $\n- 常用表述形式：$ \\mathrm{d}S - \\dfrac{\\delta Q}{T} \\geq 0 $\n\n\n上式表明，在一个隔离系统中，熵永不减少。 隔离系统是绝热的，即$\\delta Q=0$，因此$\\mathrm{d}S_{\\mathrm{iso}} \\geq 0$。\n\n\n### 热力学第三定律\n可以表述为**在温度趋于热力学温度0K的等温过程中，系统的熵值不变 **，也可以表述为“**在0K时，任何完美晶体的熵等于零**”，还可以表述为”**绝对零度不可能达到**“。\n\n\n## 特殊过程的热力学量求值\n\n**本节所有过程均为$p$,$V$,$T$过程，不考虑非体积功！**\n\n常见的变化过程（均为理想气体的变化过程）有：\n1. 等温过程：系统由状态1变到状态2，变化过程中以及始态和终态的温度不变，**且等于环境温度**；\n2. 等压过程：系统在变化过程中，始态和终态压力相等，且等于环境压力；\n3. 等容过程：系统在变化过程中保持体积不变。在刚性容器中发生的变化一般是等容过程；\n4. 绝热过程：系统在变化过程中与环境之间没有热的交换，或者是由于有绝热壁的存在，或者是因为变化太快而与环境来不及热交换，或者热交换量极少可近似看作是绝热过程；\n5. 环状过程：系统从始态出发，经过一系列变化后又回到了原来状态。经此过程，所有状态函数的变化量都为零。\n\n另外，自由膨胀过程可以看为外压恒为0的等压膨胀过程；节流膨胀过程属于实际气体的不可逆过程，不在本札记讨论范围内。\n\n### 自由膨胀过程\n此过程不可逆，可看作外压恒为零的等压过程。\n\n- $\\Delta U=0$，由`Gay-Lussac-Joule`实验得出，而$U=f(T)$，故此过程中气体$T$不变；\n- $W=0$，显然，自由膨胀时外压恒为零，也无非体积功，故$W=0$；\n- $Q=0$，由热力学第一定律，$\\Delta U=Q+W$，式中$\\Delta U=0$，$W=0$，因此$Q=0$；\n- $\\Delta H=0$，$H$是状态函数，由上文气体$T$不变可以推出$H$不变。 另外也可由公式$\\Delta H=\\Delta U + \\Delta(pV)$，$pV=nRT$（n、T不变，所以$pV$不变）推出$\\Delta H=0$；\n- $\\Delta S>0$，显然该过程不可逆，其对应的可逆过程为等温可逆膨胀，计算得$\\Delta S=\\int\\dfrac{\\delta Q}{T} = \\dfrac{Q}{T} = nR\\ln\\dfrac{V_2}{V_1} = -nR\\ln\\dfrac{p_2}{p_1}$；\n- $\\Delta G<0​$，由公式$\\Delta G=\\Delta H-\\Delta (TS)​$，并且$\\Delta H=0​$、$T​$不变得出$\\Delta G=-T\\Delta S​$；\n- $\\Delta A<0$，与计算$\\Delta G$的过程类似，$\\Delta A=-T\\Delta S$。\n\n### 等温可逆过程\n此过程满足 $pV=nRT=\\mathrm{Constant}$。\n\n- $\\Delta U=0$，$U$为状态函数，等温过程系统温度不变，因此$U$不变、$\\Delta U=0$；\n- $W$，由公式$W=-\\int_{V_1}^{V_2}p_{\\mathrm{e}}\\mathrm{d}V$，且$p_e=p=\\dfrac{nRT}{V}$（可逆过程中环境压力始终近似于系统压力），所以$W=-nRT\\int_{V_1}^{V^2} \\dfrac{1}{V} \\mathrm{d}V=-nRT\\ln\\dfrac{V_2}{V_1}$；此外，若已知系统的始末压力，也可以将前式变换为$W=nRT\\dfrac{p_1}{p_2}$\n- $Q$，由热力学第一定律，$\\Delta U=W+Q$，得$Q=-W=nRT\\ln\\dfrac{V_2}{V_1}$；\n- $\\Delta H$，与$U$类似，为状态函数，$\\Delta H=0$；\n- $\\Delta S$，此过程已经为可逆过程，不必再设计可逆过程。因此$\\Delta S=\\int\\dfrac{\\delta Q}{T} = \\dfrac{Q}{T} = nR\\ln\\dfrac{V_2}{V_1} = -nR\\ln\\dfrac{p_2}{p_1}$；\n- $\\Delta G$，直接代入公式$\\Delta G=\\Delta H-\\Delta(TS)$，得$\\Delta G=-nRT\\ln\\dfrac{V_2}{V_1}=nRT\\ln\\dfrac{p_2}{p_1}=W $；\n- $\\Delta A$，同$\\Delta G$，得到$\\Delta A=\\Delta G=W=-nRT\\ln\\dfrac{V_2}{V_1}=nRT\\ln\\dfrac{p_2}{p_1} $。\n\n### 等压过程\n此过程满足 $\\dfrac{nRT}{V}=\\text{Constant}$\n\n- $\\Delta U$，此时$\\Delta U\\neq 0$，应用公式$\\Delta U=Q_{\\mathrm{V}}=nC_{\\mathrm{V,m}} (T_2 - T_1)=\\dfrac{p}{R}C_{\\mathrm{V,m}} (V_2-V_1)$计算。单原子分子理想气体的$C_\\mathrm{V,m}=\\dfrac{3}{2}R$。\n- $W​$，显然 $W=-\\int_{V_1}^{V_2}p_e\\mathrm{d}V=p(V_2 - V_1)​$；\n- $Q$，等压过程中的热交换量用$Q_\\mathrm{p}$表示，并且$Q_\\mathrm{p}=nC_\\mathrm{p,m}\\Delta T$或者使用$C_\\mathrm{p,m}=C_\\mathrm{V,m}+R$以及$Q=\\Delta U-W$求解。\n- $\\Delta H$，直接使用公式$\\Delta H = \\Delta U + \\Delta(pV) = nC_\\mathrm{P,m}(T_2-T_1)$\n- $\\Delta S$，等压过程对应的可逆过程为物体的可逆加热或冷却，有$\\delta Q_R=C\\mathrm{d}T=nC_\\mathrm{p,m}\\mathrm{d}T$，因此，$\\Delta S = \\int_{T_A}^{T_B} \\dfrac{nC_\\mathrm{p,m}}{T}\\mathrm{d}T=nC_\\mathrm{p,m}\\ln\\dfrac{T_{B}}{T_{A}} $，根据公式$pV=nRT$可以求出$T$，这里不再对式子进行展开；\n- $\\Delta G$，直接代入式子$\\Delta G=\\Delta H-\\Delta(TS)$即可（题目会给出气体的标准摩尔熵，结合上面的$\\Delta S$可以使用$\\Delta (TS)=T_2 n(S_m+\\Delta S) - T_1 nS_m$求出$\\Delta G$）；\n- $\\Delta A$，同$\\Delta G$，直接代入$\\Delta A=\\Delta U-\\Delta (TS)$求解。\n\n### 等容过程\n此过程满足$\\dfrac{nRT}{p}=\\mathrm{Constant}$。\n\n- $\\Delta U$，与等压过程一样，直接使用公式$\\Delta U=Q_\\mathrm{V}=nC_\\mathrm{V,m}\\Delta T$。单原子分子理想气体的$C_\\mathrm{V,m}=\\dfrac{3}{2}R $；\n- $W$，因为体积无变化，$\\mathrm{d}V=0$，故$W=\\int_{V_1}^{V_2} p\\mathrm{d}V=0$；\n- $Q$，等容过程的热交换量也成为恒容热$Q_\\mathrm{V}$，$Q_\\mathrm{V}=nC_\\mathrm{V,m}\\Delta T$；\n- $\\Delta H$，可以结合式子$pV=nRT$求出$\\Delta (pV)=nR\\Delta T$，最后代入$\\Delta H=\\Delta U-\\Delta (PV)$求出$\\Delta H$；\n- $\\Delta S$，等容过程对应的可逆过程为物体的可逆加热或冷却，有$\\delta Q_R=C\\mathrm{d}T=nC_\\mathrm{V,m}\\mathrm{d}T$，因此，$\\Delta S = \\int_{T_A}^{T_B} \\dfrac{nC_\\mathrm{V,m}}{T}\\mathrm{d}T=\\Delta S=nC_\\mathrm{V,m}\\ln\\dfrac{T_{B}}{T_{A}} $，根据公式$pV=nRT$可以求出$T$，这里不再对式子进行展开；\n- $\\Delta G$，同等压过程，因为温度发生改变，必须知道$S$的初始值才能计算出$\\Delta (TS)$，所以题目会给出或间接给出$S$，此时直接代入公式$\\Delta  G=\\Delta H-\\Delta (TS)$即可求出吉布斯自由能的变化值；\n- $\\Delta A$，与$\\Delta G$类似，仅将$\\Delta H$替换为$\\Delta U$其余不变，即可计算出亥姆霍兹自由能的变化值。\n\n### 绝热可逆过程\n这是一个非常重要的过程，可逆，满足方程$pV^\\gamma=K=\\mathrm{Constant}$，式中$\\gamma=\\dfrac{C_\\mathrm{p,m}}{C_\\mathrm{V,m}}$，对于理想气体$\\gamma=\\dfrac{5}{3}$。\n\n- $\\Delta U$，由热力学第一定律，$\\Delta U=Q+W$，$Q=0$，故$\\Delta U=W=nC_\\mathrm{V,m}\\Delta T$；\n- $Q$，绝热过程定义直接表明$Q=0$；\n- $W​$，$W=-\\int_{V_1}^{V_2}p\\mathrm{d}V = -\\int_{V_1}^{V_2}\\dfrac{K}{V^\\gamma}\\mathrm{d}V = -\\big[ \\dfrac{K}{(1-\\gamma)V^{\\gamma-1}} \\big]_{V_1}^{V_2} = -\\dfrac{K}{1-\\gamma} \\big[ \\dfrac{1}{V_2^{\\gamma-1}} - \\dfrac{1}{V_1^{\\gamma-1}} \\big] $\n   因为$p_1 V_1^\\gamma = p_2 V_2^\\gamma = K$，上式写为$ W=\\dfrac{p_2 V_2- p_1 V_1}{\\gamma -1}=\\dfrac{nR(T_2 - T_1)}{\\gamma -1}  $，又因为$\\dfrac{nR}{C_V}=\\gamma-1$，所以$W=C_V(T_2 -T_1)$\n- $\\Delta H$，计算$\\Delta H$必须知道$\\Delta (pV)$，此时没有更加简单的办法，只能分别求出$p_1$，$V_1$，$p_2$，$V_2$然后计算出$p_2 V_2 - p_1 V_1$最后代入$\\Delta H=\\Delta U +p_2 V_2 - p_1 V_1$即可求出$\\Delta H$；\n- $\\Delta S$，该过程为绝热可逆过程，$\\delta Q_R=0$，故熵变为０，即$\\Delta S=0$；\n- $\\Delta G$，该过程为变温过程，故题目会直接或间接给出$S$的初始值，然后利用$\\Delta G=\\Delta H-\\Delta (TS)=\\Delta H-S\\Delta T$计算出$\\Delta G$即可；\n- $\\Delta A$，与$\\Delta G$类似，将$\\Delta G$中的$\\Delta H$换为$\\Delta U$即可。\n\n### 环状过程\n此过程没有具体的方程，但可以多个过程组成，系统最终状态与初始状态相同。\n\n- 由于系统初始状态与终末状态相同，故**系统**中所有状态函数的变化量为零，即$\\Delta U=\\Delta H=\\Delta S=\\Delta G=\\Delta A=0$，**注意，此式子描述的是系统的热力学量，而此系统与外界有能量交换，故为非孤立体系，熵变可以为０**。\n- $W$与$Q$，计算这两个热力学量时**不能**设计过程来求，只能按照过程的具体细节，分解成容易求出$W$和$Q$的过程分别计算出两者，然后求和。\n\n以上为本渣的总结，如有纰漏，还请大神指正。\n","slug":"PhysChem-Revise-1","published":1,"updated":"2018-12-31T11:47:25.723Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjbbs001gzq4ixsjfwmxy","content":"<p><strong>这是这个系列的第一篇，也是第一次写这种类型的札记，如果有纰漏，还请在评论区指出，谢谢各位！</strong></p>\n<h2 id=\"热力学量说明\"><a href=\"#热力学量说明\" class=\"headerlink\" title=\"热力学量说明\"></a>热力学量说明</h2><p>物理化学中，热力学主要研究7个热力学量，这7个量如下：</p>\n<ol>\n<li>$U$，系统的热力学能，或称内能，属于状态函数，$U=f(T)$，无法求出$U$的值，但可以求出$\\Delta U$的值，单位为J；</li>\n<li>$Q$，系统与环境交换的热量，当系统放热时，$Q$为负值；系统吸热，则$Q$为正值，单位为J；</li>\n<li>$W$，环境对系统所做的功，分为体积功和非体积功，单位为J；</li>\n<li>$H$，焓，定义为 $H=U+pV$，无实际含义，仅为计算方便而产生，属于状态函数，$H=f(T)$，与$U$一样，无法求出$H$的值，但可以求出$\\Delta H$的值，单位为J；</li>\n<li>$S$，大名鼎鼎的熵，定义为$S=\\int_A^B (\\dfrac{\\delta Q}{T})_R$，属于状态函数，处于绝对零度时完美晶体的熵为0，单位J$\\cdot $K$^{-1}$</li>\n<li>$A$，亥姆霍兹自由能，定义为$A=U-TS$，为状态函数，无法求出$A$的值，但可以求出$\\Delta A$的值，单位为J；</li>\n<li>$G$，吉布斯自由能，定义为$G=H-TS$，为状态函数，无法求出$G$的值，但可以求出$\\Delta G$的值，单位为J；</li>\n</ol>\n<p>以上说明中，状态函数是指当系统状态一定时，其值即确定，亦即在某个过程中其变化量$\\Delta f$只与始末状态有关，与过程细节无关。这个性质<strong>非常重要</strong>，物理化学常见的设计过程求解热力学量的理论基础即在于此。</p>\n<h2 id=\"热力学四大定律\"><a href=\"#热力学四大定律\" class=\"headerlink\" title=\"热力学四大定律\"></a>热力学四大定律</h2><p>是的，热力学有四大定律，分别为热力学第零定律、热力学第一定律、热力学第二定律和热力学第三定律。</p>\n<h3 id=\"热力学第零定律\"><a href=\"#热力学第零定律\" class=\"headerlink\" title=\"热力学第零定律\"></a>热力学第零定律</h3><p><strong>如果两个系统分别与处于确定状态的第三个系统达到热平衡，则这两个系统彼此也将处于热平衡。</strong></p>\n<p>这个定律定义了温度的概念，当两个系统相互接触处于热平衡后，它们的性质不再变化，我们称之具有相同的温度。而定义中提到的第三系统为温度计的产生奠定了理论基础。</p>\n<h3 id=\"热力学第一定律\"><a href=\"#热力学第一定律\" class=\"headerlink\" title=\"热力学第一定律\"></a>热力学第一定律</h3><p><strong>在变化过程中，系统的热力学能变化量表示为系统和环境的热交换量与外界对系统所做功的总和。</strong><br>写成公式即为 $ \\Delta U = Q + W $，<br>或者写成微分形式$ \\mathrm{d}U = \\delta Q + \\delta W $</p>\n<h3 id=\"热力学第二定律\"><a href=\"#热力学第二定律\" class=\"headerlink\" title=\"热力学第二定律\"></a>热力学第二定律</h3><p>文字可表述为：</p>\n<blockquote>\n<p>克劳修斯表述：不可能把热从低温物体传到高温物体，而不引起其他变化；<br>开尔文表述：不可能从单一热源取出热使之完全变为功，而不发生其他变化。</p>\n</blockquote>\n<p>数学形式：</p>\n<ul>\n<li>克劳修斯不等式表述形式：$ \\Delta S_{A\\to B}-\\sum_A^B \\dfrac{\\delta Q}{T} \\geq 0 $</li>\n<li>常用表述形式：$ \\mathrm{d}S - \\dfrac{\\delta Q}{T} \\geq 0 $</li>\n</ul>\n<p>上式表明，在一个隔离系统中，熵永不减少。 隔离系统是绝热的，即$\\delta Q=0$，因此$\\mathrm{d}S_{\\mathrm{iso}} \\geq 0$。</p>\n<h3 id=\"热力学第三定律\"><a href=\"#热力学第三定律\" class=\"headerlink\" title=\"热力学第三定律\"></a>热力学第三定律</h3><p>可以表述为<strong>在温度趋于热力学温度0K的等温过程中，系统的熵值不变 </strong>，也可以表述为“<strong>在0K时，任何完美晶体的熵等于零</strong>”，还可以表述为”<strong>绝对零度不可能达到</strong>“。</p>\n<h2 id=\"特殊过程的热力学量求值\"><a href=\"#特殊过程的热力学量求值\" class=\"headerlink\" title=\"特殊过程的热力学量求值\"></a>特殊过程的热力学量求值</h2><p><strong>本节所有过程均为$p$,$V$,$T$过程，不考虑非体积功！</strong></p>\n<p>常见的变化过程（均为理想气体的变化过程）有：</p>\n<ol>\n<li>等温过程：系统由状态1变到状态2，变化过程中以及始态和终态的温度不变，<strong>且等于环境温度</strong>；</li>\n<li>等压过程：系统在变化过程中，始态和终态压力相等，且等于环境压力；</li>\n<li>等容过程：系统在变化过程中保持体积不变。在刚性容器中发生的变化一般是等容过程；</li>\n<li>绝热过程：系统在变化过程中与环境之间没有热的交换，或者是由于有绝热壁的存在，或者是因为变化太快而与环境来不及热交换，或者热交换量极少可近似看作是绝热过程；</li>\n<li>环状过程：系统从始态出发，经过一系列变化后又回到了原来状态。经此过程，所有状态函数的变化量都为零。</li>\n</ol>\n<p>另外，自由膨胀过程可以看为外压恒为0的等压膨胀过程；节流膨胀过程属于实际气体的不可逆过程，不在本札记讨论范围内。</p>\n<h3 id=\"自由膨胀过程\"><a href=\"#自由膨胀过程\" class=\"headerlink\" title=\"自由膨胀过程\"></a>自由膨胀过程</h3><p>此过程不可逆，可看作外压恒为零的等压过程。</p>\n<ul>\n<li>$\\Delta U=0$，由<code>Gay-Lussac-Joule</code>实验得出，而$U=f(T)$，故此过程中气体$T$不变；</li>\n<li>$W=0$，显然，自由膨胀时外压恒为零，也无非体积功，故$W=0$；</li>\n<li>$Q=0$，由热力学第一定律，$\\Delta U=Q+W$，式中$\\Delta U=0$，$W=0$，因此$Q=0$；</li>\n<li>$\\Delta H=0$，$H$是状态函数，由上文气体$T$不变可以推出$H$不变。 另外也可由公式$\\Delta H=\\Delta U + \\Delta(pV)$，$pV=nRT$（n、T不变，所以$pV$不变）推出$\\Delta H=0$；</li>\n<li>$\\Delta S&gt;0$，显然该过程不可逆，其对应的可逆过程为等温可逆膨胀，计算得$\\Delta S=\\int\\dfrac{\\delta Q}{T} = \\dfrac{Q}{T} = nR\\ln\\dfrac{V_2}{V_1} = -nR\\ln\\dfrac{p_2}{p_1}$；</li>\n<li>$\\Delta G&lt;0​$，由公式$\\Delta G=\\Delta H-\\Delta (TS)​$，并且$\\Delta H=0​$、$T​$不变得出$\\Delta G=-T\\Delta S​$；</li>\n<li>$\\Delta A&lt;0$，与计算$\\Delta G$的过程类似，$\\Delta A=-T\\Delta S$。</li>\n</ul>\n<h3 id=\"等温可逆过程\"><a href=\"#等温可逆过程\" class=\"headerlink\" title=\"等温可逆过程\"></a>等温可逆过程</h3><p>此过程满足 $pV=nRT=\\mathrm{Constant}$。</p>\n<ul>\n<li>$\\Delta U=0$，$U$为状态函数，等温过程系统温度不变，因此$U$不变、$\\Delta U=0$；</li>\n<li>$W$，由公式$W=-\\int_{V_1}^{V_2}p_{\\mathrm{e}}\\mathrm{d}V$，且$p_e=p=\\dfrac{nRT}{V}$（可逆过程中环境压力始终近似于系统压力），所以$W=-nRT\\int_{V_1}^{V^2} \\dfrac{1}{V} \\mathrm{d}V=-nRT\\ln\\dfrac{V_2}{V_1}$；此外，若已知系统的始末压力，也可以将前式变换为$W=nRT\\dfrac{p_1}{p_2}$</li>\n<li>$Q$，由热力学第一定律，$\\Delta U=W+Q$，得$Q=-W=nRT\\ln\\dfrac{V_2}{V_1}$；</li>\n<li>$\\Delta H$，与$U$类似，为状态函数，$\\Delta H=0$；</li>\n<li>$\\Delta S$，此过程已经为可逆过程，不必再设计可逆过程。因此$\\Delta S=\\int\\dfrac{\\delta Q}{T} = \\dfrac{Q}{T} = nR\\ln\\dfrac{V_2}{V_1} = -nR\\ln\\dfrac{p_2}{p_1}$；</li>\n<li>$\\Delta G$，直接代入公式$\\Delta G=\\Delta H-\\Delta(TS)$，得$\\Delta G=-nRT\\ln\\dfrac{V_2}{V_1}=nRT\\ln\\dfrac{p_2}{p_1}=W $；</li>\n<li>$\\Delta A$，同$\\Delta G$，得到$\\Delta A=\\Delta G=W=-nRT\\ln\\dfrac{V_2}{V_1}=nRT\\ln\\dfrac{p_2}{p_1} $。</li>\n</ul>\n<h3 id=\"等压过程\"><a href=\"#等压过程\" class=\"headerlink\" title=\"等压过程\"></a>等压过程</h3><p>此过程满足 $\\dfrac{nRT}{V}=\\text{Constant}$</p>\n<ul>\n<li>$\\Delta U$，此时$\\Delta U\\neq 0$，应用公式$\\Delta U=Q_{\\mathrm{V}}=nC_{\\mathrm{V,m}} (T_2 - T_1)=\\dfrac{p}{R}C_{\\mathrm{V,m}} (V_2-V_1)$计算。单原子分子理想气体的$C_\\mathrm{V,m}=\\dfrac{3}{2}R$。</li>\n<li>$W​$，显然 $W=-\\int_{V_1}^{V_2}p_e\\mathrm{d}V=p(V_2 - V_1)​$；</li>\n<li>$Q$，等压过程中的热交换量用$Q_\\mathrm{p}$表示，并且$Q_\\mathrm{p}=nC_\\mathrm{p,m}\\Delta T$或者使用$C_\\mathrm{p,m}=C_\\mathrm{V,m}+R$以及$Q=\\Delta U-W$求解。</li>\n<li>$\\Delta H$，直接使用公式$\\Delta H = \\Delta U + \\Delta(pV) = nC_\\mathrm{P,m}(T_2-T_1)$</li>\n<li>$\\Delta S$，等压过程对应的可逆过程为物体的可逆加热或冷却，有$\\delta Q_R=C\\mathrm{d}T=nC_\\mathrm{p,m}\\mathrm{d}T$，因此，$\\Delta S = \\int_{T_A}^{T_B} \\dfrac{nC_\\mathrm{p,m}}{T}\\mathrm{d}T=nC_\\mathrm{p,m}\\ln\\dfrac{T_{B}}{T_{A}} $，根据公式$pV=nRT$可以求出$T$，这里不再对式子进行展开；</li>\n<li>$\\Delta G$，直接代入式子$\\Delta G=\\Delta H-\\Delta(TS)$即可（题目会给出气体的标准摩尔熵，结合上面的$\\Delta S$可以使用$\\Delta (TS)=T_2 n(S_m+\\Delta S) - T_1 nS_m$求出$\\Delta G$）；</li>\n<li>$\\Delta A$，同$\\Delta G$，直接代入$\\Delta A=\\Delta U-\\Delta (TS)$求解。</li>\n</ul>\n<h3 id=\"等容过程\"><a href=\"#等容过程\" class=\"headerlink\" title=\"等容过程\"></a>等容过程</h3><p>此过程满足$\\dfrac{nRT}{p}=\\mathrm{Constant}$。</p>\n<ul>\n<li>$\\Delta U$，与等压过程一样，直接使用公式$\\Delta U=Q_\\mathrm{V}=nC_\\mathrm{V,m}\\Delta T$。单原子分子理想气体的$C_\\mathrm{V,m}=\\dfrac{3}{2}R $；</li>\n<li>$W$，因为体积无变化，$\\mathrm{d}V=0$，故$W=\\int_{V_1}^{V_2} p\\mathrm{d}V=0$；</li>\n<li>$Q$，等容过程的热交换量也成为恒容热$Q_\\mathrm{V}$，$Q_\\mathrm{V}=nC_\\mathrm{V,m}\\Delta T$；</li>\n<li>$\\Delta H$，可以结合式子$pV=nRT$求出$\\Delta (pV)=nR\\Delta T$，最后代入$\\Delta H=\\Delta U-\\Delta (PV)$求出$\\Delta H$；</li>\n<li>$\\Delta S$，等容过程对应的可逆过程为物体的可逆加热或冷却，有$\\delta Q_R=C\\mathrm{d}T=nC_\\mathrm{V,m}\\mathrm{d}T$，因此，$\\Delta S = \\int_{T_A}^{T_B} \\dfrac{nC_\\mathrm{V,m}}{T}\\mathrm{d}T=\\Delta S=nC_\\mathrm{V,m}\\ln\\dfrac{T_{B}}{T_{A}} $，根据公式$pV=nRT$可以求出$T$，这里不再对式子进行展开；</li>\n<li>$\\Delta G$，同等压过程，因为温度发生改变，必须知道$S$的初始值才能计算出$\\Delta (TS)$，所以题目会给出或间接给出$S$，此时直接代入公式$\\Delta  G=\\Delta H-\\Delta (TS)$即可求出吉布斯自由能的变化值；</li>\n<li>$\\Delta A$，与$\\Delta G$类似，仅将$\\Delta H$替换为$\\Delta U$其余不变，即可计算出亥姆霍兹自由能的变化值。</li>\n</ul>\n<h3 id=\"绝热可逆过程\"><a href=\"#绝热可逆过程\" class=\"headerlink\" title=\"绝热可逆过程\"></a>绝热可逆过程</h3><p>这是一个非常重要的过程，可逆，满足方程$pV^\\gamma=K=\\mathrm{Constant}$，式中$\\gamma=\\dfrac{C_\\mathrm{p,m}}{C_\\mathrm{V,m}}$，对于理想气体$\\gamma=\\dfrac{5}{3}$。</p>\n<ul>\n<li>$\\Delta U$，由热力学第一定律，$\\Delta U=Q+W$，$Q=0$，故$\\Delta U=W=nC_\\mathrm{V,m}\\Delta T$；</li>\n<li>$Q$，绝热过程定义直接表明$Q=0$；</li>\n<li>$W​$，$W=-\\int_{V_1}^{V_2}p\\mathrm{d}V = -\\int_{V_1}^{V_2}\\dfrac{K}{V^\\gamma}\\mathrm{d}V = -\\big[ \\dfrac{K}{(1-\\gamma)V^{\\gamma-1}} \\big]_{V_1}^{V_2} = -\\dfrac{K}{1-\\gamma} \\big[ \\dfrac{1}{V_2^{\\gamma-1}} - \\dfrac{1}{V_1^{\\gamma-1}} \\big] $<br> 因为$p_1 V_1^\\gamma = p_2 V_2^\\gamma = K$，上式写为$ W=\\dfrac{p_2 V_2- p_1 V_1}{\\gamma -1}=\\dfrac{nR(T_2 - T_1)}{\\gamma -1}  $，又因为$\\dfrac{nR}{C_V}=\\gamma-1$，所以$W=C_V(T_2 -T_1)$</li>\n<li>$\\Delta H$，计算$\\Delta H$必须知道$\\Delta (pV)$，此时没有更加简单的办法，只能分别求出$p_1$，$V_1$，$p_2$，$V_2$然后计算出$p_2 V_2 - p_1 V_1$最后代入$\\Delta H=\\Delta U +p_2 V_2 - p_1 V_1$即可求出$\\Delta H$；</li>\n<li>$\\Delta S$，该过程为绝热可逆过程，$\\delta Q_R=0$，故熵变为０，即$\\Delta S=0$；</li>\n<li>$\\Delta G$，该过程为变温过程，故题目会直接或间接给出$S$的初始值，然后利用$\\Delta G=\\Delta H-\\Delta (TS)=\\Delta H-S\\Delta T$计算出$\\Delta G$即可；</li>\n<li>$\\Delta A$，与$\\Delta G$类似，将$\\Delta G$中的$\\Delta H$换为$\\Delta U$即可。</li>\n</ul>\n<h3 id=\"环状过程\"><a href=\"#环状过程\" class=\"headerlink\" title=\"环状过程\"></a>环状过程</h3><p>此过程没有具体的方程，但可以多个过程组成，系统最终状态与初始状态相同。</p>\n<ul>\n<li>由于系统初始状态与终末状态相同，故<strong>系统</strong>中所有状态函数的变化量为零，即$\\Delta U=\\Delta H=\\Delta S=\\Delta G=\\Delta A=0$，<strong>注意，此式子描述的是系统的热力学量，而此系统与外界有能量交换，故为非孤立体系，熵变可以为０</strong>。</li>\n<li>$W$与$Q$，计算这两个热力学量时<strong>不能</strong>设计过程来求，只能按照过程的具体细节，分解成容易求出$W$和$Q$的过程分别计算出两者，然后求和。</li>\n</ul>\n<p>以上为本渣的总结，如有纰漏，还请大神指正。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>这是这个系列的第一篇，也是第一次写这种类型的札记，如果有纰漏，还请在评论区指出，谢谢各位！</strong></p>\n<h2 id=\"热力学量说明\"><a href=\"#热力学量说明\" class=\"headerlink\" title=\"热力学量说明\"></a>热力学量说明</h2><p>物理化学中，热力学主要研究7个热力学量，这7个量如下：</p>\n<ol>\n<li>$U$，系统的热力学能，或称内能，属于状态函数，$U=f(T)$，无法求出$U$的值，但可以求出$\\Delta U$的值，单位为J；</li>\n<li>$Q$，系统与环境交换的热量，当系统放热时，$Q$为负值；系统吸热，则$Q$为正值，单位为J；</li>\n<li>$W$，环境对系统所做的功，分为体积功和非体积功，单位为J；</li>\n<li>$H$，焓，定义为 $H=U+pV$，无实际含义，仅为计算方便而产生，属于状态函数，$H=f(T)$，与$U$一样，无法求出$H$的值，但可以求出$\\Delta H$的值，单位为J；</li>\n<li>$S$，大名鼎鼎的熵，定义为$S=\\int_A^B (\\dfrac{\\delta Q}{T})_R$，属于状态函数，处于绝对零度时完美晶体的熵为0，单位J$\\cdot $K$^{-1}$</li>\n<li>$A$，亥姆霍兹自由能，定义为$A=U-TS$，为状态函数，无法求出$A$的值，但可以求出$\\Delta A$的值，单位为J；</li>\n<li>$G$，吉布斯自由能，定义为$G=H-TS$，为状态函数，无法求出$G$的值，但可以求出$\\Delta G$的值，单位为J；</li>\n</ol>\n<p>以上说明中，状态函数是指当系统状态一定时，其值即确定，亦即在某个过程中其变化量$\\Delta f$只与始末状态有关，与过程细节无关。这个性质<strong>非常重要</strong>，物理化学常见的设计过程求解热力学量的理论基础即在于此。</p>\n<h2 id=\"热力学四大定律\"><a href=\"#热力学四大定律\" class=\"headerlink\" title=\"热力学四大定律\"></a>热力学四大定律</h2><p>是的，热力学有四大定律，分别为热力学第零定律、热力学第一定律、热力学第二定律和热力学第三定律。</p>\n<h3 id=\"热力学第零定律\"><a href=\"#热力学第零定律\" class=\"headerlink\" title=\"热力学第零定律\"></a>热力学第零定律</h3><p><strong>如果两个系统分别与处于确定状态的第三个系统达到热平衡，则这两个系统彼此也将处于热平衡。</strong></p>\n<p>这个定律定义了温度的概念，当两个系统相互接触处于热平衡后，它们的性质不再变化，我们称之具有相同的温度。而定义中提到的第三系统为温度计的产生奠定了理论基础。</p>\n<h3 id=\"热力学第一定律\"><a href=\"#热力学第一定律\" class=\"headerlink\" title=\"热力学第一定律\"></a>热力学第一定律</h3><p><strong>在变化过程中，系统的热力学能变化量表示为系统和环境的热交换量与外界对系统所做功的总和。</strong><br>写成公式即为 $ \\Delta U = Q + W $，<br>或者写成微分形式$ \\mathrm{d}U = \\delta Q + \\delta W $</p>\n<h3 id=\"热力学第二定律\"><a href=\"#热力学第二定律\" class=\"headerlink\" title=\"热力学第二定律\"></a>热力学第二定律</h3><p>文字可表述为：</p>\n<blockquote>\n<p>克劳修斯表述：不可能把热从低温物体传到高温物体，而不引起其他变化；<br>开尔文表述：不可能从单一热源取出热使之完全变为功，而不发生其他变化。</p>\n</blockquote>\n<p>数学形式：</p>\n<ul>\n<li>克劳修斯不等式表述形式：$ \\Delta S_{A\\to B}-\\sum_A^B \\dfrac{\\delta Q}{T} \\geq 0 $</li>\n<li>常用表述形式：$ \\mathrm{d}S - \\dfrac{\\delta Q}{T} \\geq 0 $</li>\n</ul>\n<p>上式表明，在一个隔离系统中，熵永不减少。 隔离系统是绝热的，即$\\delta Q=0$，因此$\\mathrm{d}S_{\\mathrm{iso}} \\geq 0$。</p>\n<h3 id=\"热力学第三定律\"><a href=\"#热力学第三定律\" class=\"headerlink\" title=\"热力学第三定律\"></a>热力学第三定律</h3><p>可以表述为<strong>在温度趋于热力学温度0K的等温过程中，系统的熵值不变 </strong>，也可以表述为“<strong>在0K时，任何完美晶体的熵等于零</strong>”，还可以表述为”<strong>绝对零度不可能达到</strong>“。</p>\n<h2 id=\"特殊过程的热力学量求值\"><a href=\"#特殊过程的热力学量求值\" class=\"headerlink\" title=\"特殊过程的热力学量求值\"></a>特殊过程的热力学量求值</h2><p><strong>本节所有过程均为$p$,$V$,$T$过程，不考虑非体积功！</strong></p>\n<p>常见的变化过程（均为理想气体的变化过程）有：</p>\n<ol>\n<li>等温过程：系统由状态1变到状态2，变化过程中以及始态和终态的温度不变，<strong>且等于环境温度</strong>；</li>\n<li>等压过程：系统在变化过程中，始态和终态压力相等，且等于环境压力；</li>\n<li>等容过程：系统在变化过程中保持体积不变。在刚性容器中发生的变化一般是等容过程；</li>\n<li>绝热过程：系统在变化过程中与环境之间没有热的交换，或者是由于有绝热壁的存在，或者是因为变化太快而与环境来不及热交换，或者热交换量极少可近似看作是绝热过程；</li>\n<li>环状过程：系统从始态出发，经过一系列变化后又回到了原来状态。经此过程，所有状态函数的变化量都为零。</li>\n</ol>\n<p>另外，自由膨胀过程可以看为外压恒为0的等压膨胀过程；节流膨胀过程属于实际气体的不可逆过程，不在本札记讨论范围内。</p>\n<h3 id=\"自由膨胀过程\"><a href=\"#自由膨胀过程\" class=\"headerlink\" title=\"自由膨胀过程\"></a>自由膨胀过程</h3><p>此过程不可逆，可看作外压恒为零的等压过程。</p>\n<ul>\n<li>$\\Delta U=0$，由<code>Gay-Lussac-Joule</code>实验得出，而$U=f(T)$，故此过程中气体$T$不变；</li>\n<li>$W=0$，显然，自由膨胀时外压恒为零，也无非体积功，故$W=0$；</li>\n<li>$Q=0$，由热力学第一定律，$\\Delta U=Q+W$，式中$\\Delta U=0$，$W=0$，因此$Q=0$；</li>\n<li>$\\Delta H=0$，$H$是状态函数，由上文气体$T$不变可以推出$H$不变。 另外也可由公式$\\Delta H=\\Delta U + \\Delta(pV)$，$pV=nRT$（n、T不变，所以$pV$不变）推出$\\Delta H=0$；</li>\n<li>$\\Delta S&gt;0$，显然该过程不可逆，其对应的可逆过程为等温可逆膨胀，计算得$\\Delta S=\\int\\dfrac{\\delta Q}{T} = \\dfrac{Q}{T} = nR\\ln\\dfrac{V_2}{V_1} = -nR\\ln\\dfrac{p_2}{p_1}$；</li>\n<li>$\\Delta G&lt;0​$，由公式$\\Delta G=\\Delta H-\\Delta (TS)​$，并且$\\Delta H=0​$、$T​$不变得出$\\Delta G=-T\\Delta S​$；</li>\n<li>$\\Delta A&lt;0$，与计算$\\Delta G$的过程类似，$\\Delta A=-T\\Delta S$。</li>\n</ul>\n<h3 id=\"等温可逆过程\"><a href=\"#等温可逆过程\" class=\"headerlink\" title=\"等温可逆过程\"></a>等温可逆过程</h3><p>此过程满足 $pV=nRT=\\mathrm{Constant}$。</p>\n<ul>\n<li>$\\Delta U=0$，$U$为状态函数，等温过程系统温度不变，因此$U$不变、$\\Delta U=0$；</li>\n<li>$W$，由公式$W=-\\int_{V_1}^{V_2}p_{\\mathrm{e}}\\mathrm{d}V$，且$p_e=p=\\dfrac{nRT}{V}$（可逆过程中环境压力始终近似于系统压力），所以$W=-nRT\\int_{V_1}^{V^2} \\dfrac{1}{V} \\mathrm{d}V=-nRT\\ln\\dfrac{V_2}{V_1}$；此外，若已知系统的始末压力，也可以将前式变换为$W=nRT\\dfrac{p_1}{p_2}$</li>\n<li>$Q$，由热力学第一定律，$\\Delta U=W+Q$，得$Q=-W=nRT\\ln\\dfrac{V_2}{V_1}$；</li>\n<li>$\\Delta H$，与$U$类似，为状态函数，$\\Delta H=0$；</li>\n<li>$\\Delta S$，此过程已经为可逆过程，不必再设计可逆过程。因此$\\Delta S=\\int\\dfrac{\\delta Q}{T} = \\dfrac{Q}{T} = nR\\ln\\dfrac{V_2}{V_1} = -nR\\ln\\dfrac{p_2}{p_1}$；</li>\n<li>$\\Delta G$，直接代入公式$\\Delta G=\\Delta H-\\Delta(TS)$，得$\\Delta G=-nRT\\ln\\dfrac{V_2}{V_1}=nRT\\ln\\dfrac{p_2}{p_1}=W $；</li>\n<li>$\\Delta A$，同$\\Delta G$，得到$\\Delta A=\\Delta G=W=-nRT\\ln\\dfrac{V_2}{V_1}=nRT\\ln\\dfrac{p_2}{p_1} $。</li>\n</ul>\n<h3 id=\"等压过程\"><a href=\"#等压过程\" class=\"headerlink\" title=\"等压过程\"></a>等压过程</h3><p>此过程满足 $\\dfrac{nRT}{V}=\\text{Constant}$</p>\n<ul>\n<li>$\\Delta U$，此时$\\Delta U\\neq 0$，应用公式$\\Delta U=Q_{\\mathrm{V}}=nC_{\\mathrm{V,m}} (T_2 - T_1)=\\dfrac{p}{R}C_{\\mathrm{V,m}} (V_2-V_1)$计算。单原子分子理想气体的$C_\\mathrm{V,m}=\\dfrac{3}{2}R$。</li>\n<li>$W​$，显然 $W=-\\int_{V_1}^{V_2}p_e\\mathrm{d}V=p(V_2 - V_1)​$；</li>\n<li>$Q$，等压过程中的热交换量用$Q_\\mathrm{p}$表示，并且$Q_\\mathrm{p}=nC_\\mathrm{p,m}\\Delta T$或者使用$C_\\mathrm{p,m}=C_\\mathrm{V,m}+R$以及$Q=\\Delta U-W$求解。</li>\n<li>$\\Delta H$，直接使用公式$\\Delta H = \\Delta U + \\Delta(pV) = nC_\\mathrm{P,m}(T_2-T_1)$</li>\n<li>$\\Delta S$，等压过程对应的可逆过程为物体的可逆加热或冷却，有$\\delta Q_R=C\\mathrm{d}T=nC_\\mathrm{p,m}\\mathrm{d}T$，因此，$\\Delta S = \\int_{T_A}^{T_B} \\dfrac{nC_\\mathrm{p,m}}{T}\\mathrm{d}T=nC_\\mathrm{p,m}\\ln\\dfrac{T_{B}}{T_{A}} $，根据公式$pV=nRT$可以求出$T$，这里不再对式子进行展开；</li>\n<li>$\\Delta G$，直接代入式子$\\Delta G=\\Delta H-\\Delta(TS)$即可（题目会给出气体的标准摩尔熵，结合上面的$\\Delta S$可以使用$\\Delta (TS)=T_2 n(S_m+\\Delta S) - T_1 nS_m$求出$\\Delta G$）；</li>\n<li>$\\Delta A$，同$\\Delta G$，直接代入$\\Delta A=\\Delta U-\\Delta (TS)$求解。</li>\n</ul>\n<h3 id=\"等容过程\"><a href=\"#等容过程\" class=\"headerlink\" title=\"等容过程\"></a>等容过程</h3><p>此过程满足$\\dfrac{nRT}{p}=\\mathrm{Constant}$。</p>\n<ul>\n<li>$\\Delta U$，与等压过程一样，直接使用公式$\\Delta U=Q_\\mathrm{V}=nC_\\mathrm{V,m}\\Delta T$。单原子分子理想气体的$C_\\mathrm{V,m}=\\dfrac{3}{2}R $；</li>\n<li>$W$，因为体积无变化，$\\mathrm{d}V=0$，故$W=\\int_{V_1}^{V_2} p\\mathrm{d}V=0$；</li>\n<li>$Q$，等容过程的热交换量也成为恒容热$Q_\\mathrm{V}$，$Q_\\mathrm{V}=nC_\\mathrm{V,m}\\Delta T$；</li>\n<li>$\\Delta H$，可以结合式子$pV=nRT$求出$\\Delta (pV)=nR\\Delta T$，最后代入$\\Delta H=\\Delta U-\\Delta (PV)$求出$\\Delta H$；</li>\n<li>$\\Delta S$，等容过程对应的可逆过程为物体的可逆加热或冷却，有$\\delta Q_R=C\\mathrm{d}T=nC_\\mathrm{V,m}\\mathrm{d}T$，因此，$\\Delta S = \\int_{T_A}^{T_B} \\dfrac{nC_\\mathrm{V,m}}{T}\\mathrm{d}T=\\Delta S=nC_\\mathrm{V,m}\\ln\\dfrac{T_{B}}{T_{A}} $，根据公式$pV=nRT$可以求出$T$，这里不再对式子进行展开；</li>\n<li>$\\Delta G$，同等压过程，因为温度发生改变，必须知道$S$的初始值才能计算出$\\Delta (TS)$，所以题目会给出或间接给出$S$，此时直接代入公式$\\Delta  G=\\Delta H-\\Delta (TS)$即可求出吉布斯自由能的变化值；</li>\n<li>$\\Delta A$，与$\\Delta G$类似，仅将$\\Delta H$替换为$\\Delta U$其余不变，即可计算出亥姆霍兹自由能的变化值。</li>\n</ul>\n<h3 id=\"绝热可逆过程\"><a href=\"#绝热可逆过程\" class=\"headerlink\" title=\"绝热可逆过程\"></a>绝热可逆过程</h3><p>这是一个非常重要的过程，可逆，满足方程$pV^\\gamma=K=\\mathrm{Constant}$，式中$\\gamma=\\dfrac{C_\\mathrm{p,m}}{C_\\mathrm{V,m}}$，对于理想气体$\\gamma=\\dfrac{5}{3}$。</p>\n<ul>\n<li>$\\Delta U$，由热力学第一定律，$\\Delta U=Q+W$，$Q=0$，故$\\Delta U=W=nC_\\mathrm{V,m}\\Delta T$；</li>\n<li>$Q$，绝热过程定义直接表明$Q=0$；</li>\n<li>$W​$，$W=-\\int_{V_1}^{V_2}p\\mathrm{d}V = -\\int_{V_1}^{V_2}\\dfrac{K}{V^\\gamma}\\mathrm{d}V = -\\big[ \\dfrac{K}{(1-\\gamma)V^{\\gamma-1}} \\big]_{V_1}^{V_2} = -\\dfrac{K}{1-\\gamma} \\big[ \\dfrac{1}{V_2^{\\gamma-1}} - \\dfrac{1}{V_1^{\\gamma-1}} \\big] $<br> 因为$p_1 V_1^\\gamma = p_2 V_2^\\gamma = K$，上式写为$ W=\\dfrac{p_2 V_2- p_1 V_1}{\\gamma -1}=\\dfrac{nR(T_2 - T_1)}{\\gamma -1}  $，又因为$\\dfrac{nR}{C_V}=\\gamma-1$，所以$W=C_V(T_2 -T_1)$</li>\n<li>$\\Delta H$，计算$\\Delta H$必须知道$\\Delta (pV)$，此时没有更加简单的办法，只能分别求出$p_1$，$V_1$，$p_2$，$V_2$然后计算出$p_2 V_2 - p_1 V_1$最后代入$\\Delta H=\\Delta U +p_2 V_2 - p_1 V_1$即可求出$\\Delta H$；</li>\n<li>$\\Delta S$，该过程为绝热可逆过程，$\\delta Q_R=0$，故熵变为０，即$\\Delta S=0$；</li>\n<li>$\\Delta G$，该过程为变温过程，故题目会直接或间接给出$S$的初始值，然后利用$\\Delta G=\\Delta H-\\Delta (TS)=\\Delta H-S\\Delta T$计算出$\\Delta G$即可；</li>\n<li>$\\Delta A$，与$\\Delta G$类似，将$\\Delta G$中的$\\Delta H$换为$\\Delta U$即可。</li>\n</ul>\n<h3 id=\"环状过程\"><a href=\"#环状过程\" class=\"headerlink\" title=\"环状过程\"></a>环状过程</h3><p>此过程没有具体的方程，但可以多个过程组成，系统最终状态与初始状态相同。</p>\n<ul>\n<li>由于系统初始状态与终末状态相同，故<strong>系统</strong>中所有状态函数的变化量为零，即$\\Delta U=\\Delta H=\\Delta S=\\Delta G=\\Delta A=0$，<strong>注意，此式子描述的是系统的热力学量，而此系统与外界有能量交换，故为非孤立体系，熵变可以为０</strong>。</li>\n<li>$W$与$Q$，计算这两个热力学量时<strong>不能</strong>设计过程来求，只能按照过程的具体细节，分解成容易求出$W$和$Q$的过程分别计算出两者，然后求和。</li>\n</ul>\n<p>以上为本渣的总结，如有纰漏，还请大神指正。</p>\n"},{"title":"量子力学学习手记（一）","date":"2017-06-30T13:28:24.000Z","_content":"\n# 简介\n1. 这篇手记仅为自己学习记录而写。\n2. 虽然题目提到量子力学，但内容与量子力学关系不大，事实是这篇文章提到的某些概念以及方法在以后学习中十分普遍，因此有必要将其归为量子力学学习手记。\n3. 就当这是在打数学基础好了。\n\n# 符号说明\n\n| 符号                                 | 说明，以下符号表示的量是在 *复数范围* 内讨论的                |\n| ---------------------------------- | ---------------------------------------- |\n| $\\mid i\\rangle$                    | ket，也称列向量                                |\n| $\\langle i\\mid$                    | bra，也称行向量                                |\n| $\\langle i\\mid  j \\rangle $        | inner product，求向量$\\langle i\\mid $与向量$\\mid j\\rangle$的内积 |\n| $\\mid  i \\rangle \\langle j \\mid  $ | outer product，求向量$\\mid i\\rangle$与向量$\\langle j\\mid $的外积 |\n| $\\mid i\\rangle ^\\dagger$           | transpose conjugate，共轭转置，即向量每个元素取共轭复数后整体转置，$\\mid i\\rangle ^\\dagger = \\langle i^*\\mid $ |\n| $\\Omega$, $\\Lambda$                | 算子，或称算符，由函数组成的矩阵                         |\n| $\\Omega^\\dagger$                   | 对 $\\Omega$ 取共轭转置                         |\n\n# 题目重现\n\n如图，两个振子组成一维耦合振子，两质点的质量均为$m$，所有弹簧劲度系数均为$k$，以右为正方向，两者位移分别为$x_1$、$x_2$。若两振子初始速度均为零，设两个振子在各自平衡位置时的位移为０，且初始位置未知，求这两个振子的位移-时间函数即$x_i(t)$。\n\n![耦合振子示意图](fig.svg)\n\n# 题解\n\n​\t对两个振子分别分析，不妨设左边振子为1号，右边振子为2号。\n\n​\t对1号振子做受力分析：\n\n$$\nm \\frac{\\mathrm{d}^2 x_1}{\\mathrm{d}t^2} = k(x_2 - x_1) - k{x_1}\n$$\n​\t即\n\n$$\nm\\ddot{x_1} = -2kx_1+kx_2 \\notag\n$$\n\n​\t同理，2号振子满足\n$$\nm\\ddot{x_2} = k{x_1} - 2kx_2  \\notag\n$$\n​\t问题化简为求微分方程组\n$$\n\\begin{cases}\n\t\\ddot{x_1} = -\\frac{2k}{m}x_1 + \\frac{k}{m}x_2\\\\\n\t\\ddot{x_2} = \\frac{k}{m}x_1 - \\frac{2k}{m}x_2\n\\end{cases}\n$$\n​\t的解，写成矩阵形式即为\n$$\n\\begin{bmatrix}\n\t\\ddot{x_1}\\\\\n\t\\ddot{x_2}\n\\end{bmatrix} = \\begin{bmatrix}\n\t\\frac{-2k}{m} & \\frac{k}{m}\\\\\n\t\\frac{k}{m} & \\frac{-2k}{m}\n\\end{bmatrix} \\begin{bmatrix}\n\tx_1\\\\\n\tx_2\n\\end{bmatrix}\n$$\n​\t现令$\\Omega=\\begin{bmatrix} \\frac{-2k}{m} & \\frac{k}{m}\\\\  \\frac{k}{m} & \\frac{-2k}{m} \\end{bmatrix} $\n\n​\t观察到 $\\Omega$ 为Hermitian矩阵（$\\Omega^\\dagger = \\Omega$，共轭转置后不变），\n\n​\t故设$\\mid\\mathrm{I}\\rangle $和$\\mid\\mathrm{II}\\rangle $分别为$\\Omega$的两个本征矢（也叫特征向量）\n\n​\t有\n$$\n\\begin{cases}\n\t\\Omega \\mid \\mathrm{I} \\rangle = -\\omega_\\mathrm{I}^2 \\mid \\mathrm{I}\\rangle\\\\\n\t\\Omega \\mid \\mathrm{II} \\rangle = -\\omega_\\mathrm{II}^2 \\mid \\mathrm{II}\\rangle\n\\end{cases}\n$$\n​\t这里$-\\omega_\\mathrm{I}^2$与$-\\omega_\\mathrm{II}^2$分别表示$\\Omega$的两个本征值，因计算结果表示方便，这里用$-\\omega_i^2$表示，而不是$\\omega_i$。\n\n​\t求出$-\\omega_\\mathrm{I}^2$与$-\\omega_\\mathrm{II}^2$分别为$\\frac{k}{m} \\mp \\frac{2k}{m}$。不妨设$-\\omega_\\mathrm{I}^2＝-\\frac{k}{m}$，$-\\omega_\\mathrm{II}^2＝-\\frac{3k}{m}$。\n\n​\t已知本征值，可以求出本征矢为\n$$\n\\begin{cases}\n\t\\mid \\mathrm{I}\\rangle = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix} & \\omega_\\mathrm{I}=\\sqrt{\\frac{k}{m}} \\\\\n\t\\mid \\mathrm{II} \\rangle = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}  & \\omega_\\mathrm{II}=\\sqrt{\\frac{3k}{m}}\n \\end{cases}\n$$\n\n​\t可以看出$\\mid \\mathrm{I} \\rangle$与$\\mid \\mathrm{II}\\rangle$相互正交（内积为０）。\n\n​\t因此$x(t)= \\mid \\mathrm{I}\\rangle x_1(t) +\\mid \\mathrm{II}\\rangle x_2(t)$。\n\n​\t到这里，上面的步骤相当于对空间基矢进行了变换，原先的基矢为\n$x_1(t)$对应$\\mid 1 \\rangle = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix}$，$x_2(t)$对应$\\mid 2 \\rangle = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}$，现变换为$x_\\mathrm{I}$对应$\\mid \\mathrm{I} \\rangle =\\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}$，$x_\\mathrm{II}$对应$\\mid \\mathrm{II} \\rangle =\\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}$。这样做有什么好处呢？好处马上就会呈现。\n\n​\t此时$\\Omega$可以对角化为\n$$\n\\Omega = \n\\begin{bmatrix}\n\t-\\omega_\\mathrm{I}^2 & 0 \\\\\n\t0 & -\\omega_\\mathrm{II}^2\n\\end{bmatrix}\n$$\n\n​\t故原方程式可以化为\n\n$$\n\\begin{bmatrix}\n\t\\ddot{x_\\mathrm{I}} \\\\\n\t\\ddot{x_\\mathrm{II}}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\t-\\omega_\\mathrm{I}^2 & 0 \\\\\n\t0 & -\\omega_\\mathrm{II}^2\n\\end{bmatrix}\n\\begin{bmatrix}\n\tx_\\mathrm{I} \\\\\n\tx_\\mathrm{II}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\t-\\omega_\\mathrm{I}^2 x_\\mathrm{I} \\\\\n\t-\\omega_\\mathrm{II}^2 x_\\mathrm{II}\n\\end{bmatrix}\n$$\n\n​\t此时分别解$\\ddot{x_\\mathrm{I}}$与$\\ddot{x_\\mathrm{II}}$（两个二阶线性微分方程$\\ddot{x_i} + \\omega_i^2 x_i = 0$，并且$\\dot{x_i}$=0），即可得到$x_i (t),\\quad i=\\mathrm{I,II}$的解，解为\n$$\nx_i(t) = x_i(0) \\cos\\omega_i t, \\quad i=\\mathrm{I,II}\n$$\n\n​\t此时我们离胜利已经很近了——已经得到\t\n$$\n\\begin{aligned}\n\t\\mid x(t) \\rangle & = \\mid \\mathrm{I} \\rangle x_\\mathrm{I}(0)\\cos\\omega_\\mathrm{I}t + \\mid \\mathrm{II} \\rangle x_\\mathrm{II}(0)\\cos\\omega_\\mathrm{II}t \\\\\n\t& = \\mid \\mathrm{I}\\rangle\\langle\\mathrm{I}\\mid x(0)\\rangle \\cos\\omega_\\mathrm{I}t + \\mid \\mathrm{II}\\rangle\\langle\\mathrm{II}\\mid x(0)\\rangle \\cos\\omega_\\mathrm{II}t \n\\end{aligned}\n$$\n\n​\t式中\n$$\n\\begin{aligned}\n\t\\langle \\mathrm{I} \\mid x(0) \\rangle &= \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 & 1 \\end{bmatrix} \\begin{bmatrix} x_1(0) \\\\ x_2(0) \\end{bmatrix} = \\frac{x_1(0)+x_2(0)}{\\sqrt{2}} \\\\\n\t\\langle \\mathrm{II} \\mid x(0) \\rangle &= \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1& -1 \\end{bmatrix} \\begin{bmatrix} x_1(0) \\\\ x_2(0) \\end{bmatrix} = \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}\n\\end{aligned}\n$$\n\n​\t$\\therefore \\mid x(t)\\rangle = \\mid \\mathrm{I}\\rangle \\frac{x_1(0)+x_2(0)}{\\sqrt{2}} + \\mid \\mathrm{II}\\rangle \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}$\n\n​\t我们需要将$\\mid \\mathrm{I}\\rangle$和$\\mid \\mathrm{II}\\rangle$还原为$\\mid 1\\rangle$和$\\mid 2\\rangle$，这个操作可以通过投影 `projection` 来实现：\n$$\n\\begin{aligned}\n\tx_1(t) =& \\langle 1 \\mid x(t)\\rangle \\\\\n\t\t=& \\langle 1 \\mid \\mathrm{I}\\rangle \\frac{x_1(0) + x_2(0)}{\\sqrt{2}}\\cos\\omega_\\mathrm{I}t + \\langle 1 \\mid \\mathrm{II}\\rangle \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}\\cos\\omega_\\mathrm{II}t \\\\\n\t\t=& \\frac{x_1(0) + x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\frac{x_1(0) - x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right)\n\\end{aligned}\n$$\n​\t同理\n$$\nx_2(t)= \\frac{x_1(0) + x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\frac{x_1(0) - x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right)\n$$\n​\t写成矩阵形式即为\n$$\n\\begin{bmatrix} x_1(t) \\\\ x_2(t)  \\end{bmatrix}\n=\n\\begin{bmatrix}\n\t\\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} & \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} \\\\\n\t\\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} & \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2}\n\\end{bmatrix}\n\\begin{bmatrix} x_1(0) \\\\ x_2(0) \\end{bmatrix}\n$$\n​\t此时，只要给出$\\mid x(0)\\rangle$即可得到整个耦合振子系统的运动方程。结束战斗。\n\n\n\n# 收获总结\n\n​\t在Shankar上看到这道题的题解时，起初是不怎么明白的，直到在写这篇手记的过程中，我才体会到这样解的用意：\n\n1. 这是一个耦合系统，即两个微分方程分别含有对方的变量。\n2. 求出$\\mid \\mathrm{I}\\rangle$与$\\mid \\mathrm{II}\\rangle$的过程就是在对原有的线性空间基矢（或称基底）做变换，变换的目的是为了将微分方程组转化为非耦合的方程组。这里，个人以为，说的通俗一些，就是换元——在高等数学的某些求解不定积分时也会用到这种方法。\n3. 求算子$\\Omega$的本征值就是为了将其对角化（对角化后只有对角线上元素不为零），做矩阵乘法运算就可以得到非耦合的方程组，然后问题就变成了熟悉的二阶线性微分方程，之后求解需要用到欧拉公式，这里不赘述。\n4. 用矩阵表示大块方程组真的很方便！\n5. Ti$k$Z很好用！\n\n虽然说上面的题解基本是翻译过来的，但也是有一些收获的，权当 `拾人牙慧吧` 。\n","source":"_posts/Quantum-Physics-Learning-Log-1.md","raw":"---\ntitle: 量子力学学习手记（一）\ndate: 2017-06-30 21:28:24\ntags:\n   - 量子力学\n   - 线性代数\n   - 数学基础\ncategories: Quantum Mechanics\n---\n\n# 简介\n1. 这篇手记仅为自己学习记录而写。\n2. 虽然题目提到量子力学，但内容与量子力学关系不大，事实是这篇文章提到的某些概念以及方法在以后学习中十分普遍，因此有必要将其归为量子力学学习手记。\n3. 就当这是在打数学基础好了。\n\n# 符号说明\n\n| 符号                                 | 说明，以下符号表示的量是在 *复数范围* 内讨论的                |\n| ---------------------------------- | ---------------------------------------- |\n| $\\mid i\\rangle$                    | ket，也称列向量                                |\n| $\\langle i\\mid$                    | bra，也称行向量                                |\n| $\\langle i\\mid  j \\rangle $        | inner product，求向量$\\langle i\\mid $与向量$\\mid j\\rangle$的内积 |\n| $\\mid  i \\rangle \\langle j \\mid  $ | outer product，求向量$\\mid i\\rangle$与向量$\\langle j\\mid $的外积 |\n| $\\mid i\\rangle ^\\dagger$           | transpose conjugate，共轭转置，即向量每个元素取共轭复数后整体转置，$\\mid i\\rangle ^\\dagger = \\langle i^*\\mid $ |\n| $\\Omega$, $\\Lambda$                | 算子，或称算符，由函数组成的矩阵                         |\n| $\\Omega^\\dagger$                   | 对 $\\Omega$ 取共轭转置                         |\n\n# 题目重现\n\n如图，两个振子组成一维耦合振子，两质点的质量均为$m$，所有弹簧劲度系数均为$k$，以右为正方向，两者位移分别为$x_1$、$x_2$。若两振子初始速度均为零，设两个振子在各自平衡位置时的位移为０，且初始位置未知，求这两个振子的位移-时间函数即$x_i(t)$。\n\n![耦合振子示意图](fig.svg)\n\n# 题解\n\n​\t对两个振子分别分析，不妨设左边振子为1号，右边振子为2号。\n\n​\t对1号振子做受力分析：\n\n$$\nm \\frac{\\mathrm{d}^2 x_1}{\\mathrm{d}t^2} = k(x_2 - x_1) - k{x_1}\n$$\n​\t即\n\n$$\nm\\ddot{x_1} = -2kx_1+kx_2 \\notag\n$$\n\n​\t同理，2号振子满足\n$$\nm\\ddot{x_2} = k{x_1} - 2kx_2  \\notag\n$$\n​\t问题化简为求微分方程组\n$$\n\\begin{cases}\n\t\\ddot{x_1} = -\\frac{2k}{m}x_1 + \\frac{k}{m}x_2\\\\\n\t\\ddot{x_2} = \\frac{k}{m}x_1 - \\frac{2k}{m}x_2\n\\end{cases}\n$$\n​\t的解，写成矩阵形式即为\n$$\n\\begin{bmatrix}\n\t\\ddot{x_1}\\\\\n\t\\ddot{x_2}\n\\end{bmatrix} = \\begin{bmatrix}\n\t\\frac{-2k}{m} & \\frac{k}{m}\\\\\n\t\\frac{k}{m} & \\frac{-2k}{m}\n\\end{bmatrix} \\begin{bmatrix}\n\tx_1\\\\\n\tx_2\n\\end{bmatrix}\n$$\n​\t现令$\\Omega=\\begin{bmatrix} \\frac{-2k}{m} & \\frac{k}{m}\\\\  \\frac{k}{m} & \\frac{-2k}{m} \\end{bmatrix} $\n\n​\t观察到 $\\Omega$ 为Hermitian矩阵（$\\Omega^\\dagger = \\Omega$，共轭转置后不变），\n\n​\t故设$\\mid\\mathrm{I}\\rangle $和$\\mid\\mathrm{II}\\rangle $分别为$\\Omega$的两个本征矢（也叫特征向量）\n\n​\t有\n$$\n\\begin{cases}\n\t\\Omega \\mid \\mathrm{I} \\rangle = -\\omega_\\mathrm{I}^2 \\mid \\mathrm{I}\\rangle\\\\\n\t\\Omega \\mid \\mathrm{II} \\rangle = -\\omega_\\mathrm{II}^2 \\mid \\mathrm{II}\\rangle\n\\end{cases}\n$$\n​\t这里$-\\omega_\\mathrm{I}^2$与$-\\omega_\\mathrm{II}^2$分别表示$\\Omega$的两个本征值，因计算结果表示方便，这里用$-\\omega_i^2$表示，而不是$\\omega_i$。\n\n​\t求出$-\\omega_\\mathrm{I}^2$与$-\\omega_\\mathrm{II}^2$分别为$\\frac{k}{m} \\mp \\frac{2k}{m}$。不妨设$-\\omega_\\mathrm{I}^2＝-\\frac{k}{m}$，$-\\omega_\\mathrm{II}^2＝-\\frac{3k}{m}$。\n\n​\t已知本征值，可以求出本征矢为\n$$\n\\begin{cases}\n\t\\mid \\mathrm{I}\\rangle = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix} & \\omega_\\mathrm{I}=\\sqrt{\\frac{k}{m}} \\\\\n\t\\mid \\mathrm{II} \\rangle = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}  & \\omega_\\mathrm{II}=\\sqrt{\\frac{3k}{m}}\n \\end{cases}\n$$\n\n​\t可以看出$\\mid \\mathrm{I} \\rangle$与$\\mid \\mathrm{II}\\rangle$相互正交（内积为０）。\n\n​\t因此$x(t)= \\mid \\mathrm{I}\\rangle x_1(t) +\\mid \\mathrm{II}\\rangle x_2(t)$。\n\n​\t到这里，上面的步骤相当于对空间基矢进行了变换，原先的基矢为\n$x_1(t)$对应$\\mid 1 \\rangle = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix}$，$x_2(t)$对应$\\mid 2 \\rangle = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}$，现变换为$x_\\mathrm{I}$对应$\\mid \\mathrm{I} \\rangle =\\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}$，$x_\\mathrm{II}$对应$\\mid \\mathrm{II} \\rangle =\\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}$。这样做有什么好处呢？好处马上就会呈现。\n\n​\t此时$\\Omega$可以对角化为\n$$\n\\Omega = \n\\begin{bmatrix}\n\t-\\omega_\\mathrm{I}^2 & 0 \\\\\n\t0 & -\\omega_\\mathrm{II}^2\n\\end{bmatrix}\n$$\n\n​\t故原方程式可以化为\n\n$$\n\\begin{bmatrix}\n\t\\ddot{x_\\mathrm{I}} \\\\\n\t\\ddot{x_\\mathrm{II}}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\t-\\omega_\\mathrm{I}^2 & 0 \\\\\n\t0 & -\\omega_\\mathrm{II}^2\n\\end{bmatrix}\n\\begin{bmatrix}\n\tx_\\mathrm{I} \\\\\n\tx_\\mathrm{II}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\t-\\omega_\\mathrm{I}^2 x_\\mathrm{I} \\\\\n\t-\\omega_\\mathrm{II}^2 x_\\mathrm{II}\n\\end{bmatrix}\n$$\n\n​\t此时分别解$\\ddot{x_\\mathrm{I}}$与$\\ddot{x_\\mathrm{II}}$（两个二阶线性微分方程$\\ddot{x_i} + \\omega_i^2 x_i = 0$，并且$\\dot{x_i}$=0），即可得到$x_i (t),\\quad i=\\mathrm{I,II}$的解，解为\n$$\nx_i(t) = x_i(0) \\cos\\omega_i t, \\quad i=\\mathrm{I,II}\n$$\n\n​\t此时我们离胜利已经很近了——已经得到\t\n$$\n\\begin{aligned}\n\t\\mid x(t) \\rangle & = \\mid \\mathrm{I} \\rangle x_\\mathrm{I}(0)\\cos\\omega_\\mathrm{I}t + \\mid \\mathrm{II} \\rangle x_\\mathrm{II}(0)\\cos\\omega_\\mathrm{II}t \\\\\n\t& = \\mid \\mathrm{I}\\rangle\\langle\\mathrm{I}\\mid x(0)\\rangle \\cos\\omega_\\mathrm{I}t + \\mid \\mathrm{II}\\rangle\\langle\\mathrm{II}\\mid x(0)\\rangle \\cos\\omega_\\mathrm{II}t \n\\end{aligned}\n$$\n\n​\t式中\n$$\n\\begin{aligned}\n\t\\langle \\mathrm{I} \\mid x(0) \\rangle &= \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 & 1 \\end{bmatrix} \\begin{bmatrix} x_1(0) \\\\ x_2(0) \\end{bmatrix} = \\frac{x_1(0)+x_2(0)}{\\sqrt{2}} \\\\\n\t\\langle \\mathrm{II} \\mid x(0) \\rangle &= \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1& -1 \\end{bmatrix} \\begin{bmatrix} x_1(0) \\\\ x_2(0) \\end{bmatrix} = \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}\n\\end{aligned}\n$$\n\n​\t$\\therefore \\mid x(t)\\rangle = \\mid \\mathrm{I}\\rangle \\frac{x_1(0)+x_2(0)}{\\sqrt{2}} + \\mid \\mathrm{II}\\rangle \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}$\n\n​\t我们需要将$\\mid \\mathrm{I}\\rangle$和$\\mid \\mathrm{II}\\rangle$还原为$\\mid 1\\rangle$和$\\mid 2\\rangle$，这个操作可以通过投影 `projection` 来实现：\n$$\n\\begin{aligned}\n\tx_1(t) =& \\langle 1 \\mid x(t)\\rangle \\\\\n\t\t=& \\langle 1 \\mid \\mathrm{I}\\rangle \\frac{x_1(0) + x_2(0)}{\\sqrt{2}}\\cos\\omega_\\mathrm{I}t + \\langle 1 \\mid \\mathrm{II}\\rangle \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}\\cos\\omega_\\mathrm{II}t \\\\\n\t\t=& \\frac{x_1(0) + x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\frac{x_1(0) - x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right)\n\\end{aligned}\n$$\n​\t同理\n$$\nx_2(t)= \\frac{x_1(0) + x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\frac{x_1(0) - x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right)\n$$\n​\t写成矩阵形式即为\n$$\n\\begin{bmatrix} x_1(t) \\\\ x_2(t)  \\end{bmatrix}\n=\n\\begin{bmatrix}\n\t\\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} & \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} \\\\\n\t\\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} & \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2}\n\\end{bmatrix}\n\\begin{bmatrix} x_1(0) \\\\ x_2(0) \\end{bmatrix}\n$$\n​\t此时，只要给出$\\mid x(0)\\rangle$即可得到整个耦合振子系统的运动方程。结束战斗。\n\n\n\n# 收获总结\n\n​\t在Shankar上看到这道题的题解时，起初是不怎么明白的，直到在写这篇手记的过程中，我才体会到这样解的用意：\n\n1. 这是一个耦合系统，即两个微分方程分别含有对方的变量。\n2. 求出$\\mid \\mathrm{I}\\rangle$与$\\mid \\mathrm{II}\\rangle$的过程就是在对原有的线性空间基矢（或称基底）做变换，变换的目的是为了将微分方程组转化为非耦合的方程组。这里，个人以为，说的通俗一些，就是换元——在高等数学的某些求解不定积分时也会用到这种方法。\n3. 求算子$\\Omega$的本征值就是为了将其对角化（对角化后只有对角线上元素不为零），做矩阵乘法运算就可以得到非耦合的方程组，然后问题就变成了熟悉的二阶线性微分方程，之后求解需要用到欧拉公式，这里不赘述。\n4. 用矩阵表示大块方程组真的很方便！\n5. Ti$k$Z很好用！\n\n虽然说上面的题解基本是翻译过来的，但也是有一些收获的，权当 `拾人牙慧吧` 。\n","slug":"Quantum-Physics-Learning-Log-1","published":1,"updated":"2018-12-31T11:47:25.723Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjbbt001hzq4ig5b7b9ye","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><ol>\n<li>这篇手记仅为自己学习记录而写。</li>\n<li>虽然题目提到量子力学，但内容与量子力学关系不大，事实是这篇文章提到的某些概念以及方法在以后学习中十分普遍，因此有必要将其归为量子力学学习手记。</li>\n<li>就当这是在打数学基础好了。</li>\n</ol>\n<h1 id=\"符号说明\"><a href=\"#符号说明\" class=\"headerlink\" title=\"符号说明\"></a>符号说明</h1><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>说明，以下符号表示的量是在 <em>复数范围</em> 内讨论的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$\\mid i\\rangle$</td>\n<td>ket，也称列向量</td>\n</tr>\n<tr>\n<td>$\\langle i\\mid$</td>\n<td>bra，也称行向量</td>\n</tr>\n<tr>\n<td>$\\langle i\\mid  j \\rangle $</td>\n<td>inner product，求向量$\\langle i\\mid $与向量$\\mid j\\rangle$的内积</td>\n</tr>\n<tr>\n<td>$\\mid  i \\rangle \\langle j \\mid  $</td>\n<td>outer product，求向量$\\mid i\\rangle$与向量$\\langle j\\mid $的外积</td>\n</tr>\n<tr>\n<td>$\\mid i\\rangle ^\\dagger$</td>\n<td>transpose conjugate，共轭转置，即向量每个元素取共轭复数后整体转置，$\\mid i\\rangle ^\\dagger = \\langle i^*\\mid $</td>\n</tr>\n<tr>\n<td>$\\Omega$, $\\Lambda$</td>\n<td>算子，或称算符，由函数组成的矩阵</td>\n</tr>\n<tr>\n<td>$\\Omega^\\dagger$</td>\n<td>对 $\\Omega$ 取共轭转置</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"题目重现\"><a href=\"#题目重现\" class=\"headerlink\" title=\"题目重现\"></a>题目重现</h1><p>如图，两个振子组成一维耦合振子，两质点的质量均为$m$，所有弹簧劲度系数均为$k$，以右为正方向，两者位移分别为$x_1$、$x_2$。若两振子初始速度均为零，设两个振子在各自平衡位置时的位移为０，且初始位置未知，求这两个振子的位移-时间函数即$x_i(t)$。</p>\n<p><img src=\"fig.svg\" alt=\"耦合振子示意图\"></p>\n<h1 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h1><p>​    对两个振子分别分析，不妨设左边振子为1号，右边振子为2号。</p>\n<p>​    对1号振子做受力分析：</p>\n<p>$$<br>m \\frac{\\mathrm{d}^2 x_1}{\\mathrm{d}t^2} = k(x_2 - x_1) - k{x_1}<br>$$<br>​    即</p>\n<p>$$<br>m\\ddot{x_1} = -2kx_1+kx_2 \\notag<br>$$</p>\n<p>​    同理，2号振子满足<br>$$<br>m\\ddot{x_2} = k{x_1} - 2kx_2  \\notag<br>$$<br>​    问题化简为求微分方程组<br>$$<br>\\begin{cases}<br>    \\ddot{x_1} = -\\frac{2k}{m}x_1 + \\frac{k}{m}x_2\\<br>    \\ddot{x_2} = \\frac{k}{m}x_1 - \\frac{2k}{m}x_2<br>\\end{cases}<br>$$<br>​    的解，写成矩阵形式即为<br>$$<br>\\begin{bmatrix}<br>    \\ddot{x_1}\\<br>    \\ddot{x_2}<br>\\end{bmatrix} = \\begin{bmatrix}<br>    \\frac{-2k}{m} &amp; \\frac{k}{m}\\<br>    \\frac{k}{m} &amp; \\frac{-2k}{m}<br>\\end{bmatrix} \\begin{bmatrix}<br>    x_1\\<br>    x_2<br>\\end{bmatrix}<br>$$<br>​    现令$\\Omega=\\begin{bmatrix} \\frac{-2k}{m} &amp; \\frac{k}{m}\\  \\frac{k}{m} &amp; \\frac{-2k}{m} \\end{bmatrix} $</p>\n<p>​    观察到 $\\Omega$ 为Hermitian矩阵（$\\Omega^\\dagger = \\Omega$，共轭转置后不变），</p>\n<p>​    故设$\\mid\\mathrm{I}\\rangle $和$\\mid\\mathrm{II}\\rangle $分别为$\\Omega$的两个本征矢（也叫特征向量）</p>\n<p>​    有<br>$$<br>\\begin{cases}<br>    \\Omega \\mid \\mathrm{I} \\rangle = -\\omega_\\mathrm{I}^2 \\mid \\mathrm{I}\\rangle\\<br>    \\Omega \\mid \\mathrm{II} \\rangle = -\\omega_\\mathrm{II}^2 \\mid \\mathrm{II}\\rangle<br>\\end{cases}<br>$$<br>​    这里$-\\omega_\\mathrm{I}^2$与$-\\omega_\\mathrm{II}^2$分别表示$\\Omega$的两个本征值，因计算结果表示方便，这里用$-\\omega_i^2$表示，而不是$\\omega_i$。</p>\n<p>​    求出$-\\omega_\\mathrm{I}^2$与$-\\omega_\\mathrm{II}^2$分别为$\\frac{k}{m} \\mp \\frac{2k}{m}$。不妨设$-\\omega_\\mathrm{I}^2＝-\\frac{k}{m}$，$-\\omega_\\mathrm{II}^2＝-\\frac{3k}{m}$。</p>\n<p>​    已知本征值，可以求出本征矢为<br>$$<br>\\begin{cases}<br>    \\mid \\mathrm{I}\\rangle = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\ 1 \\end{bmatrix} &amp; \\omega_\\mathrm{I}=\\sqrt{\\frac{k}{m}} \\<br>    \\mid \\mathrm{II} \\rangle = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\ -1 \\end{bmatrix}  &amp; \\omega_\\mathrm{II}=\\sqrt{\\frac{3k}{m}}<br> \\end{cases}<br>$$</p>\n<p>​    可以看出$\\mid \\mathrm{I} \\rangle$与$\\mid \\mathrm{II}\\rangle$相互正交（内积为０）。</p>\n<p>​    因此$x(t)= \\mid \\mathrm{I}\\rangle x_1(t) +\\mid \\mathrm{II}\\rangle x_2(t)$。</p>\n<p>​    到这里，上面的步骤相当于对空间基矢进行了变换，原先的基矢为<br>$x_1(t)$对应$\\mid 1 \\rangle = \\begin{bmatrix} 1 \\ 0 \\end{bmatrix}$，$x_2(t)$对应$\\mid 2 \\rangle = \\begin{bmatrix} 0 \\ 1 \\end{bmatrix}$，现变换为$x_\\mathrm{I}$对应$\\mid \\mathrm{I} \\rangle =\\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\ 1 \\end{bmatrix}$，$x_\\mathrm{II}$对应$\\mid \\mathrm{II} \\rangle =\\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\ -1 \\end{bmatrix}$。这样做有什么好处呢？好处马上就会呈现。</p>\n<p>​    此时$\\Omega$可以对角化为<br>$$<br>\\Omega =<br>\\begin{bmatrix}<br>    -\\omega_\\mathrm{I}^2 &amp; 0 \\<br>    0 &amp; -\\omega_\\mathrm{II}^2<br>\\end{bmatrix}<br>$$</p>\n<p>​    故原方程式可以化为</p>\n<p>$$<br>\\begin{bmatrix}<br>    \\ddot{x_\\mathrm{I}} \\<br>    \\ddot{x_\\mathrm{II}}<br>\\end{bmatrix}<br>=<br>\\begin{bmatrix}<br>    -\\omega_\\mathrm{I}^2 &amp; 0 \\<br>    0 &amp; -\\omega_\\mathrm{II}^2<br>\\end{bmatrix}<br>\\begin{bmatrix}<br>    x_\\mathrm{I} \\<br>    x_\\mathrm{II}<br>\\end{bmatrix}<br>=<br>\\begin{bmatrix}<br>    -\\omega_\\mathrm{I}^2 x_\\mathrm{I} \\<br>    -\\omega_\\mathrm{II}^2 x_\\mathrm{II}<br>\\end{bmatrix}<br>$$</p>\n<p>​    此时分别解$\\ddot{x_\\mathrm{I}}$与$\\ddot{x_\\mathrm{II}}$（两个二阶线性微分方程$\\ddot{x_i} + \\omega_i^2 x_i = 0$，并且$\\dot{x_i}$=0），即可得到$x_i (t),\\quad i=\\mathrm{I,II}$的解，解为<br>$$<br>x_i(t) = x_i(0) \\cos\\omega_i t, \\quad i=\\mathrm{I,II}<br>$$</p>\n<p>​    此时我们离胜利已经很近了——已经得到<br>$$<br>\\begin{aligned}<br>    \\mid x(t) \\rangle &amp; = \\mid \\mathrm{I} \\rangle x_\\mathrm{I}(0)\\cos\\omega_\\mathrm{I}t + \\mid \\mathrm{II} \\rangle x_\\mathrm{II}(0)\\cos\\omega_\\mathrm{II}t \\<br>    &amp; = \\mid \\mathrm{I}\\rangle\\langle\\mathrm{I}\\mid x(0)\\rangle \\cos\\omega_\\mathrm{I}t + \\mid \\mathrm{II}\\rangle\\langle\\mathrm{II}\\mid x(0)\\rangle \\cos\\omega_\\mathrm{II}t<br>\\end{aligned}<br>$$</p>\n<p>​    式中<br>$$<br>\\begin{aligned}<br>    \\langle \\mathrm{I} \\mid x(0) \\rangle &amp;= \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 &amp; 1 \\end{bmatrix} \\begin{bmatrix} x_1(0) \\ x_2(0) \\end{bmatrix} = \\frac{x_1(0)+x_2(0)}{\\sqrt{2}} \\<br>    \\langle \\mathrm{II} \\mid x(0) \\rangle &amp;= \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1&amp; -1 \\end{bmatrix} \\begin{bmatrix} x_1(0) \\ x_2(0) \\end{bmatrix} = \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}<br>\\end{aligned}<br>$$</p>\n<p>​    $\\therefore \\mid x(t)\\rangle = \\mid \\mathrm{I}\\rangle \\frac{x_1(0)+x_2(0)}{\\sqrt{2}} + \\mid \\mathrm{II}\\rangle \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}$</p>\n<p>​    我们需要将$\\mid \\mathrm{I}\\rangle$和$\\mid \\mathrm{II}\\rangle$还原为$\\mid 1\\rangle$和$\\mid 2\\rangle$，这个操作可以通过投影 <code>projection</code> 来实现：<br>$$<br>\\begin{aligned}<br>    x_1(t) =&amp; \\langle 1 \\mid x(t)\\rangle \\<br>        =&amp; \\langle 1 \\mid \\mathrm{I}\\rangle \\frac{x_1(0) + x_2(0)}{\\sqrt{2}}\\cos\\omega_\\mathrm{I}t + \\langle 1 \\mid \\mathrm{II}\\rangle \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}\\cos\\omega_\\mathrm{II}t \\<br>        =&amp; \\frac{x_1(0) + x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\frac{x_1(0) - x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right)<br>\\end{aligned}<br>$$<br>​    同理<br>$$<br>x_2(t)= \\frac{x_1(0) + x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\frac{x_1(0) - x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right)<br>$$<br>​    写成矩阵形式即为<br>$$<br>\\begin{bmatrix} x_1(t) \\ x_2(t)  \\end{bmatrix}<br>=<br>\\begin{bmatrix}<br>    \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} &amp; \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} \\<br>    \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} &amp; \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2}<br>\\end{bmatrix}<br>\\begin{bmatrix} x_1(0) \\ x_2(0) \\end{bmatrix}<br>$$<br>​    此时，只要给出$\\mid x(0)\\rangle$即可得到整个耦合振子系统的运动方程。结束战斗。</p>\n<h1 id=\"收获总结\"><a href=\"#收获总结\" class=\"headerlink\" title=\"收获总结\"></a>收获总结</h1><p>​    在Shankar上看到这道题的题解时，起初是不怎么明白的，直到在写这篇手记的过程中，我才体会到这样解的用意：</p>\n<ol>\n<li>这是一个耦合系统，即两个微分方程分别含有对方的变量。</li>\n<li>求出$\\mid \\mathrm{I}\\rangle$与$\\mid \\mathrm{II}\\rangle$的过程就是在对原有的线性空间基矢（或称基底）做变换，变换的目的是为了将微分方程组转化为非耦合的方程组。这里，个人以为，说的通俗一些，就是换元——在高等数学的某些求解不定积分时也会用到这种方法。</li>\n<li>求算子$\\Omega$的本征值就是为了将其对角化（对角化后只有对角线上元素不为零），做矩阵乘法运算就可以得到非耦合的方程组，然后问题就变成了熟悉的二阶线性微分方程，之后求解需要用到欧拉公式，这里不赘述。</li>\n<li>用矩阵表示大块方程组真的很方便！</li>\n<li>Ti$k$Z很好用！</li>\n</ol>\n<p>虽然说上面的题解基本是翻译过来的，但也是有一些收获的，权当 <code>拾人牙慧吧</code> 。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><ol>\n<li>这篇手记仅为自己学习记录而写。</li>\n<li>虽然题目提到量子力学，但内容与量子力学关系不大，事实是这篇文章提到的某些概念以及方法在以后学习中十分普遍，因此有必要将其归为量子力学学习手记。</li>\n<li>就当这是在打数学基础好了。</li>\n</ol>\n<h1 id=\"符号说明\"><a href=\"#符号说明\" class=\"headerlink\" title=\"符号说明\"></a>符号说明</h1><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>说明，以下符号表示的量是在 <em>复数范围</em> 内讨论的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$\\mid i\\rangle$</td>\n<td>ket，也称列向量</td>\n</tr>\n<tr>\n<td>$\\langle i\\mid$</td>\n<td>bra，也称行向量</td>\n</tr>\n<tr>\n<td>$\\langle i\\mid  j \\rangle $</td>\n<td>inner product，求向量$\\langle i\\mid $与向量$\\mid j\\rangle$的内积</td>\n</tr>\n<tr>\n<td>$\\mid  i \\rangle \\langle j \\mid  $</td>\n<td>outer product，求向量$\\mid i\\rangle$与向量$\\langle j\\mid $的外积</td>\n</tr>\n<tr>\n<td>$\\mid i\\rangle ^\\dagger$</td>\n<td>transpose conjugate，共轭转置，即向量每个元素取共轭复数后整体转置，$\\mid i\\rangle ^\\dagger = \\langle i^*\\mid $</td>\n</tr>\n<tr>\n<td>$\\Omega$, $\\Lambda$</td>\n<td>算子，或称算符，由函数组成的矩阵</td>\n</tr>\n<tr>\n<td>$\\Omega^\\dagger$</td>\n<td>对 $\\Omega$ 取共轭转置</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"题目重现\"><a href=\"#题目重现\" class=\"headerlink\" title=\"题目重现\"></a>题目重现</h1><p>如图，两个振子组成一维耦合振子，两质点的质量均为$m$，所有弹簧劲度系数均为$k$，以右为正方向，两者位移分别为$x_1$、$x_2$。若两振子初始速度均为零，设两个振子在各自平衡位置时的位移为０，且初始位置未知，求这两个振子的位移-时间函数即$x_i(t)$。</p>\n<p><img src=\"fig.svg\" alt=\"耦合振子示意图\"></p>\n<h1 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h1><p>​    对两个振子分别分析，不妨设左边振子为1号，右边振子为2号。</p>\n<p>​    对1号振子做受力分析：</p>\n<p>$$<br>m \\frac{\\mathrm{d}^2 x_1}{\\mathrm{d}t^2} = k(x_2 - x_1) - k{x_1}<br>$$<br>​    即</p>\n<p>$$<br>m\\ddot{x_1} = -2kx_1+kx_2 \\notag<br>$$</p>\n<p>​    同理，2号振子满足<br>$$<br>m\\ddot{x_2} = k{x_1} - 2kx_2  \\notag<br>$$<br>​    问题化简为求微分方程组<br>$$<br>\\begin{cases}<br>    \\ddot{x_1} = -\\frac{2k}{m}x_1 + \\frac{k}{m}x_2\\<br>    \\ddot{x_2} = \\frac{k}{m}x_1 - \\frac{2k}{m}x_2<br>\\end{cases}<br>$$<br>​    的解，写成矩阵形式即为<br>$$<br>\\begin{bmatrix}<br>    \\ddot{x_1}\\<br>    \\ddot{x_2}<br>\\end{bmatrix} = \\begin{bmatrix}<br>    \\frac{-2k}{m} &amp; \\frac{k}{m}\\<br>    \\frac{k}{m} &amp; \\frac{-2k}{m}<br>\\end{bmatrix} \\begin{bmatrix}<br>    x_1\\<br>    x_2<br>\\end{bmatrix}<br>$$<br>​    现令$\\Omega=\\begin{bmatrix} \\frac{-2k}{m} &amp; \\frac{k}{m}\\  \\frac{k}{m} &amp; \\frac{-2k}{m} \\end{bmatrix} $</p>\n<p>​    观察到 $\\Omega$ 为Hermitian矩阵（$\\Omega^\\dagger = \\Omega$，共轭转置后不变），</p>\n<p>​    故设$\\mid\\mathrm{I}\\rangle $和$\\mid\\mathrm{II}\\rangle $分别为$\\Omega$的两个本征矢（也叫特征向量）</p>\n<p>​    有<br>$$<br>\\begin{cases}<br>    \\Omega \\mid \\mathrm{I} \\rangle = -\\omega_\\mathrm{I}^2 \\mid \\mathrm{I}\\rangle\\<br>    \\Omega \\mid \\mathrm{II} \\rangle = -\\omega_\\mathrm{II}^2 \\mid \\mathrm{II}\\rangle<br>\\end{cases}<br>$$<br>​    这里$-\\omega_\\mathrm{I}^2$与$-\\omega_\\mathrm{II}^2$分别表示$\\Omega$的两个本征值，因计算结果表示方便，这里用$-\\omega_i^2$表示，而不是$\\omega_i$。</p>\n<p>​    求出$-\\omega_\\mathrm{I}^2$与$-\\omega_\\mathrm{II}^2$分别为$\\frac{k}{m} \\mp \\frac{2k}{m}$。不妨设$-\\omega_\\mathrm{I}^2＝-\\frac{k}{m}$，$-\\omega_\\mathrm{II}^2＝-\\frac{3k}{m}$。</p>\n<p>​    已知本征值，可以求出本征矢为<br>$$<br>\\begin{cases}<br>    \\mid \\mathrm{I}\\rangle = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\ 1 \\end{bmatrix} &amp; \\omega_\\mathrm{I}=\\sqrt{\\frac{k}{m}} \\<br>    \\mid \\mathrm{II} \\rangle = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\ -1 \\end{bmatrix}  &amp; \\omega_\\mathrm{II}=\\sqrt{\\frac{3k}{m}}<br> \\end{cases}<br>$$</p>\n<p>​    可以看出$\\mid \\mathrm{I} \\rangle$与$\\mid \\mathrm{II}\\rangle$相互正交（内积为０）。</p>\n<p>​    因此$x(t)= \\mid \\mathrm{I}\\rangle x_1(t) +\\mid \\mathrm{II}\\rangle x_2(t)$。</p>\n<p>​    到这里，上面的步骤相当于对空间基矢进行了变换，原先的基矢为<br>$x_1(t)$对应$\\mid 1 \\rangle = \\begin{bmatrix} 1 \\ 0 \\end{bmatrix}$，$x_2(t)$对应$\\mid 2 \\rangle = \\begin{bmatrix} 0 \\ 1 \\end{bmatrix}$，现变换为$x_\\mathrm{I}$对应$\\mid \\mathrm{I} \\rangle =\\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\ 1 \\end{bmatrix}$，$x_\\mathrm{II}$对应$\\mid \\mathrm{II} \\rangle =\\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 \\ -1 \\end{bmatrix}$。这样做有什么好处呢？好处马上就会呈现。</p>\n<p>​    此时$\\Omega$可以对角化为<br>$$<br>\\Omega =<br>\\begin{bmatrix}<br>    -\\omega_\\mathrm{I}^2 &amp; 0 \\<br>    0 &amp; -\\omega_\\mathrm{II}^2<br>\\end{bmatrix}<br>$$</p>\n<p>​    故原方程式可以化为</p>\n<p>$$<br>\\begin{bmatrix}<br>    \\ddot{x_\\mathrm{I}} \\<br>    \\ddot{x_\\mathrm{II}}<br>\\end{bmatrix}<br>=<br>\\begin{bmatrix}<br>    -\\omega_\\mathrm{I}^2 &amp; 0 \\<br>    0 &amp; -\\omega_\\mathrm{II}^2<br>\\end{bmatrix}<br>\\begin{bmatrix}<br>    x_\\mathrm{I} \\<br>    x_\\mathrm{II}<br>\\end{bmatrix}<br>=<br>\\begin{bmatrix}<br>    -\\omega_\\mathrm{I}^2 x_\\mathrm{I} \\<br>    -\\omega_\\mathrm{II}^2 x_\\mathrm{II}<br>\\end{bmatrix}<br>$$</p>\n<p>​    此时分别解$\\ddot{x_\\mathrm{I}}$与$\\ddot{x_\\mathrm{II}}$（两个二阶线性微分方程$\\ddot{x_i} + \\omega_i^2 x_i = 0$，并且$\\dot{x_i}$=0），即可得到$x_i (t),\\quad i=\\mathrm{I,II}$的解，解为<br>$$<br>x_i(t) = x_i(0) \\cos\\omega_i t, \\quad i=\\mathrm{I,II}<br>$$</p>\n<p>​    此时我们离胜利已经很近了——已经得到<br>$$<br>\\begin{aligned}<br>    \\mid x(t) \\rangle &amp; = \\mid \\mathrm{I} \\rangle x_\\mathrm{I}(0)\\cos\\omega_\\mathrm{I}t + \\mid \\mathrm{II} \\rangle x_\\mathrm{II}(0)\\cos\\omega_\\mathrm{II}t \\<br>    &amp; = \\mid \\mathrm{I}\\rangle\\langle\\mathrm{I}\\mid x(0)\\rangle \\cos\\omega_\\mathrm{I}t + \\mid \\mathrm{II}\\rangle\\langle\\mathrm{II}\\mid x(0)\\rangle \\cos\\omega_\\mathrm{II}t<br>\\end{aligned}<br>$$</p>\n<p>​    式中<br>$$<br>\\begin{aligned}<br>    \\langle \\mathrm{I} \\mid x(0) \\rangle &amp;= \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 &amp; 1 \\end{bmatrix} \\begin{bmatrix} x_1(0) \\ x_2(0) \\end{bmatrix} = \\frac{x_1(0)+x_2(0)}{\\sqrt{2}} \\<br>    \\langle \\mathrm{II} \\mid x(0) \\rangle &amp;= \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1&amp; -1 \\end{bmatrix} \\begin{bmatrix} x_1(0) \\ x_2(0) \\end{bmatrix} = \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}<br>\\end{aligned}<br>$$</p>\n<p>​    $\\therefore \\mid x(t)\\rangle = \\mid \\mathrm{I}\\rangle \\frac{x_1(0)+x_2(0)}{\\sqrt{2}} + \\mid \\mathrm{II}\\rangle \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}$</p>\n<p>​    我们需要将$\\mid \\mathrm{I}\\rangle$和$\\mid \\mathrm{II}\\rangle$还原为$\\mid 1\\rangle$和$\\mid 2\\rangle$，这个操作可以通过投影 <code>projection</code> 来实现：<br>$$<br>\\begin{aligned}<br>    x_1(t) =&amp; \\langle 1 \\mid x(t)\\rangle \\<br>        =&amp; \\langle 1 \\mid \\mathrm{I}\\rangle \\frac{x_1(0) + x_2(0)}{\\sqrt{2}}\\cos\\omega_\\mathrm{I}t + \\langle 1 \\mid \\mathrm{II}\\rangle \\frac{x_1(0) - x_2(0)}{\\sqrt{2}}\\cos\\omega_\\mathrm{II}t \\<br>        =&amp; \\frac{x_1(0) + x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\frac{x_1(0) - x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right)<br>\\end{aligned}<br>$$<br>​    同理<br>$$<br>x_2(t)= \\frac{x_1(0) + x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\frac{x_1(0) - x_2(0)}{2}\\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right)<br>$$<br>​    写成矩阵形式即为<br>$$<br>\\begin{bmatrix} x_1(t) \\ x_2(t)  \\end{bmatrix}<br>=<br>\\begin{bmatrix}<br>    \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} &amp; \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} \\<br>    \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) - \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2} &amp; \\frac{\\cos\\left(\\sqrt{\\frac{k}{m}}t\\right) + \\cos\\left(\\sqrt{\\frac{3k}{m}}t\\right) }{2}<br>\\end{bmatrix}<br>\\begin{bmatrix} x_1(0) \\ x_2(0) \\end{bmatrix}<br>$$<br>​    此时，只要给出$\\mid x(0)\\rangle$即可得到整个耦合振子系统的运动方程。结束战斗。</p>\n<h1 id=\"收获总结\"><a href=\"#收获总结\" class=\"headerlink\" title=\"收获总结\"></a>收获总结</h1><p>​    在Shankar上看到这道题的题解时，起初是不怎么明白的，直到在写这篇手记的过程中，我才体会到这样解的用意：</p>\n<ol>\n<li>这是一个耦合系统，即两个微分方程分别含有对方的变量。</li>\n<li>求出$\\mid \\mathrm{I}\\rangle$与$\\mid \\mathrm{II}\\rangle$的过程就是在对原有的线性空间基矢（或称基底）做变换，变换的目的是为了将微分方程组转化为非耦合的方程组。这里，个人以为，说的通俗一些，就是换元——在高等数学的某些求解不定积分时也会用到这种方法。</li>\n<li>求算子$\\Omega$的本征值就是为了将其对角化（对角化后只有对角线上元素不为零），做矩阵乘法运算就可以得到非耦合的方程组，然后问题就变成了熟悉的二阶线性微分方程，之后求解需要用到欧拉公式，这里不赘述。</li>\n<li>用矩阵表示大块方程组真的很方便！</li>\n<li>Ti$k$Z很好用！</li>\n</ol>\n<p>虽然说上面的题解基本是翻译过来的，但也是有一些收获的，权当 <code>拾人牙慧吧</code> 。</p>\n"},{"title":"简谐振动系统浅析（一）","date":"2017-09-30T14:21:37.000Z","_content":"\n\n\n\n# 何为简谐振动\n\n引用 Wikipedia 上的[定义](https://zh.wikipedia.org/zh-cn/%E7%B0%A1%E8%AB%A7%E9%81%8B%E5%8B%95)，**简谐运动**（或**简谐振动**、**谐振**、**SHM**（Simple Harmonic Motion））既是最基本也是最简单的一种[机械振动](https://zh.wikipedia.org/wiki/%E6%8C%AF%E5%8A%A8)。当某物体进行简谐运动时，物体所受的[力](https://zh.wikipedia.org/wiki/%E5%8A%9B)跟[位移](https://zh.wikipedia.org/wiki/%E4%BD%8D%E7%A7%BB)成正比，并且力总是指向平衡位置。\n\n典型的例子即为水平面内的弹簧振子，如下图所示（忽略一切摩擦）\n\n![](http://owucpthrj.bkt.clouddn.com/Fkz3IAKLr9KLnGExvHe6RlsOB_Pr)\n\n如果用 $F$ 表示物体受到的回复力，用 $x$ 表示小球相对于平衡位置的位移，由胡克定律，小球受力总有\n$$\nF = -kx\n$$\n简谐振动系统的机械能守恒（即动能和弹簧的势能之间来回转换，动能和势能之和不变）。\n\n# 动力学方程\n\n## 普通表述\n\n由牛顿第二定律\n$$\nF = ma\n$$\n因此\n$$\nma + kx = 0\n$$\n即\n$$\nm\\ddot{x} + kx = 0\n$$\n解上面的方程（这是一个很简单的二阶线性齐次常系数微分方程，$mr^2 + k = 0$，推出 $r = \\pm i\\sqrt{\\frac{k}{m}}$，直接代入解的表达式并用欧拉公式展开即可），可以得到\n$$\n\\begin{aligned}\nx &= c_1 \\cos(\\omega t) + c_2 \\sin(\\omega t)\\\\\n &= A\\cos(\\omega t + \\varphi_0)\n\\end{aligned}\n$$\n\n式中\n$$\n\\begin{aligned}\n\\omega &= \\sqrt{\\frac km} && \\omega 即为角频率\\\\\n\tA &= \\sqrt{c_1^2 + c_2^2} && A即为振幅\\\\\n\t\\varphi_0 &= -\\tan\\frac{c_2}{c_1}& & \\varphi_0 即为初相位\n\\end{aligned}\n$$\n\n显然，从 $x(t)$ 的表达式可以看出，小球的运动呈现一个周期性，周期为\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac mk}\n$$\n\n## 复数表述\n\n这时 $x = A\\cos(\\omega t + \\varphi_0)$ 可以用一个复数表示（欧拉公式：$e^{\\mathrm i \\theta} = \\cos \\theta + \\mathrm i \\sin \\theta$，欧拉公式的推导借助了麦克劳林公式展开，感兴趣可以看[这里](https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%85%AC%E5%BC%8F)）\n$$\n\\begin{aligned}\nx = \\tilde{s}(t) &= Ae^{\\mathrm i(\\omega t + \\varphi_0)} \\\\\n  & = Ae^{\\mathrm i\\omega t}\\cdot e^{\\mathrm i\\varphi_0} \\\\\n  & = (Ae^{\\mathrm i\\varphi_0})\\cdot e^{\\mathrm i\\omega t} \\\\\n  & = \\tilde{A} e^{\\mathrm i\\omega t}\n\\end{aligned}\n$$\n（为什么要用复数呢？~~因为可以装X，~~因为后面涉及求简正模问题时使用复数会变得非常简单）\n\n此时小球的速度和加速度可以表示为\n$$\n\\begin{aligned}\n\t\\tilde{v} &= \\frac{\\mathrm d \\tilde{s}}{\\mathrm d t} = \\frac{\\mathrm d}{\\mathrm dt} \\tilde{A} e^{\\mathrm i\\omega t}  = \\mathrm i \\omega \\tilde{A} e^{\\mathrm i\\omega t} = \\mathrm i\\omega \\tilde{s}\\\\\n\t\\tilde{a} &= \\frac{\\mathrm d^2 \\tilde{s}}{\\mathrm d t^2} = \\frac{\\mathrm d^2}{\\mathrm d t^2} \\tilde{A} e^{\\mathrm i\\omega t} =  -{\\omega}^2 \\tilde{A} e^{\\mathrm i\\omega t}  = -{\\omega}^2 \\tilde{s}\n\\end{aligned}\n$$\n显然，这种方式求导起来比普通表示法要方便很多。\n\n# 能量转化分析\n\n这个系统中值得我们关注的能量有两种：弹簧的弹性势能 $T(x)$ 和小球的动能 $V(x)$。\n\n## 对动能分析\n\n显然有\n$$\nV(s) = \\frac 12 m\\dot{s}^2 = -\\frac 12 \\omega^2 \\tilde{s}^2\n$$\n~~没什么好说的~~\n\n## 对势能分析\n\n**注意，这一部分所分析的势能都是以平衡位置为零势能点所算起的势能。**\n\n弹簧的势能有\n$$\nT(s) = \\frac 12 k s^2\n$$\n对势能求二阶导\n$$\n\\frac{\\mathrm d^2}{\\mathrm ds^2} T(s) =  \\frac{\\mathrm d^2}{\\mathrm ds^2} \\bigg(\\frac12 ks^2 \\bigg)= k\n$$\n我们发现势能对位移求二阶导后恰好等于劲度系数，因此有\n$$\n\\begin{aligned}\n\tT &= \\frac 12 T'' s^2 \\\\\n\tf_{\\rm 回} &= -T''s\n\\end{aligned}\n$$\n此时，我们上一小节所讲的所有公式中的振幅 $A$ 和 角频率 $\\omega$ 都可以用势能的二阶导数表示\n$$\n\\begin{aligned}\n\tA = s_{\\max} &= \\sqrt{ \\frac{2E}{k} } = \\sqrt{ \\frac{2E}{T''} } \\\\\n\t\t\\omega\t&= \\sqrt{ \\frac{k}{m} } = \\sqrt{ \\frac{T''}{m} }\n\\end{aligned}\n$$\n\n根据这个条件，当我们遇到某些特殊情况而无法很轻松求出 $k$ ，但 $T$ 又显而易见时，我们可以使用上面的式子来计算振动的相关参数（比如摆）。\n\n# 简正模\n\n当我们研究的系统不再由单一振子，而是多个振子耦合在一起时，各个振子可能会有各自不同的固有频率，此时系统内的振子如何运动？如果这个系统是孤立的，那么系统的动量守恒，所有的振子一定会按照统一的频率振动，那么这个频率是由谁来决定？我们用一个例子来说明这个问题：\n\n下图表示一个线形三原子分子 $\\rm A_2B$ ，相邻原子之间的化学键看成弹性力，它的大小正比于原子离开平衡位置的距离，假设原子只做纵向振动（即振动方向始终与原子核之间连线共线），试求分子可能的纵向运动形式和相应的振动角频率。\n\n![](http://owucpthrj.bkt.clouddn.com/Fk4cNP6wcbGvH68621OHVFdoQIVz)\n\n我们假设从左到右三个原子相对平衡位置的位移分别为 $x_1,\\, x_2,\\, x_3$ ，列出它们的运动方程为\n$$\n\\begin{aligned}\n\tm_A \\frac{\\mathrm d^2}{\\mathrm d t^2}x_1 &= -k(x_1 - x_2) \\\\\n\tm_B \\frac{\\mathrm d^2}{\\mathrm d t^2}x_2 &= -k(x_2 - x_1) - k(x_2 - x_3) \\\\\n\tm_A \\frac{\\mathrm d^2}{\\mathrm d t^2}x_3 &= -k(x_3 - x_2)\n\\end{aligned}\n$$\n因为这是个孤立系统，所有原子的振动角频率相同，不妨设所有原子的振动角频率都是 $\\omega$ ，所以所有原子的位移可以表示为\n$$\n\\tilde x_i = \\tilde A_i e^{\\mathrm i \\omega t}\n$$\n上面的运动方程可以改写为\n$$\n\\begin{aligned}\n\t-\\omega^2m_A A_1 e^{\\mathrm i\\omega t} &= -k(A_1 e^{\\mathrm i \\omega t} - A_2 e^{\\mathrm i\\omega t} ) \\\\\n\t-\\omega^2m_B A_2 e^{\\mathrm i\\omega t} &= -k(2A_2 e^{\\mathrm i \\omega t} - (A_1+A_3) e^{\\mathrm i\\omega t} ) \\\\\n\t-\\omega^2m_A A_3 e^{\\mathrm i\\omega t} &= -k(A_3 e^{\\mathrm i \\omega t} - A_2 e^{\\mathrm i\\omega t} ) \\\\\n\\end{aligned}\n$$\n经过化简可以得到\n$$\n\\begin{cases}\n\t(\\omega^2-\\frac{k}{m_A})A_1 + \\dfrac{k}{m_A}A_2 = 0 \\\\\n\t\\dfrac{k}{m_B}A_1 + (\\omega^2-\\dfrac{2k}{m_B})A_2 + \\dfrac{k}{m_B}A_3 = 0 \\\\\n\t\\dfrac{k}{m_A}A_2 + (\\omega^2-\\dfrac{k}{m_A})A_3 = 0 \n\\end{cases}\n$$\n\n上述方程组有解得条件是\n$$\n\\begin{vmatrix}\n\t(\\omega^2-\\frac{k}{m_A})A_1 & \\frac{k}{m_A}A_2  & 0\\\\\n\t\\frac{k}{m_B}A_1 & (\\omega^2-\\frac{2k}{m_B})A_2 & \\frac{k}{m_B}A_3 \\\\\n\t0 & \\frac{k}{m_A}A_2 & (\\omega^2-\\frac{k}{m_A})A_3 \n\\end{vmatrix}\n= 0\n$$\n即\n$$\n(\\omega^2 - \\frac{k}{m_A})^2 (\\omega^2 - \\frac{2k}{m_B}) - 2(\\omega^2 - \\frac{k}{m_A})\\frac{k^2}{m_A m_B} = 0\n$$\n进一步因式分解可以得到\n$$\n(\\omega^2 - \\frac{k}{m_A}) (\\omega^2 - \\frac{k(2m_A+m_B)}{m_A m_B})\\omega^2= 0\n$$\n此时 $\\omega ^2$ 有三个根，分别为 $\\frac{k}{m_A} $ ， $\\frac{k(2m_A+m_B)}{m_A m_B}$ ， $0$ 。下面对这三个根进行讨论：\n\n1. 当 $\\omega^2 = \\frac{k}{m_A}$ 时，$A_1 + A_3 = 0$ 且 $A_2 = 0$ ，即中间原子不动，两边原子做做振动方向相反、振幅和频率相同的运动；\n2. 当 $\\omega^2 = \\frac{k(2m_A + m_B)}{m_A m_B}$ 时，$A_1 = A_3 = -\\frac{m_B}{2m_A} A_2$ ，即两边原子运动状态相同，但与中间原子的运动方向相反，振幅之比为 $A_1 : A_2 = m_B: 2m_A$ ；\n3. 当 $\\omega^2 = 0$ 时，$A_1 = A_2 = A_3$ ，系统做刚性平动。\n\n上面 $\\omega^2$ 取三个根时，系统分别对应了三个不同的状态，其中除了 $\\omega^2 = 0$ 外，其他两个状态都各自表明了一种特殊的振动模式，这些振动模式都对应了各自唯一的一个频率，称为**简正频率**。\n\n一般来说，简正模时系统中各自由度运动的某种特殊组合，是整个系统的集体运动方式，不是其中个别振子的行为所决定的。\n\n# 来两道题小试牛刀\n\n## 求下面系统的简正模\n\n三个质量为 $m$ 的质点和三个劲度系数为 $k$ 的弹簧串连在一起，紧套在光滑的水平圆周上（如下图）。求此系统的简正模（即简正频率和运动方式）。\n\n<img src=\"http://owucpthrj.bkt.clouddn.com/FvHP-LeH9BzMuBco5XNJP2darkrV\" width=\"400\"/>\n\n\n\n列出三个质点的动力学方程：\n$$\n\\begin{aligned}\n\tm\\frac{\\mathrm d^2}{\\mathrm dt^2} x_1&= -k(2x_1 - x_2 - x_3) = k(x_2 + x_3 - 2x_1) \\\\\n\tm\\frac{\\mathrm d^2}{\\mathrm dt^2} x_2&= -k(2x_2 - x_1 - x_3) = k(x_1 + x_3 - 2x_2) \\\\\n\tm\\frac{\\mathrm d^2}{\\mathrm dt^2} x_3&= -k(2x_3 - x_1 - x_2) = k(x_1 + x_2 - 2x_3) \n\\end{aligned}\n$$\n不妨设 $x_i = \\tilde{A_i}e^{\\mathrm i \\omega t}$ ，上面式子改写为\n$$\n\\begin{aligned}\n\t-\\omega^2 m A_1 e^{\\mathrm i\\omega t} &= k( A_2 e^{\\mathrm i\\omega t} + A_3 e^{\\mathrm i\\omega t} - 2A_1 e^{\\mathrm i\\omega t} ) \\\\\n\t-\\omega^2 m A_2 e^{\\mathrm i\\omega t} &= k( A_1 e^{\\mathrm i\\omega t} + A_3 e^{\\mathrm i\\omega t} - 2A_2 e^{\\mathrm i\\omega t} ) \\\\\n\t-\\omega^2 m A_3 e^{\\mathrm i\\omega t} &= k( A_1 e^{\\mathrm i\\omega t} + A_2 e^{\\mathrm i\\omega t} - 2A_3 e^{\\mathrm i\\omega t} ) \n\\end{aligned}\n$$\n经过化简，上面式子变为\n$$\n\\begin{aligned}\n\t( \\omega^2-\\frac{2k}{m} )A_1 + \\frac{k}{m}A_2 + \\frac{k}{m}A_3 &= 0\\\\\n\t\\frac{k}{m}A_1 + ( \\omega^2-\\frac{2k}{m} )A_2 + \\frac{k}{m}A_3 &= 0\\\\\n\t\\frac{k}{m}A_1 + \\frac{k}{m}A_2 + ( \\omega^2-\\frac{2k}{m} )A_2 &= 0\n\\end{aligned}\n$$\n\n上述式子成立的条件是矩阵对应的行列式值为零\n$$\n\\begin{vmatrix}\n\t( \\omega^2-\\frac{2k}{m} )A_1 & \\frac{k}{m}A_2 & \\frac{k}{m}A_3 \\\\\n\t\\frac{k}{m}A_1 & ( \\omega^2-\\frac{2k}{m} )A_2 & \\frac{k}{m}A_3 \\\\\n\t\\frac{k}{m}A_1 & \\frac{k}{m}A_2 & ( \\omega^2-\\frac{2k}{m} )A_3 \n\\end{vmatrix}\n= 0\n$$\n\n注意到这是一个特殊的行列式，使用结论可以~~口算~~很快算出\n$$\n(\\omega^2 - \\frac{2k}{m} + 2\\frac{k}{m}) (\\omega^2 -\\frac{2k}{m} - \\frac{k}{m}) ^2 = 0\n$$\n得到三个根 $\\omega_1 = 0$ ，$\\omega_2 = \\omega_3 = \\sqrt{\\frac{3k}{m}}$ 。\n\n这三个根代入方程组都得出\n$$\nA_1 = A_2 = A_3\n$$\n即当这个系统趋于稳定时，三个质点的运动是一致的，整个系统做刚体的平动（绕圆盘圆心转动）。\n\n\n\n## 求下面振子的周期公式\n\n竖直悬挂的弹簧振子，若弹簧本身质量不可忽略，试推导其周期公式。假设弹簧的质量不可忽略，k为其劲度系数，M为系于其上物体的质量（假设弹簧的伸长量由上到下与长度成正比地增加）。\n\n<img src=\"http://owucpthrj.bkt.clouddn.com/FvTsySEGcax0xAS0Xa7MC3bQuS3q\" width=\"150\"/>\n\n假设弹簧长度为 $L$ ，任意时刻 $M$ 的运动速度为 $v = v(t)$ ，则弹簧单位长度的质量为 $\\mu = \\frac{m}{L}$ ，又假设 $M$ 运动时弹簧上质点的速度是线性增加的，此时计算弹簧运动时的动能\n$$\n\\begin{aligned}\nV_{\\rm spring} &= \\int\\mathrm d \\bigg(\\frac{1}{2} m v^2 \\bigg) \\\\\n\t\t&= \\frac{1}{2} \\int_{0}^{L} \\bigg(\\mu \\mathrm dl \\cdot (v\\frac{l}{L})^2\\bigg) \\\\\n\t\t&= \\frac{mv^2}{2L^3} \\int_{0}^{L} l^2 \\mathrm d l \\\\\n\t\t&= \\frac{1}{2}\\cdot \\frac{m}{3} v^2\n\\end{aligned}\n$$\n 即弹簧的运动动能相当于在其末端悬挂了一个质量为 $\\frac{m}{3}$ 的质点运动时的动能，因此这个模型可以等效为一个质量为 0 的弹簧在其末端悬挂了质量 $M + \\frac{m}{3}$ 的质点做简谐运动，套用简谐运动的角频率公式即可解出 $M$ 运动时的角频率为\n$$\n\\begin{aligned}\n\t\\omega &= \\sqrt{ \\frac{k}{M + m/3} }\\\\\n\tT &= \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{ \\frac{M + m/3}{k} }\n\\end{aligned}\n$$\n\n# 总结\n\n简正模在刚开始看时还是挺费劲的，但是读了5遍左右就开始慢慢明白（大概是明白了吧，雾）了其物理含义，而在求解简正模时用到了线性代数的一点知识，算是复习了一下下线代，心里还是蛮开心的。最后那道题在看钱伯初先生的论文时对平均速度的求解目的不是很理解，后来经物吧腿娘大佬的正确指导下弄明白了如何应对这个问题。\n\n关于振动，不出意外，本渣应该会写两篇浅析，这是第一篇，第二篇已经在计划中，希望有生之年可以见到。\n\n以上","source":"_posts/how-to-solve-viberation-1.md","raw":"---\ntitle: 简谐振动系统浅析（一）\ntags:\n  - 物理\n  - 振动\ncategories: Physics\ndate: 2017-09-30 22:21:37\n---\n\n\n\n\n# 何为简谐振动\n\n引用 Wikipedia 上的[定义](https://zh.wikipedia.org/zh-cn/%E7%B0%A1%E8%AB%A7%E9%81%8B%E5%8B%95)，**简谐运动**（或**简谐振动**、**谐振**、**SHM**（Simple Harmonic Motion））既是最基本也是最简单的一种[机械振动](https://zh.wikipedia.org/wiki/%E6%8C%AF%E5%8A%A8)。当某物体进行简谐运动时，物体所受的[力](https://zh.wikipedia.org/wiki/%E5%8A%9B)跟[位移](https://zh.wikipedia.org/wiki/%E4%BD%8D%E7%A7%BB)成正比，并且力总是指向平衡位置。\n\n典型的例子即为水平面内的弹簧振子，如下图所示（忽略一切摩擦）\n\n![](http://owucpthrj.bkt.clouddn.com/Fkz3IAKLr9KLnGExvHe6RlsOB_Pr)\n\n如果用 $F$ 表示物体受到的回复力，用 $x$ 表示小球相对于平衡位置的位移，由胡克定律，小球受力总有\n$$\nF = -kx\n$$\n简谐振动系统的机械能守恒（即动能和弹簧的势能之间来回转换，动能和势能之和不变）。\n\n# 动力学方程\n\n## 普通表述\n\n由牛顿第二定律\n$$\nF = ma\n$$\n因此\n$$\nma + kx = 0\n$$\n即\n$$\nm\\ddot{x} + kx = 0\n$$\n解上面的方程（这是一个很简单的二阶线性齐次常系数微分方程，$mr^2 + k = 0$，推出 $r = \\pm i\\sqrt{\\frac{k}{m}}$，直接代入解的表达式并用欧拉公式展开即可），可以得到\n$$\n\\begin{aligned}\nx &= c_1 \\cos(\\omega t) + c_2 \\sin(\\omega t)\\\\\n &= A\\cos(\\omega t + \\varphi_0)\n\\end{aligned}\n$$\n\n式中\n$$\n\\begin{aligned}\n\\omega &= \\sqrt{\\frac km} && \\omega 即为角频率\\\\\n\tA &= \\sqrt{c_1^2 + c_2^2} && A即为振幅\\\\\n\t\\varphi_0 &= -\\tan\\frac{c_2}{c_1}& & \\varphi_0 即为初相位\n\\end{aligned}\n$$\n\n显然，从 $x(t)$ 的表达式可以看出，小球的运动呈现一个周期性，周期为\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac mk}\n$$\n\n## 复数表述\n\n这时 $x = A\\cos(\\omega t + \\varphi_0)$ 可以用一个复数表示（欧拉公式：$e^{\\mathrm i \\theta} = \\cos \\theta + \\mathrm i \\sin \\theta$，欧拉公式的推导借助了麦克劳林公式展开，感兴趣可以看[这里](https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%85%AC%E5%BC%8F)）\n$$\n\\begin{aligned}\nx = \\tilde{s}(t) &= Ae^{\\mathrm i(\\omega t + \\varphi_0)} \\\\\n  & = Ae^{\\mathrm i\\omega t}\\cdot e^{\\mathrm i\\varphi_0} \\\\\n  & = (Ae^{\\mathrm i\\varphi_0})\\cdot e^{\\mathrm i\\omega t} \\\\\n  & = \\tilde{A} e^{\\mathrm i\\omega t}\n\\end{aligned}\n$$\n（为什么要用复数呢？~~因为可以装X，~~因为后面涉及求简正模问题时使用复数会变得非常简单）\n\n此时小球的速度和加速度可以表示为\n$$\n\\begin{aligned}\n\t\\tilde{v} &= \\frac{\\mathrm d \\tilde{s}}{\\mathrm d t} = \\frac{\\mathrm d}{\\mathrm dt} \\tilde{A} e^{\\mathrm i\\omega t}  = \\mathrm i \\omega \\tilde{A} e^{\\mathrm i\\omega t} = \\mathrm i\\omega \\tilde{s}\\\\\n\t\\tilde{a} &= \\frac{\\mathrm d^2 \\tilde{s}}{\\mathrm d t^2} = \\frac{\\mathrm d^2}{\\mathrm d t^2} \\tilde{A} e^{\\mathrm i\\omega t} =  -{\\omega}^2 \\tilde{A} e^{\\mathrm i\\omega t}  = -{\\omega}^2 \\tilde{s}\n\\end{aligned}\n$$\n显然，这种方式求导起来比普通表示法要方便很多。\n\n# 能量转化分析\n\n这个系统中值得我们关注的能量有两种：弹簧的弹性势能 $T(x)$ 和小球的动能 $V(x)$。\n\n## 对动能分析\n\n显然有\n$$\nV(s) = \\frac 12 m\\dot{s}^2 = -\\frac 12 \\omega^2 \\tilde{s}^2\n$$\n~~没什么好说的~~\n\n## 对势能分析\n\n**注意，这一部分所分析的势能都是以平衡位置为零势能点所算起的势能。**\n\n弹簧的势能有\n$$\nT(s) = \\frac 12 k s^2\n$$\n对势能求二阶导\n$$\n\\frac{\\mathrm d^2}{\\mathrm ds^2} T(s) =  \\frac{\\mathrm d^2}{\\mathrm ds^2} \\bigg(\\frac12 ks^2 \\bigg)= k\n$$\n我们发现势能对位移求二阶导后恰好等于劲度系数，因此有\n$$\n\\begin{aligned}\n\tT &= \\frac 12 T'' s^2 \\\\\n\tf_{\\rm 回} &= -T''s\n\\end{aligned}\n$$\n此时，我们上一小节所讲的所有公式中的振幅 $A$ 和 角频率 $\\omega$ 都可以用势能的二阶导数表示\n$$\n\\begin{aligned}\n\tA = s_{\\max} &= \\sqrt{ \\frac{2E}{k} } = \\sqrt{ \\frac{2E}{T''} } \\\\\n\t\t\\omega\t&= \\sqrt{ \\frac{k}{m} } = \\sqrt{ \\frac{T''}{m} }\n\\end{aligned}\n$$\n\n根据这个条件，当我们遇到某些特殊情况而无法很轻松求出 $k$ ，但 $T$ 又显而易见时，我们可以使用上面的式子来计算振动的相关参数（比如摆）。\n\n# 简正模\n\n当我们研究的系统不再由单一振子，而是多个振子耦合在一起时，各个振子可能会有各自不同的固有频率，此时系统内的振子如何运动？如果这个系统是孤立的，那么系统的动量守恒，所有的振子一定会按照统一的频率振动，那么这个频率是由谁来决定？我们用一个例子来说明这个问题：\n\n下图表示一个线形三原子分子 $\\rm A_2B$ ，相邻原子之间的化学键看成弹性力，它的大小正比于原子离开平衡位置的距离，假设原子只做纵向振动（即振动方向始终与原子核之间连线共线），试求分子可能的纵向运动形式和相应的振动角频率。\n\n![](http://owucpthrj.bkt.clouddn.com/Fk4cNP6wcbGvH68621OHVFdoQIVz)\n\n我们假设从左到右三个原子相对平衡位置的位移分别为 $x_1,\\, x_2,\\, x_3$ ，列出它们的运动方程为\n$$\n\\begin{aligned}\n\tm_A \\frac{\\mathrm d^2}{\\mathrm d t^2}x_1 &= -k(x_1 - x_2) \\\\\n\tm_B \\frac{\\mathrm d^2}{\\mathrm d t^2}x_2 &= -k(x_2 - x_1) - k(x_2 - x_3) \\\\\n\tm_A \\frac{\\mathrm d^2}{\\mathrm d t^2}x_3 &= -k(x_3 - x_2)\n\\end{aligned}\n$$\n因为这是个孤立系统，所有原子的振动角频率相同，不妨设所有原子的振动角频率都是 $\\omega$ ，所以所有原子的位移可以表示为\n$$\n\\tilde x_i = \\tilde A_i e^{\\mathrm i \\omega t}\n$$\n上面的运动方程可以改写为\n$$\n\\begin{aligned}\n\t-\\omega^2m_A A_1 e^{\\mathrm i\\omega t} &= -k(A_1 e^{\\mathrm i \\omega t} - A_2 e^{\\mathrm i\\omega t} ) \\\\\n\t-\\omega^2m_B A_2 e^{\\mathrm i\\omega t} &= -k(2A_2 e^{\\mathrm i \\omega t} - (A_1+A_3) e^{\\mathrm i\\omega t} ) \\\\\n\t-\\omega^2m_A A_3 e^{\\mathrm i\\omega t} &= -k(A_3 e^{\\mathrm i \\omega t} - A_2 e^{\\mathrm i\\omega t} ) \\\\\n\\end{aligned}\n$$\n经过化简可以得到\n$$\n\\begin{cases}\n\t(\\omega^2-\\frac{k}{m_A})A_1 + \\dfrac{k}{m_A}A_2 = 0 \\\\\n\t\\dfrac{k}{m_B}A_1 + (\\omega^2-\\dfrac{2k}{m_B})A_2 + \\dfrac{k}{m_B}A_3 = 0 \\\\\n\t\\dfrac{k}{m_A}A_2 + (\\omega^2-\\dfrac{k}{m_A})A_3 = 0 \n\\end{cases}\n$$\n\n上述方程组有解得条件是\n$$\n\\begin{vmatrix}\n\t(\\omega^2-\\frac{k}{m_A})A_1 & \\frac{k}{m_A}A_2  & 0\\\\\n\t\\frac{k}{m_B}A_1 & (\\omega^2-\\frac{2k}{m_B})A_2 & \\frac{k}{m_B}A_3 \\\\\n\t0 & \\frac{k}{m_A}A_2 & (\\omega^2-\\frac{k}{m_A})A_3 \n\\end{vmatrix}\n= 0\n$$\n即\n$$\n(\\omega^2 - \\frac{k}{m_A})^2 (\\omega^2 - \\frac{2k}{m_B}) - 2(\\omega^2 - \\frac{k}{m_A})\\frac{k^2}{m_A m_B} = 0\n$$\n进一步因式分解可以得到\n$$\n(\\omega^2 - \\frac{k}{m_A}) (\\omega^2 - \\frac{k(2m_A+m_B)}{m_A m_B})\\omega^2= 0\n$$\n此时 $\\omega ^2$ 有三个根，分别为 $\\frac{k}{m_A} $ ， $\\frac{k(2m_A+m_B)}{m_A m_B}$ ， $0$ 。下面对这三个根进行讨论：\n\n1. 当 $\\omega^2 = \\frac{k}{m_A}$ 时，$A_1 + A_3 = 0$ 且 $A_2 = 0$ ，即中间原子不动，两边原子做做振动方向相反、振幅和频率相同的运动；\n2. 当 $\\omega^2 = \\frac{k(2m_A + m_B)}{m_A m_B}$ 时，$A_1 = A_3 = -\\frac{m_B}{2m_A} A_2$ ，即两边原子运动状态相同，但与中间原子的运动方向相反，振幅之比为 $A_1 : A_2 = m_B: 2m_A$ ；\n3. 当 $\\omega^2 = 0$ 时，$A_1 = A_2 = A_3$ ，系统做刚性平动。\n\n上面 $\\omega^2$ 取三个根时，系统分别对应了三个不同的状态，其中除了 $\\omega^2 = 0$ 外，其他两个状态都各自表明了一种特殊的振动模式，这些振动模式都对应了各自唯一的一个频率，称为**简正频率**。\n\n一般来说，简正模时系统中各自由度运动的某种特殊组合，是整个系统的集体运动方式，不是其中个别振子的行为所决定的。\n\n# 来两道题小试牛刀\n\n## 求下面系统的简正模\n\n三个质量为 $m$ 的质点和三个劲度系数为 $k$ 的弹簧串连在一起，紧套在光滑的水平圆周上（如下图）。求此系统的简正模（即简正频率和运动方式）。\n\n<img src=\"http://owucpthrj.bkt.clouddn.com/FvHP-LeH9BzMuBco5XNJP2darkrV\" width=\"400\"/>\n\n\n\n列出三个质点的动力学方程：\n$$\n\\begin{aligned}\n\tm\\frac{\\mathrm d^2}{\\mathrm dt^2} x_1&= -k(2x_1 - x_2 - x_3) = k(x_2 + x_3 - 2x_1) \\\\\n\tm\\frac{\\mathrm d^2}{\\mathrm dt^2} x_2&= -k(2x_2 - x_1 - x_3) = k(x_1 + x_3 - 2x_2) \\\\\n\tm\\frac{\\mathrm d^2}{\\mathrm dt^2} x_3&= -k(2x_3 - x_1 - x_2) = k(x_1 + x_2 - 2x_3) \n\\end{aligned}\n$$\n不妨设 $x_i = \\tilde{A_i}e^{\\mathrm i \\omega t}$ ，上面式子改写为\n$$\n\\begin{aligned}\n\t-\\omega^2 m A_1 e^{\\mathrm i\\omega t} &= k( A_2 e^{\\mathrm i\\omega t} + A_3 e^{\\mathrm i\\omega t} - 2A_1 e^{\\mathrm i\\omega t} ) \\\\\n\t-\\omega^2 m A_2 e^{\\mathrm i\\omega t} &= k( A_1 e^{\\mathrm i\\omega t} + A_3 e^{\\mathrm i\\omega t} - 2A_2 e^{\\mathrm i\\omega t} ) \\\\\n\t-\\omega^2 m A_3 e^{\\mathrm i\\omega t} &= k( A_1 e^{\\mathrm i\\omega t} + A_2 e^{\\mathrm i\\omega t} - 2A_3 e^{\\mathrm i\\omega t} ) \n\\end{aligned}\n$$\n经过化简，上面式子变为\n$$\n\\begin{aligned}\n\t( \\omega^2-\\frac{2k}{m} )A_1 + \\frac{k}{m}A_2 + \\frac{k}{m}A_3 &= 0\\\\\n\t\\frac{k}{m}A_1 + ( \\omega^2-\\frac{2k}{m} )A_2 + \\frac{k}{m}A_3 &= 0\\\\\n\t\\frac{k}{m}A_1 + \\frac{k}{m}A_2 + ( \\omega^2-\\frac{2k}{m} )A_2 &= 0\n\\end{aligned}\n$$\n\n上述式子成立的条件是矩阵对应的行列式值为零\n$$\n\\begin{vmatrix}\n\t( \\omega^2-\\frac{2k}{m} )A_1 & \\frac{k}{m}A_2 & \\frac{k}{m}A_3 \\\\\n\t\\frac{k}{m}A_1 & ( \\omega^2-\\frac{2k}{m} )A_2 & \\frac{k}{m}A_3 \\\\\n\t\\frac{k}{m}A_1 & \\frac{k}{m}A_2 & ( \\omega^2-\\frac{2k}{m} )A_3 \n\\end{vmatrix}\n= 0\n$$\n\n注意到这是一个特殊的行列式，使用结论可以~~口算~~很快算出\n$$\n(\\omega^2 - \\frac{2k}{m} + 2\\frac{k}{m}) (\\omega^2 -\\frac{2k}{m} - \\frac{k}{m}) ^2 = 0\n$$\n得到三个根 $\\omega_1 = 0$ ，$\\omega_2 = \\omega_3 = \\sqrt{\\frac{3k}{m}}$ 。\n\n这三个根代入方程组都得出\n$$\nA_1 = A_2 = A_3\n$$\n即当这个系统趋于稳定时，三个质点的运动是一致的，整个系统做刚体的平动（绕圆盘圆心转动）。\n\n\n\n## 求下面振子的周期公式\n\n竖直悬挂的弹簧振子，若弹簧本身质量不可忽略，试推导其周期公式。假设弹簧的质量不可忽略，k为其劲度系数，M为系于其上物体的质量（假设弹簧的伸长量由上到下与长度成正比地增加）。\n\n<img src=\"http://owucpthrj.bkt.clouddn.com/FvTsySEGcax0xAS0Xa7MC3bQuS3q\" width=\"150\"/>\n\n假设弹簧长度为 $L$ ，任意时刻 $M$ 的运动速度为 $v = v(t)$ ，则弹簧单位长度的质量为 $\\mu = \\frac{m}{L}$ ，又假设 $M$ 运动时弹簧上质点的速度是线性增加的，此时计算弹簧运动时的动能\n$$\n\\begin{aligned}\nV_{\\rm spring} &= \\int\\mathrm d \\bigg(\\frac{1}{2} m v^2 \\bigg) \\\\\n\t\t&= \\frac{1}{2} \\int_{0}^{L} \\bigg(\\mu \\mathrm dl \\cdot (v\\frac{l}{L})^2\\bigg) \\\\\n\t\t&= \\frac{mv^2}{2L^3} \\int_{0}^{L} l^2 \\mathrm d l \\\\\n\t\t&= \\frac{1}{2}\\cdot \\frac{m}{3} v^2\n\\end{aligned}\n$$\n 即弹簧的运动动能相当于在其末端悬挂了一个质量为 $\\frac{m}{3}$ 的质点运动时的动能，因此这个模型可以等效为一个质量为 0 的弹簧在其末端悬挂了质量 $M + \\frac{m}{3}$ 的质点做简谐运动，套用简谐运动的角频率公式即可解出 $M$ 运动时的角频率为\n$$\n\\begin{aligned}\n\t\\omega &= \\sqrt{ \\frac{k}{M + m/3} }\\\\\n\tT &= \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{ \\frac{M + m/3}{k} }\n\\end{aligned}\n$$\n\n# 总结\n\n简正模在刚开始看时还是挺费劲的，但是读了5遍左右就开始慢慢明白（大概是明白了吧，雾）了其物理含义，而在求解简正模时用到了线性代数的一点知识，算是复习了一下下线代，心里还是蛮开心的。最后那道题在看钱伯初先生的论文时对平均速度的求解目的不是很理解，后来经物吧腿娘大佬的正确指导下弄明白了如何应对这个问题。\n\n关于振动，不出意外，本渣应该会写两篇浅析，这是第一篇，第二篇已经在计划中，希望有生之年可以见到。\n\n以上","slug":"how-to-solve-viberation-1","published":1,"updated":"2018-12-31T11:47:25.723Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjbbv001kzq4ihc0jacie","content":"<h1 id=\"何为简谐振动\"><a href=\"#何为简谐振动\" class=\"headerlink\" title=\"何为简谐振动\"></a>何为简谐振动</h1><p>引用 Wikipedia 上的<a href=\"https://zh.wikipedia.org/zh-cn/%E7%B0%A1%E8%AB%A7%E9%81%8B%E5%8B%95\" target=\"_blank\" rel=\"noopener\">定义</a>，<strong>简谐运动</strong>（或<strong>简谐振动</strong>、<strong>谐振</strong>、<strong>SHM</strong>（Simple Harmonic Motion））既是最基本也是最简单的一种<a href=\"https://zh.wikipedia.org/wiki/%E6%8C%AF%E5%8A%A8\" target=\"_blank\" rel=\"noopener\">机械振动</a>。当某物体进行简谐运动时，物体所受的<a href=\"https://zh.wikipedia.org/wiki/%E5%8A%9B\" target=\"_blank\" rel=\"noopener\">力</a>跟<a href=\"https://zh.wikipedia.org/wiki/%E4%BD%8D%E7%A7%BB\" target=\"_blank\" rel=\"noopener\">位移</a>成正比，并且力总是指向平衡位置。</p>\n<p>典型的例子即为水平面内的弹簧振子，如下图所示（忽略一切摩擦）</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/Fkz3IAKLr9KLnGExvHe6RlsOB_Pr\" alt></p>\n<p>如果用 $F$ 表示物体受到的回复力，用 $x$ 表示小球相对于平衡位置的位移，由胡克定律，小球受力总有<br>$$<br>F = -kx<br>$$<br>简谐振动系统的机械能守恒（即动能和弹簧的势能之间来回转换，动能和势能之和不变）。</p>\n<h1 id=\"动力学方程\"><a href=\"#动力学方程\" class=\"headerlink\" title=\"动力学方程\"></a>动力学方程</h1><h2 id=\"普通表述\"><a href=\"#普通表述\" class=\"headerlink\" title=\"普通表述\"></a>普通表述</h2><p>由牛顿第二定律<br>$$<br>F = ma<br>$$<br>因此<br>$$<br>ma + kx = 0<br>$$<br>即<br>$$<br>m\\ddot{x} + kx = 0<br>$$<br>解上面的方程（这是一个很简单的二阶线性齐次常系数微分方程，$mr^2 + k = 0$，推出 $r = \\pm i\\sqrt{\\frac{k}{m}}$，直接代入解的表达式并用欧拉公式展开即可），可以得到<br>$$<br>\\begin{aligned}<br>x &amp;= c_1 \\cos(\\omega t) + c_2 \\sin(\\omega t)\\<br> &amp;= A\\cos(\\omega t + \\varphi_0)<br>\\end{aligned}<br>$$</p>\n<p>式中<br>$$<br>\\begin{aligned}<br>\\omega &amp;= \\sqrt{\\frac km} &amp;&amp; \\omega 即为角频率\\<br>    A &amp;= \\sqrt{c_1^2 + c_2^2} &amp;&amp; A即为振幅\\<br>    \\varphi_0 &amp;= -\\tan\\frac{c_2}{c_1}&amp; &amp; \\varphi_0 即为初相位<br>\\end{aligned}<br>$$</p>\n<p>显然，从 $x(t)$ 的表达式可以看出，小球的运动呈现一个周期性，周期为<br>$$<br>T = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac mk}<br>$$</p>\n<h2 id=\"复数表述\"><a href=\"#复数表述\" class=\"headerlink\" title=\"复数表述\"></a>复数表述</h2><p>这时 $x = A\\cos(\\omega t + \\varphi_0)$ 可以用一个复数表示（欧拉公式：$e^{\\mathrm i \\theta} = \\cos \\theta + \\mathrm i \\sin \\theta$，欧拉公式的推导借助了麦克劳林公式展开，感兴趣可以看<a href=\"https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%85%AC%E5%BC%8F\" target=\"_blank\" rel=\"noopener\">这里</a>）<br>$$<br>\\begin{aligned}<br>x = \\tilde{s}(t) &amp;= Ae^{\\mathrm i(\\omega t + \\varphi_0)} \\<br>  &amp; = Ae^{\\mathrm i\\omega t}\\cdot e^{\\mathrm i\\varphi_0} \\<br>  &amp; = (Ae^{\\mathrm i\\varphi_0})\\cdot e^{\\mathrm i\\omega t} \\<br>  &amp; = \\tilde{A} e^{\\mathrm i\\omega t}<br>\\end{aligned}<br>$$<br>（为什么要用复数呢？<del>因为可以装X，</del>因为后面涉及求简正模问题时使用复数会变得非常简单）</p>\n<p>此时小球的速度和加速度可以表示为<br>$$<br>\\begin{aligned}<br>    \\tilde{v} &amp;= \\frac{\\mathrm d \\tilde{s}}{\\mathrm d t} = \\frac{\\mathrm d}{\\mathrm dt} \\tilde{A} e^{\\mathrm i\\omega t}  = \\mathrm i \\omega \\tilde{A} e^{\\mathrm i\\omega t} = \\mathrm i\\omega \\tilde{s}\\<br>    \\tilde{a} &amp;= \\frac{\\mathrm d^2 \\tilde{s}}{\\mathrm d t^2} = \\frac{\\mathrm d^2}{\\mathrm d t^2} \\tilde{A} e^{\\mathrm i\\omega t} =  -{\\omega}^2 \\tilde{A} e^{\\mathrm i\\omega t}  = -{\\omega}^2 \\tilde{s}<br>\\end{aligned}<br>$$<br>显然，这种方式求导起来比普通表示法要方便很多。</p>\n<h1 id=\"能量转化分析\"><a href=\"#能量转化分析\" class=\"headerlink\" title=\"能量转化分析\"></a>能量转化分析</h1><p>这个系统中值得我们关注的能量有两种：弹簧的弹性势能 $T(x)$ 和小球的动能 $V(x)$。</p>\n<h2 id=\"对动能分析\"><a href=\"#对动能分析\" class=\"headerlink\" title=\"对动能分析\"></a>对动能分析</h2><p>显然有<br>$$<br>V(s) = \\frac 12 m\\dot{s}^2 = -\\frac 12 \\omega^2 \\tilde{s}^2<br>$$<br><del>没什么好说的</del></p>\n<h2 id=\"对势能分析\"><a href=\"#对势能分析\" class=\"headerlink\" title=\"对势能分析\"></a>对势能分析</h2><p><strong>注意，这一部分所分析的势能都是以平衡位置为零势能点所算起的势能。</strong></p>\n<p>弹簧的势能有<br>$$<br>T(s) = \\frac 12 k s^2<br>$$<br>对势能求二阶导<br>$$<br>\\frac{\\mathrm d^2}{\\mathrm ds^2} T(s) =  \\frac{\\mathrm d^2}{\\mathrm ds^2} \\bigg(\\frac12 ks^2 \\bigg)= k<br>$$<br>我们发现势能对位移求二阶导后恰好等于劲度系数，因此有<br>$$<br>\\begin{aligned}<br>    T &amp;= \\frac 12 T’’ s^2 \\<br>    f_{\\rm 回} &amp;= -T’’s<br>\\end{aligned}<br>$$<br>此时，我们上一小节所讲的所有公式中的振幅 $A$ 和 角频率 $\\omega$ 都可以用势能的二阶导数表示<br>$$<br>\\begin{aligned}<br>    A = s_{\\max} &amp;= \\sqrt{ \\frac{2E}{k} } = \\sqrt{ \\frac{2E}{T’’} } \\<br>        \\omega    &amp;= \\sqrt{ \\frac{k}{m} } = \\sqrt{ \\frac{T’’}{m} }<br>\\end{aligned}<br>$$</p>\n<p>根据这个条件，当我们遇到某些特殊情况而无法很轻松求出 $k$ ，但 $T$ 又显而易见时，我们可以使用上面的式子来计算振动的相关参数（比如摆）。</p>\n<h1 id=\"简正模\"><a href=\"#简正模\" class=\"headerlink\" title=\"简正模\"></a>简正模</h1><p>当我们研究的系统不再由单一振子，而是多个振子耦合在一起时，各个振子可能会有各自不同的固有频率，此时系统内的振子如何运动？如果这个系统是孤立的，那么系统的动量守恒，所有的振子一定会按照统一的频率振动，那么这个频率是由谁来决定？我们用一个例子来说明这个问题：</p>\n<p>下图表示一个线形三原子分子 $\\rm A_2B$ ，相邻原子之间的化学键看成弹性力，它的大小正比于原子离开平衡位置的距离，假设原子只做纵向振动（即振动方向始终与原子核之间连线共线），试求分子可能的纵向运动形式和相应的振动角频率。</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/Fk4cNP6wcbGvH68621OHVFdoQIVz\" alt></p>\n<p>我们假设从左到右三个原子相对平衡位置的位移分别为 $x_1,\\, x_2,\\, x_3$ ，列出它们的运动方程为<br>$$<br>\\begin{aligned}<br>    m_A \\frac{\\mathrm d^2}{\\mathrm d t^2}x_1 &amp;= -k(x_1 - x_2) \\<br>    m_B \\frac{\\mathrm d^2}{\\mathrm d t^2}x_2 &amp;= -k(x_2 - x_1) - k(x_2 - x_3) \\<br>    m_A \\frac{\\mathrm d^2}{\\mathrm d t^2}x_3 &amp;= -k(x_3 - x_2)<br>\\end{aligned}<br>$$<br>因为这是个孤立系统，所有原子的振动角频率相同，不妨设所有原子的振动角频率都是 $\\omega$ ，所以所有原子的位移可以表示为<br>$$<br>\\tilde x_i = \\tilde A_i e^{\\mathrm i \\omega t}<br>$$<br>上面的运动方程可以改写为<br>$$<br>\\begin{aligned}<br>    -\\omega^2m_A A_1 e^{\\mathrm i\\omega t} &amp;= -k(A_1 e^{\\mathrm i \\omega t} - A_2 e^{\\mathrm i\\omega t} ) \\<br>    -\\omega^2m_B A_2 e^{\\mathrm i\\omega t} &amp;= -k(2A_2 e^{\\mathrm i \\omega t} - (A_1+A_3) e^{\\mathrm i\\omega t} ) \\<br>    -\\omega^2m_A A_3 e^{\\mathrm i\\omega t} &amp;= -k(A_3 e^{\\mathrm i \\omega t} - A_2 e^{\\mathrm i\\omega t} ) \\<br>\\end{aligned}<br>$$<br>经过化简可以得到<br>$$<br>\\begin{cases}<br>    (\\omega^2-\\frac{k}{m_A})A_1 + \\dfrac{k}{m_A}A_2 = 0 \\<br>    \\dfrac{k}{m_B}A_1 + (\\omega^2-\\dfrac{2k}{m_B})A_2 + \\dfrac{k}{m_B}A_3 = 0 \\<br>    \\dfrac{k}{m_A}A_2 + (\\omega^2-\\dfrac{k}{m_A})A_3 = 0<br>\\end{cases}<br>$$</p>\n<p>上述方程组有解得条件是<br>$$<br>\\begin{vmatrix}<br>    (\\omega^2-\\frac{k}{m_A})A_1 &amp; \\frac{k}{m_A}A_2  &amp; 0\\<br>    \\frac{k}{m_B}A_1 &amp; (\\omega^2-\\frac{2k}{m_B})A_2 &amp; \\frac{k}{m_B}A_3 \\<br>    0 &amp; \\frac{k}{m_A}A_2 &amp; (\\omega^2-\\frac{k}{m_A})A_3<br>\\end{vmatrix}<br>= 0<br>$$<br>即<br>$$<br>(\\omega^2 - \\frac{k}{m_A})^2 (\\omega^2 - \\frac{2k}{m_B}) - 2(\\omega^2 - \\frac{k}{m_A})\\frac{k^2}{m_A m_B} = 0<br>$$<br>进一步因式分解可以得到<br>$$<br>(\\omega^2 - \\frac{k}{m_A}) (\\omega^2 - \\frac{k(2m_A+m_B)}{m_A m_B})\\omega^2= 0<br>$$<br>此时 $\\omega ^2$ 有三个根，分别为 $\\frac{k}{m_A} $ ， $\\frac{k(2m_A+m_B)}{m_A m_B}$ ， $0$ 。下面对这三个根进行讨论：</p>\n<ol>\n<li>当 $\\omega^2 = \\frac{k}{m_A}$ 时，$A_1 + A_3 = 0$ 且 $A_2 = 0$ ，即中间原子不动，两边原子做做振动方向相反、振幅和频率相同的运动；</li>\n<li>当 $\\omega^2 = \\frac{k(2m_A + m_B)}{m_A m_B}$ 时，$A_1 = A_3 = -\\frac{m_B}{2m_A} A_2$ ，即两边原子运动状态相同，但与中间原子的运动方向相反，振幅之比为 $A_1 : A_2 = m_B: 2m_A$ ；</li>\n<li>当 $\\omega^2 = 0$ 时，$A_1 = A_2 = A_3$ ，系统做刚性平动。</li>\n</ol>\n<p>上面 $\\omega^2$ 取三个根时，系统分别对应了三个不同的状态，其中除了 $\\omega^2 = 0$ 外，其他两个状态都各自表明了一种特殊的振动模式，这些振动模式都对应了各自唯一的一个频率，称为<strong>简正频率</strong>。</p>\n<p>一般来说，简正模时系统中各自由度运动的某种特殊组合，是整个系统的集体运动方式，不是其中个别振子的行为所决定的。</p>\n<h1 id=\"来两道题小试牛刀\"><a href=\"#来两道题小试牛刀\" class=\"headerlink\" title=\"来两道题小试牛刀\"></a>来两道题小试牛刀</h1><h2 id=\"求下面系统的简正模\"><a href=\"#求下面系统的简正模\" class=\"headerlink\" title=\"求下面系统的简正模\"></a>求下面系统的简正模</h2><p>三个质量为 $m$ 的质点和三个劲度系数为 $k$ 的弹簧串连在一起，紧套在光滑的水平圆周上（如下图）。求此系统的简正模（即简正频率和运动方式）。</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/FvHP-LeH9BzMuBco5XNJP2darkrV\" width=\"400\"></p>\n<p>列出三个质点的动力学方程：<br>$$<br>\\begin{aligned}<br>    m\\frac{\\mathrm d^2}{\\mathrm dt^2} x_1&amp;= -k(2x_1 - x_2 - x_3) = k(x_2 + x_3 - 2x_1) \\<br>    m\\frac{\\mathrm d^2}{\\mathrm dt^2} x_2&amp;= -k(2x_2 - x_1 - x_3) = k(x_1 + x_3 - 2x_2) \\<br>    m\\frac{\\mathrm d^2}{\\mathrm dt^2} x_3&amp;= -k(2x_3 - x_1 - x_2) = k(x_1 + x_2 - 2x_3)<br>\\end{aligned}<br>$$<br>不妨设 $x_i = \\tilde{A_i}e^{\\mathrm i \\omega t}$ ，上面式子改写为<br>$$<br>\\begin{aligned}<br>    -\\omega^2 m A_1 e^{\\mathrm i\\omega t} &amp;= k( A_2 e^{\\mathrm i\\omega t} + A_3 e^{\\mathrm i\\omega t} - 2A_1 e^{\\mathrm i\\omega t} ) \\<br>    -\\omega^2 m A_2 e^{\\mathrm i\\omega t} &amp;= k( A_1 e^{\\mathrm i\\omega t} + A_3 e^{\\mathrm i\\omega t} - 2A_2 e^{\\mathrm i\\omega t} ) \\<br>    -\\omega^2 m A_3 e^{\\mathrm i\\omega t} &amp;= k( A_1 e^{\\mathrm i\\omega t} + A_2 e^{\\mathrm i\\omega t} - 2A_3 e^{\\mathrm i\\omega t} )<br>\\end{aligned}<br>$$<br>经过化简，上面式子变为<br>$$<br>\\begin{aligned}<br>    ( \\omega^2-\\frac{2k}{m} )A_1 + \\frac{k}{m}A_2 + \\frac{k}{m}A_3 &amp;= 0\\<br>    \\frac{k}{m}A_1 + ( \\omega^2-\\frac{2k}{m} )A_2 + \\frac{k}{m}A_3 &amp;= 0\\<br>    \\frac{k}{m}A_1 + \\frac{k}{m}A_2 + ( \\omega^2-\\frac{2k}{m} )A_2 &amp;= 0<br>\\end{aligned}<br>$$</p>\n<p>上述式子成立的条件是矩阵对应的行列式值为零<br>$$<br>\\begin{vmatrix}<br>    ( \\omega^2-\\frac{2k}{m} )A_1 &amp; \\frac{k}{m}A_2 &amp; \\frac{k}{m}A_3 \\<br>    \\frac{k}{m}A_1 &amp; ( \\omega^2-\\frac{2k}{m} )A_2 &amp; \\frac{k}{m}A_3 \\<br>    \\frac{k}{m}A_1 &amp; \\frac{k}{m}A_2 &amp; ( \\omega^2-\\frac{2k}{m} )A_3<br>\\end{vmatrix}<br>= 0<br>$$</p>\n<p>注意到这是一个特殊的行列式，使用结论可以<del>口算</del>很快算出<br>$$<br>(\\omega^2 - \\frac{2k}{m} + 2\\frac{k}{m}) (\\omega^2 -\\frac{2k}{m} - \\frac{k}{m}) ^2 = 0<br>$$<br>得到三个根 $\\omega_1 = 0$ ，$\\omega_2 = \\omega_3 = \\sqrt{\\frac{3k}{m}}$ 。</p>\n<p>这三个根代入方程组都得出<br>$$<br>A_1 = A_2 = A_3<br>$$<br>即当这个系统趋于稳定时，三个质点的运动是一致的，整个系统做刚体的平动（绕圆盘圆心转动）。</p>\n<h2 id=\"求下面振子的周期公式\"><a href=\"#求下面振子的周期公式\" class=\"headerlink\" title=\"求下面振子的周期公式\"></a>求下面振子的周期公式</h2><p>竖直悬挂的弹簧振子，若弹簧本身质量不可忽略，试推导其周期公式。假设弹簧的质量不可忽略，k为其劲度系数，M为系于其上物体的质量（假设弹簧的伸长量由上到下与长度成正比地增加）。</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/FvTsySEGcax0xAS0Xa7MC3bQuS3q\" width=\"150\"></p>\n<p>假设弹簧长度为 $L$ ，任意时刻 $M$ 的运动速度为 $v = v(t)$ ，则弹簧单位长度的质量为 $\\mu = \\frac{m}{L}$ ，又假设 $M$ 运动时弹簧上质点的速度是线性增加的，此时计算弹簧运动时的动能<br>$$<br>\\begin{aligned}<br>V_{\\rm spring} &amp;= \\int\\mathrm d \\bigg(\\frac{1}{2} m v^2 \\bigg) \\<br>        &amp;= \\frac{1}{2} \\int_{0}^{L} \\bigg(\\mu \\mathrm dl \\cdot (v\\frac{l}{L})^2\\bigg) \\<br>        &amp;= \\frac{mv^2}{2L^3} \\int_{0}^{L} l^2 \\mathrm d l \\<br>        &amp;= \\frac{1}{2}\\cdot \\frac{m}{3} v^2<br>\\end{aligned}<br>$$<br> 即弹簧的运动动能相当于在其末端悬挂了一个质量为 $\\frac{m}{3}$ 的质点运动时的动能，因此这个模型可以等效为一个质量为 0 的弹簧在其末端悬挂了质量 $M + \\frac{m}{3}$ 的质点做简谐运动，套用简谐运动的角频率公式即可解出 $M$ 运动时的角频率为<br>$$<br>\\begin{aligned}<br>    \\omega &amp;= \\sqrt{ \\frac{k}{M + m/3} }\\<br>    T &amp;= \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{ \\frac{M + m/3}{k} }<br>\\end{aligned}<br>$$</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>简正模在刚开始看时还是挺费劲的，但是读了5遍左右就开始慢慢明白（大概是明白了吧，雾）了其物理含义，而在求解简正模时用到了线性代数的一点知识，算是复习了一下下线代，心里还是蛮开心的。最后那道题在看钱伯初先生的论文时对平均速度的求解目的不是很理解，后来经物吧腿娘大佬的正确指导下弄明白了如何应对这个问题。</p>\n<p>关于振动，不出意外，本渣应该会写两篇浅析，这是第一篇，第二篇已经在计划中，希望有生之年可以见到。</p>\n<p>以上</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"何为简谐振动\"><a href=\"#何为简谐振动\" class=\"headerlink\" title=\"何为简谐振动\"></a>何为简谐振动</h1><p>引用 Wikipedia 上的<a href=\"https://zh.wikipedia.org/zh-cn/%E7%B0%A1%E8%AB%A7%E9%81%8B%E5%8B%95\" target=\"_blank\" rel=\"noopener\">定义</a>，<strong>简谐运动</strong>（或<strong>简谐振动</strong>、<strong>谐振</strong>、<strong>SHM</strong>（Simple Harmonic Motion））既是最基本也是最简单的一种<a href=\"https://zh.wikipedia.org/wiki/%E6%8C%AF%E5%8A%A8\" target=\"_blank\" rel=\"noopener\">机械振动</a>。当某物体进行简谐运动时，物体所受的<a href=\"https://zh.wikipedia.org/wiki/%E5%8A%9B\" target=\"_blank\" rel=\"noopener\">力</a>跟<a href=\"https://zh.wikipedia.org/wiki/%E4%BD%8D%E7%A7%BB\" target=\"_blank\" rel=\"noopener\">位移</a>成正比，并且力总是指向平衡位置。</p>\n<p>典型的例子即为水平面内的弹簧振子，如下图所示（忽略一切摩擦）</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/Fkz3IAKLr9KLnGExvHe6RlsOB_Pr\" alt></p>\n<p>如果用 $F$ 表示物体受到的回复力，用 $x$ 表示小球相对于平衡位置的位移，由胡克定律，小球受力总有<br>$$<br>F = -kx<br>$$<br>简谐振动系统的机械能守恒（即动能和弹簧的势能之间来回转换，动能和势能之和不变）。</p>\n<h1 id=\"动力学方程\"><a href=\"#动力学方程\" class=\"headerlink\" title=\"动力学方程\"></a>动力学方程</h1><h2 id=\"普通表述\"><a href=\"#普通表述\" class=\"headerlink\" title=\"普通表述\"></a>普通表述</h2><p>由牛顿第二定律<br>$$<br>F = ma<br>$$<br>因此<br>$$<br>ma + kx = 0<br>$$<br>即<br>$$<br>m\\ddot{x} + kx = 0<br>$$<br>解上面的方程（这是一个很简单的二阶线性齐次常系数微分方程，$mr^2 + k = 0$，推出 $r = \\pm i\\sqrt{\\frac{k}{m}}$，直接代入解的表达式并用欧拉公式展开即可），可以得到<br>$$<br>\\begin{aligned}<br>x &amp;= c_1 \\cos(\\omega t) + c_2 \\sin(\\omega t)\\<br> &amp;= A\\cos(\\omega t + \\varphi_0)<br>\\end{aligned}<br>$$</p>\n<p>式中<br>$$<br>\\begin{aligned}<br>\\omega &amp;= \\sqrt{\\frac km} &amp;&amp; \\omega 即为角频率\\<br>    A &amp;= \\sqrt{c_1^2 + c_2^2} &amp;&amp; A即为振幅\\<br>    \\varphi_0 &amp;= -\\tan\\frac{c_2}{c_1}&amp; &amp; \\varphi_0 即为初相位<br>\\end{aligned}<br>$$</p>\n<p>显然，从 $x(t)$ 的表达式可以看出，小球的运动呈现一个周期性，周期为<br>$$<br>T = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac mk}<br>$$</p>\n<h2 id=\"复数表述\"><a href=\"#复数表述\" class=\"headerlink\" title=\"复数表述\"></a>复数表述</h2><p>这时 $x = A\\cos(\\omega t + \\varphi_0)$ 可以用一个复数表示（欧拉公式：$e^{\\mathrm i \\theta} = \\cos \\theta + \\mathrm i \\sin \\theta$，欧拉公式的推导借助了麦克劳林公式展开，感兴趣可以看<a href=\"https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%85%AC%E5%BC%8F\" target=\"_blank\" rel=\"noopener\">这里</a>）<br>$$<br>\\begin{aligned}<br>x = \\tilde{s}(t) &amp;= Ae^{\\mathrm i(\\omega t + \\varphi_0)} \\<br>  &amp; = Ae^{\\mathrm i\\omega t}\\cdot e^{\\mathrm i\\varphi_0} \\<br>  &amp; = (Ae^{\\mathrm i\\varphi_0})\\cdot e^{\\mathrm i\\omega t} \\<br>  &amp; = \\tilde{A} e^{\\mathrm i\\omega t}<br>\\end{aligned}<br>$$<br>（为什么要用复数呢？<del>因为可以装X，</del>因为后面涉及求简正模问题时使用复数会变得非常简单）</p>\n<p>此时小球的速度和加速度可以表示为<br>$$<br>\\begin{aligned}<br>    \\tilde{v} &amp;= \\frac{\\mathrm d \\tilde{s}}{\\mathrm d t} = \\frac{\\mathrm d}{\\mathrm dt} \\tilde{A} e^{\\mathrm i\\omega t}  = \\mathrm i \\omega \\tilde{A} e^{\\mathrm i\\omega t} = \\mathrm i\\omega \\tilde{s}\\<br>    \\tilde{a} &amp;= \\frac{\\mathrm d^2 \\tilde{s}}{\\mathrm d t^2} = \\frac{\\mathrm d^2}{\\mathrm d t^2} \\tilde{A} e^{\\mathrm i\\omega t} =  -{\\omega}^2 \\tilde{A} e^{\\mathrm i\\omega t}  = -{\\omega}^2 \\tilde{s}<br>\\end{aligned}<br>$$<br>显然，这种方式求导起来比普通表示法要方便很多。</p>\n<h1 id=\"能量转化分析\"><a href=\"#能量转化分析\" class=\"headerlink\" title=\"能量转化分析\"></a>能量转化分析</h1><p>这个系统中值得我们关注的能量有两种：弹簧的弹性势能 $T(x)$ 和小球的动能 $V(x)$。</p>\n<h2 id=\"对动能分析\"><a href=\"#对动能分析\" class=\"headerlink\" title=\"对动能分析\"></a>对动能分析</h2><p>显然有<br>$$<br>V(s) = \\frac 12 m\\dot{s}^2 = -\\frac 12 \\omega^2 \\tilde{s}^2<br>$$<br><del>没什么好说的</del></p>\n<h2 id=\"对势能分析\"><a href=\"#对势能分析\" class=\"headerlink\" title=\"对势能分析\"></a>对势能分析</h2><p><strong>注意，这一部分所分析的势能都是以平衡位置为零势能点所算起的势能。</strong></p>\n<p>弹簧的势能有<br>$$<br>T(s) = \\frac 12 k s^2<br>$$<br>对势能求二阶导<br>$$<br>\\frac{\\mathrm d^2}{\\mathrm ds^2} T(s) =  \\frac{\\mathrm d^2}{\\mathrm ds^2} \\bigg(\\frac12 ks^2 \\bigg)= k<br>$$<br>我们发现势能对位移求二阶导后恰好等于劲度系数，因此有<br>$$<br>\\begin{aligned}<br>    T &amp;= \\frac 12 T’’ s^2 \\<br>    f_{\\rm 回} &amp;= -T’’s<br>\\end{aligned}<br>$$<br>此时，我们上一小节所讲的所有公式中的振幅 $A$ 和 角频率 $\\omega$ 都可以用势能的二阶导数表示<br>$$<br>\\begin{aligned}<br>    A = s_{\\max} &amp;= \\sqrt{ \\frac{2E}{k} } = \\sqrt{ \\frac{2E}{T’’} } \\<br>        \\omega    &amp;= \\sqrt{ \\frac{k}{m} } = \\sqrt{ \\frac{T’’}{m} }<br>\\end{aligned}<br>$$</p>\n<p>根据这个条件，当我们遇到某些特殊情况而无法很轻松求出 $k$ ，但 $T$ 又显而易见时，我们可以使用上面的式子来计算振动的相关参数（比如摆）。</p>\n<h1 id=\"简正模\"><a href=\"#简正模\" class=\"headerlink\" title=\"简正模\"></a>简正模</h1><p>当我们研究的系统不再由单一振子，而是多个振子耦合在一起时，各个振子可能会有各自不同的固有频率，此时系统内的振子如何运动？如果这个系统是孤立的，那么系统的动量守恒，所有的振子一定会按照统一的频率振动，那么这个频率是由谁来决定？我们用一个例子来说明这个问题：</p>\n<p>下图表示一个线形三原子分子 $\\rm A_2B$ ，相邻原子之间的化学键看成弹性力，它的大小正比于原子离开平衡位置的距离，假设原子只做纵向振动（即振动方向始终与原子核之间连线共线），试求分子可能的纵向运动形式和相应的振动角频率。</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/Fk4cNP6wcbGvH68621OHVFdoQIVz\" alt></p>\n<p>我们假设从左到右三个原子相对平衡位置的位移分别为 $x_1,\\, x_2,\\, x_3$ ，列出它们的运动方程为<br>$$<br>\\begin{aligned}<br>    m_A \\frac{\\mathrm d^2}{\\mathrm d t^2}x_1 &amp;= -k(x_1 - x_2) \\<br>    m_B \\frac{\\mathrm d^2}{\\mathrm d t^2}x_2 &amp;= -k(x_2 - x_1) - k(x_2 - x_3) \\<br>    m_A \\frac{\\mathrm d^2}{\\mathrm d t^2}x_3 &amp;= -k(x_3 - x_2)<br>\\end{aligned}<br>$$<br>因为这是个孤立系统，所有原子的振动角频率相同，不妨设所有原子的振动角频率都是 $\\omega$ ，所以所有原子的位移可以表示为<br>$$<br>\\tilde x_i = \\tilde A_i e^{\\mathrm i \\omega t}<br>$$<br>上面的运动方程可以改写为<br>$$<br>\\begin{aligned}<br>    -\\omega^2m_A A_1 e^{\\mathrm i\\omega t} &amp;= -k(A_1 e^{\\mathrm i \\omega t} - A_2 e^{\\mathrm i\\omega t} ) \\<br>    -\\omega^2m_B A_2 e^{\\mathrm i\\omega t} &amp;= -k(2A_2 e^{\\mathrm i \\omega t} - (A_1+A_3) e^{\\mathrm i\\omega t} ) \\<br>    -\\omega^2m_A A_3 e^{\\mathrm i\\omega t} &amp;= -k(A_3 e^{\\mathrm i \\omega t} - A_2 e^{\\mathrm i\\omega t} ) \\<br>\\end{aligned}<br>$$<br>经过化简可以得到<br>$$<br>\\begin{cases}<br>    (\\omega^2-\\frac{k}{m_A})A_1 + \\dfrac{k}{m_A}A_2 = 0 \\<br>    \\dfrac{k}{m_B}A_1 + (\\omega^2-\\dfrac{2k}{m_B})A_2 + \\dfrac{k}{m_B}A_3 = 0 \\<br>    \\dfrac{k}{m_A}A_2 + (\\omega^2-\\dfrac{k}{m_A})A_3 = 0<br>\\end{cases}<br>$$</p>\n<p>上述方程组有解得条件是<br>$$<br>\\begin{vmatrix}<br>    (\\omega^2-\\frac{k}{m_A})A_1 &amp; \\frac{k}{m_A}A_2  &amp; 0\\<br>    \\frac{k}{m_B}A_1 &amp; (\\omega^2-\\frac{2k}{m_B})A_2 &amp; \\frac{k}{m_B}A_3 \\<br>    0 &amp; \\frac{k}{m_A}A_2 &amp; (\\omega^2-\\frac{k}{m_A})A_3<br>\\end{vmatrix}<br>= 0<br>$$<br>即<br>$$<br>(\\omega^2 - \\frac{k}{m_A})^2 (\\omega^2 - \\frac{2k}{m_B}) - 2(\\omega^2 - \\frac{k}{m_A})\\frac{k^2}{m_A m_B} = 0<br>$$<br>进一步因式分解可以得到<br>$$<br>(\\omega^2 - \\frac{k}{m_A}) (\\omega^2 - \\frac{k(2m_A+m_B)}{m_A m_B})\\omega^2= 0<br>$$<br>此时 $\\omega ^2$ 有三个根，分别为 $\\frac{k}{m_A} $ ， $\\frac{k(2m_A+m_B)}{m_A m_B}$ ， $0$ 。下面对这三个根进行讨论：</p>\n<ol>\n<li>当 $\\omega^2 = \\frac{k}{m_A}$ 时，$A_1 + A_3 = 0$ 且 $A_2 = 0$ ，即中间原子不动，两边原子做做振动方向相反、振幅和频率相同的运动；</li>\n<li>当 $\\omega^2 = \\frac{k(2m_A + m_B)}{m_A m_B}$ 时，$A_1 = A_3 = -\\frac{m_B}{2m_A} A_2$ ，即两边原子运动状态相同，但与中间原子的运动方向相反，振幅之比为 $A_1 : A_2 = m_B: 2m_A$ ；</li>\n<li>当 $\\omega^2 = 0$ 时，$A_1 = A_2 = A_3$ ，系统做刚性平动。</li>\n</ol>\n<p>上面 $\\omega^2$ 取三个根时，系统分别对应了三个不同的状态，其中除了 $\\omega^2 = 0$ 外，其他两个状态都各自表明了一种特殊的振动模式，这些振动模式都对应了各自唯一的一个频率，称为<strong>简正频率</strong>。</p>\n<p>一般来说，简正模时系统中各自由度运动的某种特殊组合，是整个系统的集体运动方式，不是其中个别振子的行为所决定的。</p>\n<h1 id=\"来两道题小试牛刀\"><a href=\"#来两道题小试牛刀\" class=\"headerlink\" title=\"来两道题小试牛刀\"></a>来两道题小试牛刀</h1><h2 id=\"求下面系统的简正模\"><a href=\"#求下面系统的简正模\" class=\"headerlink\" title=\"求下面系统的简正模\"></a>求下面系统的简正模</h2><p>三个质量为 $m$ 的质点和三个劲度系数为 $k$ 的弹簧串连在一起，紧套在光滑的水平圆周上（如下图）。求此系统的简正模（即简正频率和运动方式）。</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/FvHP-LeH9BzMuBco5XNJP2darkrV\" width=\"400\"></p>\n<p>列出三个质点的动力学方程：<br>$$<br>\\begin{aligned}<br>    m\\frac{\\mathrm d^2}{\\mathrm dt^2} x_1&amp;= -k(2x_1 - x_2 - x_3) = k(x_2 + x_3 - 2x_1) \\<br>    m\\frac{\\mathrm d^2}{\\mathrm dt^2} x_2&amp;= -k(2x_2 - x_1 - x_3) = k(x_1 + x_3 - 2x_2) \\<br>    m\\frac{\\mathrm d^2}{\\mathrm dt^2} x_3&amp;= -k(2x_3 - x_1 - x_2) = k(x_1 + x_2 - 2x_3)<br>\\end{aligned}<br>$$<br>不妨设 $x_i = \\tilde{A_i}e^{\\mathrm i \\omega t}$ ，上面式子改写为<br>$$<br>\\begin{aligned}<br>    -\\omega^2 m A_1 e^{\\mathrm i\\omega t} &amp;= k( A_2 e^{\\mathrm i\\omega t} + A_3 e^{\\mathrm i\\omega t} - 2A_1 e^{\\mathrm i\\omega t} ) \\<br>    -\\omega^2 m A_2 e^{\\mathrm i\\omega t} &amp;= k( A_1 e^{\\mathrm i\\omega t} + A_3 e^{\\mathrm i\\omega t} - 2A_2 e^{\\mathrm i\\omega t} ) \\<br>    -\\omega^2 m A_3 e^{\\mathrm i\\omega t} &amp;= k( A_1 e^{\\mathrm i\\omega t} + A_2 e^{\\mathrm i\\omega t} - 2A_3 e^{\\mathrm i\\omega t} )<br>\\end{aligned}<br>$$<br>经过化简，上面式子变为<br>$$<br>\\begin{aligned}<br>    ( \\omega^2-\\frac{2k}{m} )A_1 + \\frac{k}{m}A_2 + \\frac{k}{m}A_3 &amp;= 0\\<br>    \\frac{k}{m}A_1 + ( \\omega^2-\\frac{2k}{m} )A_2 + \\frac{k}{m}A_3 &amp;= 0\\<br>    \\frac{k}{m}A_1 + \\frac{k}{m}A_2 + ( \\omega^2-\\frac{2k}{m} )A_2 &amp;= 0<br>\\end{aligned}<br>$$</p>\n<p>上述式子成立的条件是矩阵对应的行列式值为零<br>$$<br>\\begin{vmatrix}<br>    ( \\omega^2-\\frac{2k}{m} )A_1 &amp; \\frac{k}{m}A_2 &amp; \\frac{k}{m}A_3 \\<br>    \\frac{k}{m}A_1 &amp; ( \\omega^2-\\frac{2k}{m} )A_2 &amp; \\frac{k}{m}A_3 \\<br>    \\frac{k}{m}A_1 &amp; \\frac{k}{m}A_2 &amp; ( \\omega^2-\\frac{2k}{m} )A_3<br>\\end{vmatrix}<br>= 0<br>$$</p>\n<p>注意到这是一个特殊的行列式，使用结论可以<del>口算</del>很快算出<br>$$<br>(\\omega^2 - \\frac{2k}{m} + 2\\frac{k}{m}) (\\omega^2 -\\frac{2k}{m} - \\frac{k}{m}) ^2 = 0<br>$$<br>得到三个根 $\\omega_1 = 0$ ，$\\omega_2 = \\omega_3 = \\sqrt{\\frac{3k}{m}}$ 。</p>\n<p>这三个根代入方程组都得出<br>$$<br>A_1 = A_2 = A_3<br>$$<br>即当这个系统趋于稳定时，三个质点的运动是一致的，整个系统做刚体的平动（绕圆盘圆心转动）。</p>\n<h2 id=\"求下面振子的周期公式\"><a href=\"#求下面振子的周期公式\" class=\"headerlink\" title=\"求下面振子的周期公式\"></a>求下面振子的周期公式</h2><p>竖直悬挂的弹簧振子，若弹簧本身质量不可忽略，试推导其周期公式。假设弹簧的质量不可忽略，k为其劲度系数，M为系于其上物体的质量（假设弹簧的伸长量由上到下与长度成正比地增加）。</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/FvTsySEGcax0xAS0Xa7MC3bQuS3q\" width=\"150\"></p>\n<p>假设弹簧长度为 $L$ ，任意时刻 $M$ 的运动速度为 $v = v(t)$ ，则弹簧单位长度的质量为 $\\mu = \\frac{m}{L}$ ，又假设 $M$ 运动时弹簧上质点的速度是线性增加的，此时计算弹簧运动时的动能<br>$$<br>\\begin{aligned}<br>V_{\\rm spring} &amp;= \\int\\mathrm d \\bigg(\\frac{1}{2} m v^2 \\bigg) \\<br>        &amp;= \\frac{1}{2} \\int_{0}^{L} \\bigg(\\mu \\mathrm dl \\cdot (v\\frac{l}{L})^2\\bigg) \\<br>        &amp;= \\frac{mv^2}{2L^3} \\int_{0}^{L} l^2 \\mathrm d l \\<br>        &amp;= \\frac{1}{2}\\cdot \\frac{m}{3} v^2<br>\\end{aligned}<br>$$<br> 即弹簧的运动动能相当于在其末端悬挂了一个质量为 $\\frac{m}{3}$ 的质点运动时的动能，因此这个模型可以等效为一个质量为 0 的弹簧在其末端悬挂了质量 $M + \\frac{m}{3}$ 的质点做简谐运动，套用简谐运动的角频率公式即可解出 $M$ 运动时的角频率为<br>$$<br>\\begin{aligned}<br>    \\omega &amp;= \\sqrt{ \\frac{k}{M + m/3} }\\<br>    T &amp;= \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{ \\frac{M + m/3}{k} }<br>\\end{aligned}<br>$$</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>简正模在刚开始看时还是挺费劲的，但是读了5遍左右就开始慢慢明白（大概是明白了吧，雾）了其物理含义，而在求解简正模时用到了线性代数的一点知识，算是复习了一下下线代，心里还是蛮开心的。最后那道题在看钱伯初先生的论文时对平均速度的求解目的不是很理解，后来经物吧腿娘大佬的正确指导下弄明白了如何应对这个问题。</p>\n<p>关于振动，不出意外，本渣应该会写两篇浅析，这是第一篇，第二篇已经在计划中，希望有生之年可以见到。</p>\n<p>以上</p>\n"},{"title":"在 VASP(PBE) 计算中如何优雅地踩坑？","date":"2018-03-28T09:28:20.000Z","_content":"\n> **警告**：本渣刚学 `VASP` 不久，对 `VASP` 的算法、参数不甚了解，如果有大触偶遇此文，并发现有错误，请在评论区指出或邮箱联系本渣。\n\n# 前言\n本文是本渣从 3 月初以来刚接触 `VASP` 所学技能与遇到坑的总结，以纪念我为文献中一副图而逝去的最近一星期。何为 `VASP` 以及` VASP` 能做什么？本渣只是一个刚学的菜鸡，恕不能回答，请自行 Google 解决。\n\n## VASP 的输入文件\n\n想要执行一次最简单的计算，`VASP` 需要至少4个文件，它们分别是：\n\n- `INCAR`：`VASP` 计算的**核心**文件，基本等同于本次计算的司令部。它包含了“**算什么**”、“**怎么算**”、和“**输入、输出那些**”这三个方面的内容，它的几项常用（PBE计算中）参数在后面我们会较为详细地了解到；\n- `POSCAR`：决定元胞结构的文件。它包含了元胞的格子类型、格子大小、以和格子内所有原子的种类及坐标，在弛豫时，它还可以指定哪些原子可以在哪些方向上进行[弛豫](https://en.wikipedia.org/wiki/Relaxation_(physics))，在 `VASP` 中我们无需给出原子间的成键情况，仅给出原子的坐标即可；\n- `KPOINTS`：描述 `VASP` 计算中对元胞格子的 mesh 精细度，或指定格子中哪些点的信息需要计算（？这里留个问号，本渣也不是很懂这里）；\n- `POTCAR`：赝势库，按 `POSCAR` 中元素列出顺序给出了对应元素的赝势库。\n\n**以上四个文件全为文本文件**。当然我们还可以命令 `VASP` 读取上一次的计算结果，比如 `WAVECAR` ，比如 `CHGCAR` ，用以更快地收敛或者执行某些特殊的计算。\n\n## 我们需要 VASP 的哪些输出文件？（目前为止）\n\n- `OUTCAR`：`VASP` 的计算日志，里面包含了几乎所有我们需要的结果，明文存储，随计算过程实时更新；\n- ~~`WAVECAR`：**二进制**文件，经常很大，计算结束时会将内存中的波函数平面波系数写入该文件。（我对这个文件所了解的仅有这些；~~\n- `OSZICAR`：`VASP` 计算过程中能量收敛日志，每个电子步结束时写入；\n- ~~`EIGENVAL`：`VASP` 计算出的能带信息保存在这个文件中，计算结束时被写入（可以使用 `Python` 等工具以它为输入绘制能带图，但本渣太菜，目前还没写这个小程序；~~\n- `CONTCAR`：在[弛豫](https://en.wikipedia.org/wiki/Relaxation_(physics))中，这个文件包含了`VASP`每个离子步结束时系统优化得到的元胞原子的坐标，每个离子步结束时写入；如果希望从还未收敛的弛豫结果继续计算，应直接将这个文件复制并重命名为 `POSCAR` 继续计算即可；\n- ~~`CHG` & `CHGCAR`：这个两个文件都包含了元胞中原子的位置信息，以及电荷密度信息，但 `CHG` 比 `CHGCAR` 小一些，因其不包含 `PAW one centre`；~~\n- `vasprun.xml`：XML 格式存储的 `VASP` 计算过程日志。\n- `PROCAR`：\n\n## 用 PBE 方法跑出能带图的总体步骤\n\n1. 阅读文献，列出文献所给参数（如果有的话），比如 `SIGMA` ，`ISMEAR` ，`ENCUT` ，晶格常数 $a$ 等等信息；\n2. 查阅资料，**实现文献所给结构**，关注文献的结构是否经过超胞，是否有真空层，是否考虑 vdW ；\n3. 按顺序测出适合该体系的 `SIGMA` 、`ENCUT` 、kpts 、`a` ；（如果文献中给出了这些参数可跳过这一步\n4. 对结构进行弛豫，优化出最稳定结构；\n5. 对体系进行高精度的电子自洽计算；\n6. 跑出能带图、DOS 图以及直接获得所需的能量值等。\n\n# 正文开始\n\n下面以单层 C3B 结构为例，走一遍上面的流程，看看有哪些坑。\n\n## 获取参数\n\n```fortran\na = 5.17 \t\t! 晶格常数\nEDIFF = 1.0E-6\t! 弛豫收敛条件\nEDIFFG = -0.001\t! \n\nkpts: Monkhorst\t! KPOINTS 取法\n```\n\n文献给出单层 C3B 的结构为 $D_{6h}$ ，长这样（从上往下看：\n\n![](http://owucpthrj.bkt.clouddn.com/FpGVI905Z66B8ksQjiULb3cLahCV)\n\n## 实现结构\n\n建立元胞的格子基矢（D6h 的晶型都可以这样建系，使用 Direct 模式，可以手写所有原子的坐标），并表示出各个原子的坐标\n\n![](http://owucpthrj.bkt.clouddn.com/FiQMZt8-XbO9iXes05rkDhfFjHls)\n\n所以它对应的 `POSCAR` 应为：\n\n```fortran\nC3B graphene like structure, a = 5.17               ! 注释\n   5.17                                             ! 晶格放大系数\n    0.8660254037   -0.5000000000     0.0000000000   ! 下面三行为实空间中定义元胞的三个格矢 a1, a2, a3\n    0.8660254037    0.5000000000   \t 0.0000000000\n    0.0000000000    0.0000000000     4.0000000000   ! 真空层厚度为 4.0*5.17 = 20.68A\n   B    C                                           ! 元素种类，这一行是给人看的，而不是给VASP看的\n   2    6                                           ! 对应元素的原子数目\nDirect                                              ! 以定义的格矢为基底\n    0.0000000000    0.0000000000    0.0000000000    ! B 下面皆为原子坐标，顺序与第六行指定的元素种类相同\n    0.6666666666    0.6666666666    0.0000000000    ! 要注意，仅靠POSCAR，并vasp不知道元素的具体种类，而只知道元素种类的个数。\n    0.5000000000    0.0000000000    0.0000000000    ! C\n    0.1666666666    0.1666666666    0.0000000000\n    0.0000000000    0.5000000000    0.0000000000\n    0.5000000000    0.5000000000    0.0000000000\n    0.6666666666    0.1666666666    0.0000000000\n    0.1666666666    0.6666666666    0.0000000000\n```\n\n**第一个坑**：文献中的晶格常数应该怎样对应 `POSCAR` 中的晶格参数？\n\n这取决于我们取的基底。上文中我们以相邻两个元胞的 B 原子间模长最短的矢量为基矢，因此这个这个元胞的实际晶格常数应为 $a = |\\vec{a}_i| \\times a_{POSCAR}$ ， $a$ 即为文中给出的晶格常数，可见，`POSCAR` 中的晶格参数可以理解为缩放系数，所以写完结构时应与文献对照或放入 VESTA 等软件测出原子键长看与文献是否一致。有的文献作者基底的取法特殊，所给的晶格常数也很“魔性”，但不变的是格子的实际大小、原子间距离等，以这些信息为准才能写出与文献中真正等价的结构。此外，二维结构的实现时需要层间有 20 A 左右的真空层，以避免层间不必要的相互作用，但真空层不可取太厚，否则计算量的增加不仅仅是线性的。\n\n**闲话**：如何建系是个见仁见智的问题，有人喜欢直接沿着六边形的边建系，有人喜欢像上文那样建系，但不管怎样，只要实现的结构是等价的那么建系就是没有问题的\n\n## 测出必要的参数\n\n### `INCAR` Template\n\n在测各项参数之前，先给出一个`INCAR` 模板，具体参数的含义见注释或`VASP`手册。\n\n```fortran\nC3B Mono Layer  strcut_optim\n  SYSTEM = \"C3B Mono Layer\" # 系统注释\n\nElectronic minimization\n  ISMEAR =                  # 使用Gaussian smearing，取 0 用于导体、绝缘体的计算\n  SIGMA =                   # Smearring 的宽度，在精度允许范围内应尽量大以减小计算量\n  EDIFF =                   # 收敛判据的能量判据\n  EDIFFG =                  # 收敛判据，若值为负，则为力判据；若值为正，则为能量判据\n  PREC =                    # 精确度\n  IBRION =                  # 离子移动方法，跑MD、弛豫抑或静态计算时设置不同\n  ISIF =                    # 结构优化类型\n\nIonic minimization\n  NSW =                     # 离子步数上限\n  NELMIN = \t\t\t\t\t# 电子步收敛下限\n  ENCUT =                   # 截断能，在保证收敛良好的情况下应尽量小\n  LWAVE =                   # 是否输出 WAVECAR；该值为 .FALSE. 时也会有 WAVECAR 输出，但其长度为 0\n  LCHARG =                  # 是否输出 CHGCAR\n\nBand Calcs\n  ISTART =                  # 是否从当前目录读取 WAVECAR\n  ICHARG =                  #  1: 读取 CHGCAR\n                            # 10: 不改变当前目录下的 CHGCAR\n```\n\n同时 `POTCAR` 这样获得：\n\n```bash\ncat path/to/PPs/B/POTCAR >> ./POTCAR\ncat path/to/PPs/C/POTCAR >> ./POTCAR\n```\n\n这里注意 `POTCAR` 中元素赝势的顺序应与 `POSCAR` 元素出现的顺序一致。\n\n### 测出 `SIGMA`\n\n固定`ENCUT`和kpts为较大的值`ENCUT = 600`、`kpts = 21`，固定晶格常数为“合适”值，取一系列`SIGMA`值做静态计算，当`OSZICAR`中`dE`绝对值小于 1.0 meV/atom 时取最大的 `SIGMA` 值。\n\n使用脚本如下（参考候柱锋老师的入门指南）：\n\n```bash\n#!/bin/bash\nrm WAVECAR          # 删除目录中的 WAVECAR 以免影响收敛\n# in 后面 0.20 0.10 0.05 即为 sigma 所取的值，一般从大到小取，取值越小计算量越大当发现 dE 满足要求后可以及时终止计算\nfor i in 0.20 0.10 0.05\t\ndo\n    cat > INCAR <<! # 在 INCAR 中覆盖以下内容, ! 表示cat内容终止标志，可以自定义，如用 EOF\nSYSTEM = Na adsorbed on site 1\nENCUT = 600         # 截断能取较大值\nISMEAR = 0          # Gaussian Smearing\nSIGMA = $i          # 每次循环 SIGMA 取 $i 的值\nNSW = 0             # 静态计算，离子步数为 1\nIBRION = -1\t        # 静态计算\nLWAVE = .FALSE.     # 不输出 WAVECAR，不使用上次计算所得平面波系数作为初始值\n!\n    echo \" SIGMA = $i eV \"\n    time vasp >> vasp.log   # 执行 vasp 计算，重定向输出到 vasp.log ，并对该过程计时，结果输出到 stdout\n    # OUTCAR 中 EENTRO 等于 OSZICAR 中的 dE，这里取出 dE\n    TS=`grep \"EENTRO\" OUTCAR | tail -1 | awk '{printf \"%12.6f\", $5}'`\n    echo \"$i   $TS\" >> sigma.txt     # 输出 SIGMA 和 dE 到sigma.txt\n    echo -e \"\\n\\n\"   # 换行 3 次\ndone\n```\n\n所得 sigma.txt 内容如下\n\n```\n0.20   -0.00519083\n0.10   -0.00009427\n0.05   0.00000000\n```\n\n显然，这里`SIGMA`取 0.10 即可，当然还可以在 (0.10, 0.20) 之间再取几个点，逼近使 dE < 1meV/atom 的最大 SIGMA。\n\n### 测出 `ENCUT`\n\n将上面测出的 `SIGMA = 0.10` 固定，`ENCUT` 取不同值，过程与上面类似，只是判断 `ENCUT` 取值的依据变成了两次计算结果的`TOTEN`之差绝对值小于 1 meV/atom。\n\n使用脚本如下：\n\n```bash\n#!/bin/bash\n\nrm WAVECAR\nfor i in 300 350 400 450 500 550 600 # 每次循环 ENCUT 的取值\ndo\n    cat > INCAR <<!\nSYSTEM = Na adsorbed on site 1\nENCUT = $i\nISMEAR = 0\nSIGMA = 0.10\t\t# SIGMA 取上面测得的值\nNSW = 0\nIBRION = -1\n!\n    echo \" ENCUT = $i eV \"\n    time vasp >> vasp.log\n    E=`grep \"TOTEN\" OUTCAR | tail -1 | awk '{printf \"%12.6f\", $5}'`\t# 取出 OUTCAR 中的 TOTEN\n    echo \"$i   $E\" >> encut.txt\n    echo -e \"E = $E\\n\\n\"\ndone\n```\n\n测得 `ENCUT` 取值为 450。这里 `ENCUT` 如果取值过小，后面在弛豫时很可能能量不会收敛。\n\n### 测出 kpts\n\nkpts 指的是 `KPOINTS` 里 meshgrid 的取样点数，取样越多，计算结果收敛越好，同时计算量也变大。取值条件与上面相同，即两次计算的 `TOTEN` 相差小于 1meV/atom 。\n\n**注意，不要忘了把测好的 `SIGMA` 和 `ENCUT` 写入 `INCAR`**\n\n```bash\n#!/bin/bash\n\nrm WAVECAR\nfor i in 9 13 17 21\t# kpts 取 9 13 17 21\ndo\n    cat > KPOINTS <<!\nNa adsorbed on site1 -- det_kp\n0\nMonkhorst-Pack\t\t# 只要第一个字母为 M 即可\n    $i  $i  1\t\t# 有真空层存在，z方向采样点数为 1\n    0   0   0\n!\n    echo -e \"k mesh = $i\\t$i\\t1\"; time vasp >> vasp.log\n    E=`grep \"TOTEN\" OUTCAR | tail -1 | awk '{printf \"%18.10f\", $5}'`\n    KP=`grep \"irreducible\" OUTCAR | tail -1 | awk '{printf \"%5i\", $2}'`\n    echo $i $KP $E >> det_kp.txt\ndone\n```\n\n测得 kpts 取15。\n\n**第二个坑**：`KPOINTS` 文件名一定要写对，本渣使用的 `VASP` 版本为 5.3.5，计算中如果没检测到 `KPOINTS` 文件存在，则**默认** kpts 取值为 **3** ，导致结果错误。本渣某次计算中误将 `KPOINTS` 写成了 `KPOINS` ，导致后面无论如何修改参数，结果与文献值始终相差很大。（这个东西不仅坑了我，还坑了**比那名居腿娘**(来自WHU的EE大佬)大神熬夜到 3 点多，说来惭愧……\n\n### 测出 `a` \n\n这里的`a`确切地指 `POSCAR` 中第二行的那个数值，即元胞的放大系数。因为本例中的晶格基矢模长 $|\\vec{a_1}| = |\\vec{a_2}| = 1$ ，故其放大系等于文献中的晶格常数 $a$。这里 `a` 的取值条件与上面相同。给出测试脚本如下：\n\n```bash\n#!/bin/bash\n\nrm WAVECAR\n# 晶格参数的取值应在文献值附近取点\nfor i in 4.97 5.02 5.07 5.12 5.17 5.22 5.27 5.32 5.37\ndo\n    cat > POSCAR <<!\nC3B graphene like structure, a = 5.17\n   $i\n    0.8660254037   -0.5000000000    0.0000000000\n    0.8660254037    0.5000000000    0.0000000000\n    0.0000000000    0.0000000000    3.0000000000\n   B    C\n   2    6\nDirect\n    0.0000000000    0.0000000000    0.0000000000    ! B1\n    0.6666666666    0.6666666666    0.0000000000    ! B2\n    0.5000000000    0.0000000000    0.0000000000    ! C1\n    0.1666666666    0.1666666666    0.0000000000    ! C2\n    0.0000000000    0.5000000000    0.0000000000    ! C3\n    0.5000000000    0.5000000000    0.0000000000    ! C4\n    0.6666666666    0.1666666666    0.0000000000    ! C5\n    0.1666666666    0.6666666666    0.0000000000    ! C6\n!\n\techo -e \"a = $i angstrom\"; time vasp >> vasp.log\n\tE=`grep \"TOTEN\" OUTCAR | tail -1 | awk '{printf \"%12.6f\", $5 }'`\n\tV=`grep \"volume\" OUTCAR | tail -1 | awk '{printf \"%12.4f\", $5}'`\n\tprintf \"%6.3f %10.4f %18.10f\\n\" $i $V $E >> a.txt\n\ttail -1 a.txt\ndone\n```\n\n测得 `a` 与文献值相同，5.17。这里的 `a` 还可以取得更精细一些，甚至可以到小数点后三位，这里取值越接近“真实值”，后面弛豫的过程将会越短。\n\n## 弛豫（结构优化，relaxation）\n\n弛豫中需要用到的 `INCAR` 参数有\n\n```fortran\nISMEAR = 0       ! 继承自上面的计算结果\nSIGMA = 0.1\nENCUT = 450\n\nPREC = Accurate\nEDIFF = 1.0E-6\nEDIFFG = -0.01\nIBRION = 1       ! 准牛顿法\nISIF = 3         ! 计算 force、stress tensor，对离子、晶格进行弛豫 \n\nNELMIN = 6       ! (optional) 强制每个离子步跑至少 6 电子步，提高收敛效果\nNSW = 200        ! 离子步上限为 200 步，目前本渣所算的体系中离子步数没有超过这个值的，也许是我太年轻了吧\n```\n\n这个步骤耗时最长，尤其是加上 `PREC` 后，每个电子步计算量上升很多，而为了结构的优化，离子步数的增多也使这个过程耗时不少，本例中 8 个原子的体系优化需要数个小时；本渣另外的一个体系中有 12 个原子，优化就需要 12h+ 。\n\n**第三个坑**：`EDIFFG`有正负之分，**负数**表示收敛的力判据。如果`EDIFFG`误写为正，则`EDIFF`会被覆盖，`VASP`按照`EDIFFG`进行收敛判断，结果就是收敛可能会变得很快（快上几个数量级），但是所得结构不是我们想要的结构。\n\n**第四个坑**：如果 `EDIFF`和`EDIFFG`设置过小，则计算时收敛可能会变得非常漫长，有时甚至会将结构跑散——原子间距离越来越大，这时候有三种选择：1. 提高精度，重新测出晶格常数，晶格常数可以精确到 0.001；2. 放宽收敛判据； 3. `IBRION` 取 2 （如果你对这个结构是否稳定没有信心的话。\n\n## 高精度的电子自洽计算（SCF）\n\n进行高精度的电子自洽计算是为了得到体系的电荷分布，同时也为后面计算能带提供数据。\n\n这一步需要**将 relaxation 得到的 CONTCAR 复制到 SCF 计算目录下，并重命名为 POSCAR** ，`INCAR` 内容相似，仅将弛豫相关参数修改即可，`INCAR` 如下\n\n```fortran\nC3B Mono Layer  strcut_optim\n  SYSTEM = \"C3B Mono Layer\" # System Name\n\nElectronic minimization\n  ISMEAR = 0                # Toggle Gaussian Method, complete later\n  SIGMA = 0.1               # Broadening in eV -4-tet-1-fermi 0-gaus\n  EDIFF = 1.E-6             # Energy tolerance eV/atom\n#  EDIFFG = -0.01            # Force tolerance\n  PREC = Accurate           # Accuracy\n  IBRION = -1               # quasi-Newton algorithm\n#  ISIF = 3                  # optim totally: volume, stress, force, ion, shape\n\nIonic minimization\n  NSW = 0                   # Converge steps, must set\n  ENCUT = 450               # components beyond ENCUT are 'removed' from the projection\n                            # operators\n  LWAVE = .TRUE.            # Output WAVECAR\n  LCHARG = .TRUE.           # Output density of charge to CHG and CHGCAR\n  NCORE = 4\n```\n\n由于默认输出 `CHGCAR` ， `INCAR` 中的 `LCHARG` 可以不写。\n\n## 计算能带（band）\n\n**复制 SCF 计算所得 CHGCAR 到 band 计算目录下。**\n\n我们需要重写 `KPOINTS` ，之前的 `KPOINTS` 一直是系统帮助我们在布里渊区采样，现在我们想要得到布里渊区某一路径上能带的能量变化，则需要在 `KPOINTS` 指定出路径。\n\n根据 [DOI:10.1016/j.commatsci.2010.05.010](https://arxiv.org/abs/1004.2974) 后面所给资料提示选择对应的布里渊区 K 点路径（注意文中基矢的取法是否与自己一致，否则需要重新画出布里渊区，找出对应的 K 点。这里在寻找 K 点时可以借助 [XCrysDen](http://www.xcrysden.org/) ，选择 K-Point path 即可\n\n![这里取 Gamma -> K -> M -> Gamma](http://owucpthrj.bkt.clouddn.com/FpmnmrDYGQOgi2NLIPUvy31t0c4p)\n\n写出 `KPOINTS` 如下：\n\n```fortran\nK-POINTS    C3B Mono Layer Bands\t! 注释行\n    40\t\t\t\t\t\t\t\t! 每两个K点之间取样点数\nLine-mode\t\t\t\t\t\t\t! Line-mode，区别于自动取样模式，跑能带专用\nRec\t\t\t\t\t\t\t\t\t! 在倒空间内取点\n    0       0       0   \t\t\t! Gamma\n    0.33333 0.66666 0   \t\t\t! K\n\n    0.33333 0.66666 0   \t\t\t! K\n    0.5     0.5     0   \t\t\t! M\n\n    0.5     0.5     0   \t\t\t! M\n    0       0       0   \t\t\t! Gamma\n```\n\n同时在 `INCAR` 中加上 `ICHARG = 11` 以读取 SCF 所得 `CHGCAR` 进行能带计算。\n\n最后，取所得 `vasprun.xml` 导入 `p4vasp` 进行绘制能带图。如果读者有兴趣可以以 `EIGENVAL`  文件为输入自己实现绘制band的程序（不会很难）。\n\n> 跑能带的感觉就和抽卡/开箱是一样的，你永远也不知道下一个体系的 band 会是什么鸟样。\n\n跑出的能带是这个样子\n\n![](http://owucpthrj.bkt.clouddn.com/Fodl8Omy6tyxekWIF6pAxHI_lPkN)\n\n文献中的截图是这个样子的\n\n![](http://owucpthrj.bkt.clouddn.com/Fp0bJ1vUyw-dm2uxoVXt61hm6ka_)\n\n这里解释一下，本渣最初在跑 band 时 K 点取的路径和文献不同，所以两幅图基本等于对方水平翻转所得，但本文中所给 `KPOINTS` 里 K 点路径与文献是相符的。细心的大神已经看出两幅图中上图似乎向下平移了一部分，这可能是费米能级的取值差异所致，由于本渣水平太低，姑且只能这样理解了。\n\n## 计算态密度（\bDOS）\n\n如果阅读过文献的话，我们会发现文献中经常和能带图一起出现的还有 *态密度* 图。何为态密度\b？[Wikipedia](https://zh.wikipedia.org/zh-hans/%E7%8A%B6%E6%80%81%E5%AF%86%E5%BA%A6) 上的解释为某一能量周围单位区间内的微观状态数量。具体到本文，\b\b上面的微观状态\b便是\b指占据某能级的电子态。\n\n\n# 论检查输入文件正确性的重要性\n\n这里的输入文件指 `VASP` 计算时需要用到的文件，如`INCAR`、`POSCAR`、`POTCAR`、`KPOINTS`、`CHGCAR`等。\n\n1. 文件名是否正确。我知道很多人在 `bash` 中喜欢用 Tab 补全，这对提高命令输入效率非常有效，但同时也降低了我们检查文件名正确性的机会，上文中提到的 `KPOINS` 错误就是因为一直使用 Tab 补全而使它一直被继承到跑出 band ，还不止坑了自己，多么可笑；\n2. 脚本中重定向输出的文件名是否与需求一致。当使用上一次计算的脚本进行修改时本渣很容易忘了修改输出重定向的目标，从而导致 `POSCAR` 的内容被输出到 `KPOINTS` 里，这时 `VASP` 会报错，遇到这种情况及时修改脚本重新提交任务即可，无非是重新排队的问题；\n3. `POTCAR` 是否与体系相对应。有的论文并不明确说出自己使用哪个 `POTCAR` ，而是这样说：\"We treated 4p, 5s, 4d orbitals of xx, and x orbitals of xxx as valence electrons…\"，这就表明我们需要考虑使用带 `_pv` 、 `_sv` 的 `POTCAR` 。**这大概是本人近期踩过的最大的坑了吧**，可以想象，如果从一开始的 `POTCAR` 就出了问题，那么后面所有的计算就都是徒劳的，而在排错时无论如何也很难将目光投向 `POTCAR` 。这里要特别感谢 **比那名居腿娘** 同学的帮助；\n4. `POSCAR` 中的晶胞是否需要超胞。有的文献中给出一个 band 图但未给出其对应的结构，本渣按照前文所给结构计算，始终无法得到与文献相符的 band 图，直到本渣使用 2x2 超胞后的结构进行计算，终于重复出和文献很接近的结果；\n5. 有时在弛豫后进行 SCF 计算时会提示对称性错误，这时需要在 `INCAR` 中指定 `SYMPREC` 的值，这个值默认为`SYMPREC = 1.0E-5`，指定时可以使用更小的值。\n\n除了上面说到的 `INCAR`、`POSCAR`、`POTCAR`、`KPOINTS`、`CHGCAR`等，有时还会用到 `WAVECAR` ，`WAVECAR` 是二进制文件，在使用 FileZilla 传送时，如果没有勾选 `binary` 选项，则传送时会按照 ASCII 编码进行传送，后果就是 `WAVECAR` 文件损坏。\n\n\n\n# 参考资料\n\n1. VASP软件包的使用入门指南——候柱锋\n2. VASP the GUIDE(April 20, 2016)——Kresse, Martijn Marsman , Jurgen Furthmuller\n3. [High-throughput electronic band structure calculations: challenges and tools](https://arxiv.org/abs/1004.2974) ——[Wahyu Setyawan](https://arxiv.org/find/cond-mat/1/au:+Setyawan_W/0/1/0/all/0/1), [Stefano Curtarolo](https://arxiv.org/find/cond-mat/1/au:+Curtarolo_S/0/1/0/all/0/1)\n\n这次 blog 就写到这里吧，反正也是为自己写的。（当然如果有大佬愿意在评论区指出其中的错误，本渣感激不尽！\n\n最后祝愿各位读到这里的菊苣，提前（\n","source":"_posts/how-to-struggle-with-vasp.md","raw":"---\ntitle: 在 VASP(PBE) 计算中如何优雅地踩坑？\ntags: VASP\ncategories:\n  - First Principle Calculation\ndate: 2018-03-28 17:28:20\n---\n\n> **警告**：本渣刚学 `VASP` 不久，对 `VASP` 的算法、参数不甚了解，如果有大触偶遇此文，并发现有错误，请在评论区指出或邮箱联系本渣。\n\n# 前言\n本文是本渣从 3 月初以来刚接触 `VASP` 所学技能与遇到坑的总结，以纪念我为文献中一副图而逝去的最近一星期。何为 `VASP` 以及` VASP` 能做什么？本渣只是一个刚学的菜鸡，恕不能回答，请自行 Google 解决。\n\n## VASP 的输入文件\n\n想要执行一次最简单的计算，`VASP` 需要至少4个文件，它们分别是：\n\n- `INCAR`：`VASP` 计算的**核心**文件，基本等同于本次计算的司令部。它包含了“**算什么**”、“**怎么算**”、和“**输入、输出那些**”这三个方面的内容，它的几项常用（PBE计算中）参数在后面我们会较为详细地了解到；\n- `POSCAR`：决定元胞结构的文件。它包含了元胞的格子类型、格子大小、以和格子内所有原子的种类及坐标，在弛豫时，它还可以指定哪些原子可以在哪些方向上进行[弛豫](https://en.wikipedia.org/wiki/Relaxation_(physics))，在 `VASP` 中我们无需给出原子间的成键情况，仅给出原子的坐标即可；\n- `KPOINTS`：描述 `VASP` 计算中对元胞格子的 mesh 精细度，或指定格子中哪些点的信息需要计算（？这里留个问号，本渣也不是很懂这里）；\n- `POTCAR`：赝势库，按 `POSCAR` 中元素列出顺序给出了对应元素的赝势库。\n\n**以上四个文件全为文本文件**。当然我们还可以命令 `VASP` 读取上一次的计算结果，比如 `WAVECAR` ，比如 `CHGCAR` ，用以更快地收敛或者执行某些特殊的计算。\n\n## 我们需要 VASP 的哪些输出文件？（目前为止）\n\n- `OUTCAR`：`VASP` 的计算日志，里面包含了几乎所有我们需要的结果，明文存储，随计算过程实时更新；\n- ~~`WAVECAR`：**二进制**文件，经常很大，计算结束时会将内存中的波函数平面波系数写入该文件。（我对这个文件所了解的仅有这些；~~\n- `OSZICAR`：`VASP` 计算过程中能量收敛日志，每个电子步结束时写入；\n- ~~`EIGENVAL`：`VASP` 计算出的能带信息保存在这个文件中，计算结束时被写入（可以使用 `Python` 等工具以它为输入绘制能带图，但本渣太菜，目前还没写这个小程序；~~\n- `CONTCAR`：在[弛豫](https://en.wikipedia.org/wiki/Relaxation_(physics))中，这个文件包含了`VASP`每个离子步结束时系统优化得到的元胞原子的坐标，每个离子步结束时写入；如果希望从还未收敛的弛豫结果继续计算，应直接将这个文件复制并重命名为 `POSCAR` 继续计算即可；\n- ~~`CHG` & `CHGCAR`：这个两个文件都包含了元胞中原子的位置信息，以及电荷密度信息，但 `CHG` 比 `CHGCAR` 小一些，因其不包含 `PAW one centre`；~~\n- `vasprun.xml`：XML 格式存储的 `VASP` 计算过程日志。\n- `PROCAR`：\n\n## 用 PBE 方法跑出能带图的总体步骤\n\n1. 阅读文献，列出文献所给参数（如果有的话），比如 `SIGMA` ，`ISMEAR` ，`ENCUT` ，晶格常数 $a$ 等等信息；\n2. 查阅资料，**实现文献所给结构**，关注文献的结构是否经过超胞，是否有真空层，是否考虑 vdW ；\n3. 按顺序测出适合该体系的 `SIGMA` 、`ENCUT` 、kpts 、`a` ；（如果文献中给出了这些参数可跳过这一步\n4. 对结构进行弛豫，优化出最稳定结构；\n5. 对体系进行高精度的电子自洽计算；\n6. 跑出能带图、DOS 图以及直接获得所需的能量值等。\n\n# 正文开始\n\n下面以单层 C3B 结构为例，走一遍上面的流程，看看有哪些坑。\n\n## 获取参数\n\n```fortran\na = 5.17 \t\t! 晶格常数\nEDIFF = 1.0E-6\t! 弛豫收敛条件\nEDIFFG = -0.001\t! \n\nkpts: Monkhorst\t! KPOINTS 取法\n```\n\n文献给出单层 C3B 的结构为 $D_{6h}$ ，长这样（从上往下看：\n\n![](http://owucpthrj.bkt.clouddn.com/FpGVI905Z66B8ksQjiULb3cLahCV)\n\n## 实现结构\n\n建立元胞的格子基矢（D6h 的晶型都可以这样建系，使用 Direct 模式，可以手写所有原子的坐标），并表示出各个原子的坐标\n\n![](http://owucpthrj.bkt.clouddn.com/FiQMZt8-XbO9iXes05rkDhfFjHls)\n\n所以它对应的 `POSCAR` 应为：\n\n```fortran\nC3B graphene like structure, a = 5.17               ! 注释\n   5.17                                             ! 晶格放大系数\n    0.8660254037   -0.5000000000     0.0000000000   ! 下面三行为实空间中定义元胞的三个格矢 a1, a2, a3\n    0.8660254037    0.5000000000   \t 0.0000000000\n    0.0000000000    0.0000000000     4.0000000000   ! 真空层厚度为 4.0*5.17 = 20.68A\n   B    C                                           ! 元素种类，这一行是给人看的，而不是给VASP看的\n   2    6                                           ! 对应元素的原子数目\nDirect                                              ! 以定义的格矢为基底\n    0.0000000000    0.0000000000    0.0000000000    ! B 下面皆为原子坐标，顺序与第六行指定的元素种类相同\n    0.6666666666    0.6666666666    0.0000000000    ! 要注意，仅靠POSCAR，并vasp不知道元素的具体种类，而只知道元素种类的个数。\n    0.5000000000    0.0000000000    0.0000000000    ! C\n    0.1666666666    0.1666666666    0.0000000000\n    0.0000000000    0.5000000000    0.0000000000\n    0.5000000000    0.5000000000    0.0000000000\n    0.6666666666    0.1666666666    0.0000000000\n    0.1666666666    0.6666666666    0.0000000000\n```\n\n**第一个坑**：文献中的晶格常数应该怎样对应 `POSCAR` 中的晶格参数？\n\n这取决于我们取的基底。上文中我们以相邻两个元胞的 B 原子间模长最短的矢量为基矢，因此这个这个元胞的实际晶格常数应为 $a = |\\vec{a}_i| \\times a_{POSCAR}$ ， $a$ 即为文中给出的晶格常数，可见，`POSCAR` 中的晶格参数可以理解为缩放系数，所以写完结构时应与文献对照或放入 VESTA 等软件测出原子键长看与文献是否一致。有的文献作者基底的取法特殊，所给的晶格常数也很“魔性”，但不变的是格子的实际大小、原子间距离等，以这些信息为准才能写出与文献中真正等价的结构。此外，二维结构的实现时需要层间有 20 A 左右的真空层，以避免层间不必要的相互作用，但真空层不可取太厚，否则计算量的增加不仅仅是线性的。\n\n**闲话**：如何建系是个见仁见智的问题，有人喜欢直接沿着六边形的边建系，有人喜欢像上文那样建系，但不管怎样，只要实现的结构是等价的那么建系就是没有问题的\n\n## 测出必要的参数\n\n### `INCAR` Template\n\n在测各项参数之前，先给出一个`INCAR` 模板，具体参数的含义见注释或`VASP`手册。\n\n```fortran\nC3B Mono Layer  strcut_optim\n  SYSTEM = \"C3B Mono Layer\" # 系统注释\n\nElectronic minimization\n  ISMEAR =                  # 使用Gaussian smearing，取 0 用于导体、绝缘体的计算\n  SIGMA =                   # Smearring 的宽度，在精度允许范围内应尽量大以减小计算量\n  EDIFF =                   # 收敛判据的能量判据\n  EDIFFG =                  # 收敛判据，若值为负，则为力判据；若值为正，则为能量判据\n  PREC =                    # 精确度\n  IBRION =                  # 离子移动方法，跑MD、弛豫抑或静态计算时设置不同\n  ISIF =                    # 结构优化类型\n\nIonic minimization\n  NSW =                     # 离子步数上限\n  NELMIN = \t\t\t\t\t# 电子步收敛下限\n  ENCUT =                   # 截断能，在保证收敛良好的情况下应尽量小\n  LWAVE =                   # 是否输出 WAVECAR；该值为 .FALSE. 时也会有 WAVECAR 输出，但其长度为 0\n  LCHARG =                  # 是否输出 CHGCAR\n\nBand Calcs\n  ISTART =                  # 是否从当前目录读取 WAVECAR\n  ICHARG =                  #  1: 读取 CHGCAR\n                            # 10: 不改变当前目录下的 CHGCAR\n```\n\n同时 `POTCAR` 这样获得：\n\n```bash\ncat path/to/PPs/B/POTCAR >> ./POTCAR\ncat path/to/PPs/C/POTCAR >> ./POTCAR\n```\n\n这里注意 `POTCAR` 中元素赝势的顺序应与 `POSCAR` 元素出现的顺序一致。\n\n### 测出 `SIGMA`\n\n固定`ENCUT`和kpts为较大的值`ENCUT = 600`、`kpts = 21`，固定晶格常数为“合适”值，取一系列`SIGMA`值做静态计算，当`OSZICAR`中`dE`绝对值小于 1.0 meV/atom 时取最大的 `SIGMA` 值。\n\n使用脚本如下（参考候柱锋老师的入门指南）：\n\n```bash\n#!/bin/bash\nrm WAVECAR          # 删除目录中的 WAVECAR 以免影响收敛\n# in 后面 0.20 0.10 0.05 即为 sigma 所取的值，一般从大到小取，取值越小计算量越大当发现 dE 满足要求后可以及时终止计算\nfor i in 0.20 0.10 0.05\t\ndo\n    cat > INCAR <<! # 在 INCAR 中覆盖以下内容, ! 表示cat内容终止标志，可以自定义，如用 EOF\nSYSTEM = Na adsorbed on site 1\nENCUT = 600         # 截断能取较大值\nISMEAR = 0          # Gaussian Smearing\nSIGMA = $i          # 每次循环 SIGMA 取 $i 的值\nNSW = 0             # 静态计算，离子步数为 1\nIBRION = -1\t        # 静态计算\nLWAVE = .FALSE.     # 不输出 WAVECAR，不使用上次计算所得平面波系数作为初始值\n!\n    echo \" SIGMA = $i eV \"\n    time vasp >> vasp.log   # 执行 vasp 计算，重定向输出到 vasp.log ，并对该过程计时，结果输出到 stdout\n    # OUTCAR 中 EENTRO 等于 OSZICAR 中的 dE，这里取出 dE\n    TS=`grep \"EENTRO\" OUTCAR | tail -1 | awk '{printf \"%12.6f\", $5}'`\n    echo \"$i   $TS\" >> sigma.txt     # 输出 SIGMA 和 dE 到sigma.txt\n    echo -e \"\\n\\n\"   # 换行 3 次\ndone\n```\n\n所得 sigma.txt 内容如下\n\n```\n0.20   -0.00519083\n0.10   -0.00009427\n0.05   0.00000000\n```\n\n显然，这里`SIGMA`取 0.10 即可，当然还可以在 (0.10, 0.20) 之间再取几个点，逼近使 dE < 1meV/atom 的最大 SIGMA。\n\n### 测出 `ENCUT`\n\n将上面测出的 `SIGMA = 0.10` 固定，`ENCUT` 取不同值，过程与上面类似，只是判断 `ENCUT` 取值的依据变成了两次计算结果的`TOTEN`之差绝对值小于 1 meV/atom。\n\n使用脚本如下：\n\n```bash\n#!/bin/bash\n\nrm WAVECAR\nfor i in 300 350 400 450 500 550 600 # 每次循环 ENCUT 的取值\ndo\n    cat > INCAR <<!\nSYSTEM = Na adsorbed on site 1\nENCUT = $i\nISMEAR = 0\nSIGMA = 0.10\t\t# SIGMA 取上面测得的值\nNSW = 0\nIBRION = -1\n!\n    echo \" ENCUT = $i eV \"\n    time vasp >> vasp.log\n    E=`grep \"TOTEN\" OUTCAR | tail -1 | awk '{printf \"%12.6f\", $5}'`\t# 取出 OUTCAR 中的 TOTEN\n    echo \"$i   $E\" >> encut.txt\n    echo -e \"E = $E\\n\\n\"\ndone\n```\n\n测得 `ENCUT` 取值为 450。这里 `ENCUT` 如果取值过小，后面在弛豫时很可能能量不会收敛。\n\n### 测出 kpts\n\nkpts 指的是 `KPOINTS` 里 meshgrid 的取样点数，取样越多，计算结果收敛越好，同时计算量也变大。取值条件与上面相同，即两次计算的 `TOTEN` 相差小于 1meV/atom 。\n\n**注意，不要忘了把测好的 `SIGMA` 和 `ENCUT` 写入 `INCAR`**\n\n```bash\n#!/bin/bash\n\nrm WAVECAR\nfor i in 9 13 17 21\t# kpts 取 9 13 17 21\ndo\n    cat > KPOINTS <<!\nNa adsorbed on site1 -- det_kp\n0\nMonkhorst-Pack\t\t# 只要第一个字母为 M 即可\n    $i  $i  1\t\t# 有真空层存在，z方向采样点数为 1\n    0   0   0\n!\n    echo -e \"k mesh = $i\\t$i\\t1\"; time vasp >> vasp.log\n    E=`grep \"TOTEN\" OUTCAR | tail -1 | awk '{printf \"%18.10f\", $5}'`\n    KP=`grep \"irreducible\" OUTCAR | tail -1 | awk '{printf \"%5i\", $2}'`\n    echo $i $KP $E >> det_kp.txt\ndone\n```\n\n测得 kpts 取15。\n\n**第二个坑**：`KPOINTS` 文件名一定要写对，本渣使用的 `VASP` 版本为 5.3.5，计算中如果没检测到 `KPOINTS` 文件存在，则**默认** kpts 取值为 **3** ，导致结果错误。本渣某次计算中误将 `KPOINTS` 写成了 `KPOINS` ，导致后面无论如何修改参数，结果与文献值始终相差很大。（这个东西不仅坑了我，还坑了**比那名居腿娘**(来自WHU的EE大佬)大神熬夜到 3 点多，说来惭愧……\n\n### 测出 `a` \n\n这里的`a`确切地指 `POSCAR` 中第二行的那个数值，即元胞的放大系数。因为本例中的晶格基矢模长 $|\\vec{a_1}| = |\\vec{a_2}| = 1$ ，故其放大系等于文献中的晶格常数 $a$。这里 `a` 的取值条件与上面相同。给出测试脚本如下：\n\n```bash\n#!/bin/bash\n\nrm WAVECAR\n# 晶格参数的取值应在文献值附近取点\nfor i in 4.97 5.02 5.07 5.12 5.17 5.22 5.27 5.32 5.37\ndo\n    cat > POSCAR <<!\nC3B graphene like structure, a = 5.17\n   $i\n    0.8660254037   -0.5000000000    0.0000000000\n    0.8660254037    0.5000000000    0.0000000000\n    0.0000000000    0.0000000000    3.0000000000\n   B    C\n   2    6\nDirect\n    0.0000000000    0.0000000000    0.0000000000    ! B1\n    0.6666666666    0.6666666666    0.0000000000    ! B2\n    0.5000000000    0.0000000000    0.0000000000    ! C1\n    0.1666666666    0.1666666666    0.0000000000    ! C2\n    0.0000000000    0.5000000000    0.0000000000    ! C3\n    0.5000000000    0.5000000000    0.0000000000    ! C4\n    0.6666666666    0.1666666666    0.0000000000    ! C5\n    0.1666666666    0.6666666666    0.0000000000    ! C6\n!\n\techo -e \"a = $i angstrom\"; time vasp >> vasp.log\n\tE=`grep \"TOTEN\" OUTCAR | tail -1 | awk '{printf \"%12.6f\", $5 }'`\n\tV=`grep \"volume\" OUTCAR | tail -1 | awk '{printf \"%12.4f\", $5}'`\n\tprintf \"%6.3f %10.4f %18.10f\\n\" $i $V $E >> a.txt\n\ttail -1 a.txt\ndone\n```\n\n测得 `a` 与文献值相同，5.17。这里的 `a` 还可以取得更精细一些，甚至可以到小数点后三位，这里取值越接近“真实值”，后面弛豫的过程将会越短。\n\n## 弛豫（结构优化，relaxation）\n\n弛豫中需要用到的 `INCAR` 参数有\n\n```fortran\nISMEAR = 0       ! 继承自上面的计算结果\nSIGMA = 0.1\nENCUT = 450\n\nPREC = Accurate\nEDIFF = 1.0E-6\nEDIFFG = -0.01\nIBRION = 1       ! 准牛顿法\nISIF = 3         ! 计算 force、stress tensor，对离子、晶格进行弛豫 \n\nNELMIN = 6       ! (optional) 强制每个离子步跑至少 6 电子步，提高收敛效果\nNSW = 200        ! 离子步上限为 200 步，目前本渣所算的体系中离子步数没有超过这个值的，也许是我太年轻了吧\n```\n\n这个步骤耗时最长，尤其是加上 `PREC` 后，每个电子步计算量上升很多，而为了结构的优化，离子步数的增多也使这个过程耗时不少，本例中 8 个原子的体系优化需要数个小时；本渣另外的一个体系中有 12 个原子，优化就需要 12h+ 。\n\n**第三个坑**：`EDIFFG`有正负之分，**负数**表示收敛的力判据。如果`EDIFFG`误写为正，则`EDIFF`会被覆盖，`VASP`按照`EDIFFG`进行收敛判断，结果就是收敛可能会变得很快（快上几个数量级），但是所得结构不是我们想要的结构。\n\n**第四个坑**：如果 `EDIFF`和`EDIFFG`设置过小，则计算时收敛可能会变得非常漫长，有时甚至会将结构跑散——原子间距离越来越大，这时候有三种选择：1. 提高精度，重新测出晶格常数，晶格常数可以精确到 0.001；2. 放宽收敛判据； 3. `IBRION` 取 2 （如果你对这个结构是否稳定没有信心的话。\n\n## 高精度的电子自洽计算（SCF）\n\n进行高精度的电子自洽计算是为了得到体系的电荷分布，同时也为后面计算能带提供数据。\n\n这一步需要**将 relaxation 得到的 CONTCAR 复制到 SCF 计算目录下，并重命名为 POSCAR** ，`INCAR` 内容相似，仅将弛豫相关参数修改即可，`INCAR` 如下\n\n```fortran\nC3B Mono Layer  strcut_optim\n  SYSTEM = \"C3B Mono Layer\" # System Name\n\nElectronic minimization\n  ISMEAR = 0                # Toggle Gaussian Method, complete later\n  SIGMA = 0.1               # Broadening in eV -4-tet-1-fermi 0-gaus\n  EDIFF = 1.E-6             # Energy tolerance eV/atom\n#  EDIFFG = -0.01            # Force tolerance\n  PREC = Accurate           # Accuracy\n  IBRION = -1               # quasi-Newton algorithm\n#  ISIF = 3                  # optim totally: volume, stress, force, ion, shape\n\nIonic minimization\n  NSW = 0                   # Converge steps, must set\n  ENCUT = 450               # components beyond ENCUT are 'removed' from the projection\n                            # operators\n  LWAVE = .TRUE.            # Output WAVECAR\n  LCHARG = .TRUE.           # Output density of charge to CHG and CHGCAR\n  NCORE = 4\n```\n\n由于默认输出 `CHGCAR` ， `INCAR` 中的 `LCHARG` 可以不写。\n\n## 计算能带（band）\n\n**复制 SCF 计算所得 CHGCAR 到 band 计算目录下。**\n\n我们需要重写 `KPOINTS` ，之前的 `KPOINTS` 一直是系统帮助我们在布里渊区采样，现在我们想要得到布里渊区某一路径上能带的能量变化，则需要在 `KPOINTS` 指定出路径。\n\n根据 [DOI:10.1016/j.commatsci.2010.05.010](https://arxiv.org/abs/1004.2974) 后面所给资料提示选择对应的布里渊区 K 点路径（注意文中基矢的取法是否与自己一致，否则需要重新画出布里渊区，找出对应的 K 点。这里在寻找 K 点时可以借助 [XCrysDen](http://www.xcrysden.org/) ，选择 K-Point path 即可\n\n![这里取 Gamma -> K -> M -> Gamma](http://owucpthrj.bkt.clouddn.com/FpmnmrDYGQOgi2NLIPUvy31t0c4p)\n\n写出 `KPOINTS` 如下：\n\n```fortran\nK-POINTS    C3B Mono Layer Bands\t! 注释行\n    40\t\t\t\t\t\t\t\t! 每两个K点之间取样点数\nLine-mode\t\t\t\t\t\t\t! Line-mode，区别于自动取样模式，跑能带专用\nRec\t\t\t\t\t\t\t\t\t! 在倒空间内取点\n    0       0       0   \t\t\t! Gamma\n    0.33333 0.66666 0   \t\t\t! K\n\n    0.33333 0.66666 0   \t\t\t! K\n    0.5     0.5     0   \t\t\t! M\n\n    0.5     0.5     0   \t\t\t! M\n    0       0       0   \t\t\t! Gamma\n```\n\n同时在 `INCAR` 中加上 `ICHARG = 11` 以读取 SCF 所得 `CHGCAR` 进行能带计算。\n\n最后，取所得 `vasprun.xml` 导入 `p4vasp` 进行绘制能带图。如果读者有兴趣可以以 `EIGENVAL`  文件为输入自己实现绘制band的程序（不会很难）。\n\n> 跑能带的感觉就和抽卡/开箱是一样的，你永远也不知道下一个体系的 band 会是什么鸟样。\n\n跑出的能带是这个样子\n\n![](http://owucpthrj.bkt.clouddn.com/Fodl8Omy6tyxekWIF6pAxHI_lPkN)\n\n文献中的截图是这个样子的\n\n![](http://owucpthrj.bkt.clouddn.com/Fp0bJ1vUyw-dm2uxoVXt61hm6ka_)\n\n这里解释一下，本渣最初在跑 band 时 K 点取的路径和文献不同，所以两幅图基本等于对方水平翻转所得，但本文中所给 `KPOINTS` 里 K 点路径与文献是相符的。细心的大神已经看出两幅图中上图似乎向下平移了一部分，这可能是费米能级的取值差异所致，由于本渣水平太低，姑且只能这样理解了。\n\n## 计算态密度（\bDOS）\n\n如果阅读过文献的话，我们会发现文献中经常和能带图一起出现的还有 *态密度* 图。何为态密度\b？[Wikipedia](https://zh.wikipedia.org/zh-hans/%E7%8A%B6%E6%80%81%E5%AF%86%E5%BA%A6) 上的解释为某一能量周围单位区间内的微观状态数量。具体到本文，\b\b上面的微观状态\b便是\b指占据某能级的电子态。\n\n\n# 论检查输入文件正确性的重要性\n\n这里的输入文件指 `VASP` 计算时需要用到的文件，如`INCAR`、`POSCAR`、`POTCAR`、`KPOINTS`、`CHGCAR`等。\n\n1. 文件名是否正确。我知道很多人在 `bash` 中喜欢用 Tab 补全，这对提高命令输入效率非常有效，但同时也降低了我们检查文件名正确性的机会，上文中提到的 `KPOINS` 错误就是因为一直使用 Tab 补全而使它一直被继承到跑出 band ，还不止坑了自己，多么可笑；\n2. 脚本中重定向输出的文件名是否与需求一致。当使用上一次计算的脚本进行修改时本渣很容易忘了修改输出重定向的目标，从而导致 `POSCAR` 的内容被输出到 `KPOINTS` 里，这时 `VASP` 会报错，遇到这种情况及时修改脚本重新提交任务即可，无非是重新排队的问题；\n3. `POTCAR` 是否与体系相对应。有的论文并不明确说出自己使用哪个 `POTCAR` ，而是这样说：\"We treated 4p, 5s, 4d orbitals of xx, and x orbitals of xxx as valence electrons…\"，这就表明我们需要考虑使用带 `_pv` 、 `_sv` 的 `POTCAR` 。**这大概是本人近期踩过的最大的坑了吧**，可以想象，如果从一开始的 `POTCAR` 就出了问题，那么后面所有的计算就都是徒劳的，而在排错时无论如何也很难将目光投向 `POTCAR` 。这里要特别感谢 **比那名居腿娘** 同学的帮助；\n4. `POSCAR` 中的晶胞是否需要超胞。有的文献中给出一个 band 图但未给出其对应的结构，本渣按照前文所给结构计算，始终无法得到与文献相符的 band 图，直到本渣使用 2x2 超胞后的结构进行计算，终于重复出和文献很接近的结果；\n5. 有时在弛豫后进行 SCF 计算时会提示对称性错误，这时需要在 `INCAR` 中指定 `SYMPREC` 的值，这个值默认为`SYMPREC = 1.0E-5`，指定时可以使用更小的值。\n\n除了上面说到的 `INCAR`、`POSCAR`、`POTCAR`、`KPOINTS`、`CHGCAR`等，有时还会用到 `WAVECAR` ，`WAVECAR` 是二进制文件，在使用 FileZilla 传送时，如果没有勾选 `binary` 选项，则传送时会按照 ASCII 编码进行传送，后果就是 `WAVECAR` 文件损坏。\n\n\n\n# 参考资料\n\n1. VASP软件包的使用入门指南——候柱锋\n2. VASP the GUIDE(April 20, 2016)——Kresse, Martijn Marsman , Jurgen Furthmuller\n3. [High-throughput electronic band structure calculations: challenges and tools](https://arxiv.org/abs/1004.2974) ——[Wahyu Setyawan](https://arxiv.org/find/cond-mat/1/au:+Setyawan_W/0/1/0/all/0/1), [Stefano Curtarolo](https://arxiv.org/find/cond-mat/1/au:+Curtarolo_S/0/1/0/all/0/1)\n\n这次 blog 就写到这里吧，反正也是为自己写的。（当然如果有大佬愿意在评论区指出其中的错误，本渣感激不尽！\n\n最后祝愿各位读到这里的菊苣，提前（\n","slug":"how-to-struggle-with-vasp","published":1,"updated":"2018-12-31T11:47:25.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjbcu002izq4iy3gcupkx","content":"<blockquote>\n<p><strong>警告</strong>：本渣刚学 <code>VASP</code> 不久，对 <code>VASP</code> 的算法、参数不甚了解，如果有大触偶遇此文，并发现有错误，请在评论区指出或邮箱联系本渣。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本文是本渣从 3 月初以来刚接触 <code>VASP</code> 所学技能与遇到坑的总结，以纪念我为文献中一副图而逝去的最近一星期。何为 <code>VASP</code> 以及<code>VASP</code> 能做什么？本渣只是一个刚学的菜鸡，恕不能回答，请自行 Google 解决。</p>\n<h2 id=\"VASP-的输入文件\"><a href=\"#VASP-的输入文件\" class=\"headerlink\" title=\"VASP 的输入文件\"></a>VASP 的输入文件</h2><p>想要执行一次最简单的计算，<code>VASP</code> 需要至少4个文件，它们分别是：</p>\n<ul>\n<li><code>INCAR</code>：<code>VASP</code> 计算的<strong>核心</strong>文件，基本等同于本次计算的司令部。它包含了“<strong>算什么</strong>”、“<strong>怎么算</strong>”、和“<strong>输入、输出那些</strong>”这三个方面的内容，它的几项常用（PBE计算中）参数在后面我们会较为详细地了解到；</li>\n<li><code>POSCAR</code>：决定元胞结构的文件。它包含了元胞的格子类型、格子大小、以和格子内所有原子的种类及坐标，在弛豫时，它还可以指定哪些原子可以在哪些方向上进行<a href=\"https://en.wikipedia.org/wiki/Relaxation_(physics\" target=\"_blank\" rel=\"noopener\">弛豫</a>)，在 <code>VASP</code> 中我们无需给出原子间的成键情况，仅给出原子的坐标即可；</li>\n<li><code>KPOINTS</code>：描述 <code>VASP</code> 计算中对元胞格子的 mesh 精细度，或指定格子中哪些点的信息需要计算（？这里留个问号，本渣也不是很懂这里）；</li>\n<li><code>POTCAR</code>：赝势库，按 <code>POSCAR</code> 中元素列出顺序给出了对应元素的赝势库。</li>\n</ul>\n<p><strong>以上四个文件全为文本文件</strong>。当然我们还可以命令 <code>VASP</code> 读取上一次的计算结果，比如 <code>WAVECAR</code> ，比如 <code>CHGCAR</code> ，用以更快地收敛或者执行某些特殊的计算。</p>\n<h2 id=\"我们需要-VASP-的哪些输出文件？（目前为止）\"><a href=\"#我们需要-VASP-的哪些输出文件？（目前为止）\" class=\"headerlink\" title=\"我们需要 VASP 的哪些输出文件？（目前为止）\"></a>我们需要 VASP 的哪些输出文件？（目前为止）</h2><ul>\n<li><code>OUTCAR</code>：<code>VASP</code> 的计算日志，里面包含了几乎所有我们需要的结果，明文存储，随计算过程实时更新；</li>\n<li><del><code>WAVECAR</code>：<strong>二进制</strong>文件，经常很大，计算结束时会将内存中的波函数平面波系数写入该文件。（我对这个文件所了解的仅有这些；</del></li>\n<li><code>OSZICAR</code>：<code>VASP</code> 计算过程中能量收敛日志，每个电子步结束时写入；</li>\n<li><del><code>EIGENVAL</code>：<code>VASP</code> 计算出的能带信息保存在这个文件中，计算结束时被写入（可以使用 <code>Python</code> 等工具以它为输入绘制能带图，但本渣太菜，目前还没写这个小程序；</del></li>\n<li><code>CONTCAR</code>：在<a href=\"https://en.wikipedia.org/wiki/Relaxation_(physics\" target=\"_blank\" rel=\"noopener\">弛豫</a>)中，这个文件包含了<code>VASP</code>每个离子步结束时系统优化得到的元胞原子的坐标，每个离子步结束时写入；如果希望从还未收敛的弛豫结果继续计算，应直接将这个文件复制并重命名为 <code>POSCAR</code> 继续计算即可；</li>\n<li><del><code>CHG</code> &amp; <code>CHGCAR</code>：这个两个文件都包含了元胞中原子的位置信息，以及电荷密度信息，但 <code>CHG</code> 比 <code>CHGCAR</code> 小一些，因其不包含 <code>PAW one centre</code>；</del></li>\n<li><code>vasprun.xml</code>：XML 格式存储的 <code>VASP</code> 计算过程日志。</li>\n<li><code>PROCAR</code>：</li>\n</ul>\n<h2 id=\"用-PBE-方法跑出能带图的总体步骤\"><a href=\"#用-PBE-方法跑出能带图的总体步骤\" class=\"headerlink\" title=\"用 PBE 方法跑出能带图的总体步骤\"></a>用 PBE 方法跑出能带图的总体步骤</h2><ol>\n<li>阅读文献，列出文献所给参数（如果有的话），比如 <code>SIGMA</code> ，<code>ISMEAR</code> ，<code>ENCUT</code> ，晶格常数 $a$ 等等信息；</li>\n<li>查阅资料，<strong>实现文献所给结构</strong>，关注文献的结构是否经过超胞，是否有真空层，是否考虑 vdW ；</li>\n<li>按顺序测出适合该体系的 <code>SIGMA</code> 、<code>ENCUT</code> 、kpts 、<code>a</code> ；（如果文献中给出了这些参数可跳过这一步</li>\n<li>对结构进行弛豫，优化出最稳定结构；</li>\n<li>对体系进行高精度的电子自洽计算；</li>\n<li>跑出能带图、DOS 图以及直接获得所需的能量值等。</li>\n</ol>\n<h1 id=\"正文开始\"><a href=\"#正文开始\" class=\"headerlink\" title=\"正文开始\"></a>正文开始</h1><p>下面以单层 C3B 结构为例，走一遍上面的流程，看看有哪些坑。</p>\n<h2 id=\"获取参数\"><a href=\"#获取参数\" class=\"headerlink\" title=\"获取参数\"></a>获取参数</h2><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">5.17</span> \t\t<span class=\"comment\">! 晶格常数</span></span><br><span class=\"line\">EDIFF = <span class=\"number\">1.0E-6</span>\t<span class=\"comment\">! 弛豫收敛条件</span></span><br><span class=\"line\">EDIFFG = -<span class=\"number\">0.001</span>\t<span class=\"comment\">! </span></span><br><span class=\"line\"></span><br><span class=\"line\">kpts: Monkhorst\t<span class=\"comment\">! KPOINTS 取法</span></span><br></pre></td></tr></table></figure>\n<p>文献给出单层 C3B 的结构为 $D_{6h}$ ，长这样（从上往下看：</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/FpGVI905Z66B8ksQjiULb3cLahCV\" alt></p>\n<h2 id=\"实现结构\"><a href=\"#实现结构\" class=\"headerlink\" title=\"实现结构\"></a>实现结构</h2><p>建立元胞的格子基矢（D6h 的晶型都可以这样建系，使用 Direct 模式，可以手写所有原子的坐标），并表示出各个原子的坐标</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/FiQMZt8-XbO9iXes05rkDhfFjHls\" alt></p>\n<p>所以它对应的 <code>POSCAR</code> 应为：</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C3B graphene like structure, a = <span class=\"number\">5.17</span>               <span class=\"comment\">! 注释</span></span><br><span class=\"line\">   <span class=\"number\">5.17</span>                                             <span class=\"comment\">! 晶格放大系数</span></span><br><span class=\"line\">    <span class=\"number\">0.8660254037</span>   -<span class=\"number\">0.5000000000</span>     <span class=\"number\">0.0000000000</span>   <span class=\"comment\">! 下面三行为实空间中定义元胞的三个格矢 a1, a2, a3</span></span><br><span class=\"line\">    <span class=\"number\">0.8660254037</span>    <span class=\"number\">0.5000000000</span>   \t <span class=\"number\">0.0000000000</span></span><br><span class=\"line\">    <span class=\"number\">0.0000000000</span>    <span class=\"number\">0.0000000000</span>     <span class=\"number\">4.0000000000</span>   <span class=\"comment\">! 真空层厚度为 4.0*5.17 = 20.68A</span></span><br><span class=\"line\">   B    C                                           <span class=\"comment\">! 元素种类，这一行是给人看的，而不是给VASP看的</span></span><br><span class=\"line\">   <span class=\"number\">2</span>    <span class=\"number\">6</span>                                           <span class=\"comment\">! 对应元素的原子数目</span></span><br><span class=\"line\"><span class=\"keyword\">Direct</span>                                              <span class=\"comment\">! 以定义的格矢为基底</span></span><br><span class=\"line\">    <span class=\"number\">0.0000000000</span>    <span class=\"number\">0.0000000000</span>    <span class=\"number\">0.0000000000</span>    <span class=\"comment\">! B 下面皆为原子坐标，顺序与第六行指定的元素种类相同</span></span><br><span class=\"line\">    <span class=\"number\">0.6666666666</span>    <span class=\"number\">0.6666666666</span>    <span class=\"number\">0.0000000000</span>    <span class=\"comment\">! 要注意，仅靠POSCAR，并vasp不知道元素的具体种类，而只知道元素种类的个数。</span></span><br><span class=\"line\">    <span class=\"number\">0.5000000000</span>    <span class=\"number\">0.0000000000</span>    <span class=\"number\">0.0000000000</span>    <span class=\"comment\">! C</span></span><br><span class=\"line\">    <span class=\"number\">0.1666666666</span>    <span class=\"number\">0.1666666666</span>    <span class=\"number\">0.0000000000</span></span><br><span class=\"line\">    <span class=\"number\">0.0000000000</span>    <span class=\"number\">0.5000000000</span>    <span class=\"number\">0.0000000000</span></span><br><span class=\"line\">    <span class=\"number\">0.5000000000</span>    <span class=\"number\">0.5000000000</span>    <span class=\"number\">0.0000000000</span></span><br><span class=\"line\">    <span class=\"number\">0.6666666666</span>    <span class=\"number\">0.1666666666</span>    <span class=\"number\">0.0000000000</span></span><br><span class=\"line\">    <span class=\"number\">0.1666666666</span>    <span class=\"number\">0.6666666666</span>    <span class=\"number\">0.0000000000</span></span><br></pre></td></tr></table></figure>\n<p><strong>第一个坑</strong>：文献中的晶格常数应该怎样对应 <code>POSCAR</code> 中的晶格参数？</p>\n<p>这取决于我们取的基底。上文中我们以相邻两个元胞的 B 原子间模长最短的矢量为基矢，因此这个这个元胞的实际晶格常数应为 $a = |\\vec{a}<em>i| \\times a</em>{POSCAR}$ ， $a$ 即为文中给出的晶格常数，可见，<code>POSCAR</code> 中的晶格参数可以理解为缩放系数，所以写完结构时应与文献对照或放入 VESTA 等软件测出原子键长看与文献是否一致。有的文献作者基底的取法特殊，所给的晶格常数也很“魔性”，但不变的是格子的实际大小、原子间距离等，以这些信息为准才能写出与文献中真正等价的结构。此外，二维结构的实现时需要层间有 20 A 左右的真空层，以避免层间不必要的相互作用，但真空层不可取太厚，否则计算量的增加不仅仅是线性的。</p>\n<p><strong>闲话</strong>：如何建系是个见仁见智的问题，有人喜欢直接沿着六边形的边建系，有人喜欢像上文那样建系，但不管怎样，只要实现的结构是等价的那么建系就是没有问题的</p>\n<h2 id=\"测出必要的参数\"><a href=\"#测出必要的参数\" class=\"headerlink\" title=\"测出必要的参数\"></a>测出必要的参数</h2><h3 id=\"INCAR-Template\"><a href=\"#INCAR-Template\" class=\"headerlink\" title=\"INCAR Template\"></a><code>INCAR</code> Template</h3><p>在测各项参数之前，先给出一个<code>INCAR</code> 模板，具体参数的含义见注释或<code>VASP</code>手册。</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C3B Mono Layer  strcut_optim</span><br><span class=\"line\">  SYSTEM = <span class=\"string\">\"C3B Mono Layer\"</span> # 系统注释</span><br><span class=\"line\"></span><br><span class=\"line\">Electronic minimization</span><br><span class=\"line\">  ISMEAR =                  # 使用Gaussian smearing，取 <span class=\"number\">0</span> 用于导体、绝缘体的计算</span><br><span class=\"line\">  SIGMA =                   # Smearring 的宽度，在精度允许范围内应尽量大以减小计算量</span><br><span class=\"line\">  EDIFF =                   # 收敛判据的能量判据</span><br><span class=\"line\">  EDIFFG =                  # 收敛判据，若值为负，则为力判据；若值为正，则为能量判据</span><br><span class=\"line\">  PREC =                    # 精确度</span><br><span class=\"line\">  IBRION =                  # 离子移动方法，跑MD、弛豫抑或静态计算时设置不同</span><br><span class=\"line\">  ISIF =                    # 结构优化类型</span><br><span class=\"line\"></span><br><span class=\"line\">Ionic minimization</span><br><span class=\"line\">  NSW =                     # 离子步数上限</span><br><span class=\"line\">  NELMIN = \t\t\t\t\t# 电子步收敛下限</span><br><span class=\"line\">  ENCUT =                   # 截断能，在保证收敛良好的情况下应尽量小</span><br><span class=\"line\">  LWAVE =                   # 是否输出 WAVECAR；该值为 .FALSE. 时也会有 WAVECAR 输出，但其长度为 <span class=\"number\">0</span></span><br><span class=\"line\">  LCHARG =                  # 是否输出 CHGCAR</span><br><span class=\"line\"></span><br><span class=\"line\">Band Calcs</span><br><span class=\"line\">  ISTART =                  # 是否从当前目录读取 WAVECAR</span><br><span class=\"line\">  ICHARG =                  #  <span class=\"number\">1</span>: 读取 CHGCAR</span><br><span class=\"line\">                            # <span class=\"number\">10</span>: 不改变当前目录下的 CHGCAR</span><br></pre></td></tr></table></figure>\n<p>同时 <code>POTCAR</code> 这样获得：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat path/to/PPs/B/POTCAR &gt;&gt; ./POTCAR</span><br><span class=\"line\">cat path/to/PPs/C/POTCAR &gt;&gt; ./POTCAR</span><br></pre></td></tr></table></figure>\n<p>这里注意 <code>POTCAR</code> 中元素赝势的顺序应与 <code>POSCAR</code> 元素出现的顺序一致。</p>\n<h3 id=\"测出-SIGMA\"><a href=\"#测出-SIGMA\" class=\"headerlink\" title=\"测出 SIGMA\"></a>测出 <code>SIGMA</code></h3><p>固定<code>ENCUT</code>和kpts为较大的值<code>ENCUT = 600</code>、<code>kpts = 21</code>，固定晶格常数为“合适”值，取一系列<code>SIGMA</code>值做静态计算，当<code>OSZICAR</code>中<code>dE</code>绝对值小于 1.0 meV/atom 时取最大的 <code>SIGMA</code> 值。</p>\n<p>使用脚本如下（参考候柱锋老师的入门指南）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">rm WAVECAR          <span class=\"comment\"># 删除目录中的 WAVECAR 以免影响收敛</span></span><br><span class=\"line\"><span class=\"comment\"># in 后面 0.20 0.10 0.05 即为 sigma 所取的值，一般从大到小取，取值越小计算量越大当发现 dE 满足要求后可以及时终止计算</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> 0.20 0.10 0.05\t</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    cat &gt; INCAR &lt;&lt;! <span class=\"comment\"># 在 INCAR 中覆盖以下内容, ! 表示cat内容终止标志，可以自定义，如用 EOF</span></span><br><span class=\"line\">SYSTEM = Na adsorbed on site 1</span><br><span class=\"line\">ENCUT = 600         <span class=\"comment\"># 截断能取较大值</span></span><br><span class=\"line\">ISMEAR = 0          <span class=\"comment\"># Gaussian Smearing</span></span><br><span class=\"line\">SIGMA = <span class=\"variable\">$i</span>          <span class=\"comment\"># 每次循环 SIGMA 取 $i 的值</span></span><br><span class=\"line\">NSW = 0             <span class=\"comment\"># 静态计算，离子步数为 1</span></span><br><span class=\"line\">IBRION = -1\t        <span class=\"comment\"># 静态计算</span></span><br><span class=\"line\">LWAVE = .FALSE.     <span class=\"comment\"># 不输出 WAVECAR，不使用上次计算所得平面波系数作为初始值</span></span><br><span class=\"line\">!</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\" SIGMA = <span class=\"variable\">$i</span> eV \"</span></span><br><span class=\"line\">    time vasp &gt;&gt; vasp.log   <span class=\"comment\"># 执行 vasp 计算，重定向输出到 vasp.log ，并对该过程计时，结果输出到 stdout</span></span><br><span class=\"line\">    <span class=\"comment\"># OUTCAR 中 EENTRO 等于 OSZICAR 中的 dE，这里取出 dE</span></span><br><span class=\"line\">    TS=`grep <span class=\"string\">\"EENTRO\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%12.6f\", $5&#125;'</span>`</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$i</span>   <span class=\"variable\">$TS</span>\"</span> &gt;&gt; sigma.txt     <span class=\"comment\"># 输出 SIGMA 和 dE 到sigma.txt</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\n\\n\"</span>   <span class=\"comment\"># 换行 3 次</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>所得 sigma.txt 内容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0.20   -0.00519083</span><br><span class=\"line\">0.10   -0.00009427</span><br><span class=\"line\">0.05   0.00000000</span><br></pre></td></tr></table></figure>\n<p>显然，这里<code>SIGMA</code>取 0.10 即可，当然还可以在 (0.10, 0.20) 之间再取几个点，逼近使 dE &lt; 1meV/atom 的最大 SIGMA。</p>\n<h3 id=\"测出-ENCUT\"><a href=\"#测出-ENCUT\" class=\"headerlink\" title=\"测出 ENCUT\"></a>测出 <code>ENCUT</code></h3><p>将上面测出的 <code>SIGMA = 0.10</code> 固定，<code>ENCUT</code> 取不同值，过程与上面类似，只是判断 <code>ENCUT</code> 取值的依据变成了两次计算结果的<code>TOTEN</code>之差绝对值小于 1 meV/atom。</p>\n<p>使用脚本如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm WAVECAR</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> 300 350 400 450 500 550 600 <span class=\"comment\"># 每次循环 ENCUT 的取值</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    cat &gt; INCAR &lt;&lt;!</span><br><span class=\"line\">SYSTEM = Na adsorbed on site 1</span><br><span class=\"line\">ENCUT = <span class=\"variable\">$i</span></span><br><span class=\"line\">ISMEAR = 0</span><br><span class=\"line\">SIGMA = 0.10\t\t<span class=\"comment\"># SIGMA 取上面测得的值</span></span><br><span class=\"line\">NSW = 0</span><br><span class=\"line\">IBRION = -1</span><br><span class=\"line\">!</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\" ENCUT = <span class=\"variable\">$i</span> eV \"</span></span><br><span class=\"line\">    time vasp &gt;&gt; vasp.log</span><br><span class=\"line\">    E=`grep <span class=\"string\">\"TOTEN\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%12.6f\", $5&#125;'</span>`\t<span class=\"comment\"># 取出 OUTCAR 中的 TOTEN</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$i</span>   <span class=\"variable\">$E</span>\"</span> &gt;&gt; encut.txt</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"E = <span class=\"variable\">$E</span>\\n\\n\"</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>测得 <code>ENCUT</code> 取值为 450。这里 <code>ENCUT</code> 如果取值过小，后面在弛豫时很可能能量不会收敛。</p>\n<h3 id=\"测出-kpts\"><a href=\"#测出-kpts\" class=\"headerlink\" title=\"测出 kpts\"></a>测出 kpts</h3><p>kpts 指的是 <code>KPOINTS</code> 里 meshgrid 的取样点数，取样越多，计算结果收敛越好，同时计算量也变大。取值条件与上面相同，即两次计算的 <code>TOTEN</code> 相差小于 1meV/atom 。</p>\n<p><strong>注意，不要忘了把测好的 <code>SIGMA</code> 和 <code>ENCUT</code> 写入 <code>INCAR</code></strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm WAVECAR</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> 9 13 17 21\t<span class=\"comment\"># kpts 取 9 13 17 21</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    cat &gt; KPOINTS &lt;&lt;!</span><br><span class=\"line\">Na adsorbed on site1 -- det_kp</span><br><span class=\"line\">0</span><br><span class=\"line\">Monkhorst-Pack\t\t<span class=\"comment\"># 只要第一个字母为 M 即可</span></span><br><span class=\"line\">    <span class=\"variable\">$i</span>  <span class=\"variable\">$i</span>  1\t\t<span class=\"comment\"># 有真空层存在，z方向采样点数为 1</span></span><br><span class=\"line\">    0   0   0</span><br><span class=\"line\">!</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"k mesh = <span class=\"variable\">$i</span>\\t<span class=\"variable\">$i</span>\\t1\"</span>; time vasp &gt;&gt; vasp.log</span><br><span class=\"line\">    E=`grep <span class=\"string\">\"TOTEN\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%18.10f\", $5&#125;'</span>`</span><br><span class=\"line\">    KP=`grep <span class=\"string\">\"irreducible\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%5i\", $2&#125;'</span>`</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span> <span class=\"variable\">$KP</span> <span class=\"variable\">$E</span> &gt;&gt; det_kp.txt</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>测得 kpts 取15。</p>\n<p><strong>第二个坑</strong>：<code>KPOINTS</code> 文件名一定要写对，本渣使用的 <code>VASP</code> 版本为 5.3.5，计算中如果没检测到 <code>KPOINTS</code> 文件存在，则<strong>默认</strong> kpts 取值为 <strong>3</strong> ，导致结果错误。本渣某次计算中误将 <code>KPOINTS</code> 写成了 <code>KPOINS</code> ，导致后面无论如何修改参数，结果与文献值始终相差很大。（这个东西不仅坑了我，还坑了<strong>比那名居腿娘</strong>(来自WHU的EE大佬)大神熬夜到 3 点多，说来惭愧……</p>\n<h3 id=\"测出-a\"><a href=\"#测出-a\" class=\"headerlink\" title=\"测出 a\"></a>测出 <code>a</code></h3><p>这里的<code>a</code>确切地指 <code>POSCAR</code> 中第二行的那个数值，即元胞的放大系数。因为本例中的晶格基矢模长 $|\\vec{a_1}| = |\\vec{a_2}| = 1$ ，故其放大系等于文献中的晶格常数 $a$。这里 <code>a</code> 的取值条件与上面相同。给出测试脚本如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm WAVECAR</span><br><span class=\"line\"><span class=\"comment\"># 晶格参数的取值应在文献值附近取点</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> 4.97 5.02 5.07 5.12 5.17 5.22 5.27 5.32 5.37</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    cat &gt; POSCAR &lt;&lt;!</span><br><span class=\"line\">C3B graphene like structure, a = 5.17</span><br><span class=\"line\">   <span class=\"variable\">$i</span></span><br><span class=\"line\">    0.8660254037   -0.5000000000    0.0000000000</span><br><span class=\"line\">    0.8660254037    0.5000000000    0.0000000000</span><br><span class=\"line\">    0.0000000000    0.0000000000    3.0000000000</span><br><span class=\"line\">   B    C</span><br><span class=\"line\">   2    6</span><br><span class=\"line\">Direct</span><br><span class=\"line\">    0.0000000000    0.0000000000    0.0000000000    ! B1</span><br><span class=\"line\">    0.6666666666    0.6666666666    0.0000000000    ! B2</span><br><span class=\"line\">    0.5000000000    0.0000000000    0.0000000000    ! C1</span><br><span class=\"line\">    0.1666666666    0.1666666666    0.0000000000    ! C2</span><br><span class=\"line\">    0.0000000000    0.5000000000    0.0000000000    ! C3</span><br><span class=\"line\">    0.5000000000    0.5000000000    0.0000000000    ! C4</span><br><span class=\"line\">    0.6666666666    0.1666666666    0.0000000000    ! C5</span><br><span class=\"line\">    0.1666666666    0.6666666666    0.0000000000    ! C6</span><br><span class=\"line\">!</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -e <span class=\"string\">\"a = <span class=\"variable\">$i</span> angstrom\"</span>; time vasp &gt;&gt; vasp.log</span><br><span class=\"line\">\tE=`grep <span class=\"string\">\"TOTEN\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%12.6f\", $5 &#125;'</span>`</span><br><span class=\"line\">\tV=`grep <span class=\"string\">\"volume\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%12.4f\", $5&#125;'</span>`</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span> <span class=\"string\">\"%6.3f %10.4f %18.10f\\n\"</span> <span class=\"variable\">$i</span> <span class=\"variable\">$V</span> <span class=\"variable\">$E</span> &gt;&gt; a.txt</span><br><span class=\"line\">\ttail -1 a.txt</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>测得 <code>a</code> 与文献值相同，5.17。这里的 <code>a</code> 还可以取得更精细一些，甚至可以到小数点后三位，这里取值越接近“真实值”，后面弛豫的过程将会越短。</p>\n<h2 id=\"弛豫（结构优化，relaxation）\"><a href=\"#弛豫（结构优化，relaxation）\" class=\"headerlink\" title=\"弛豫（结构优化，relaxation）\"></a>弛豫（结构优化，relaxation）</h2><p>弛豫中需要用到的 <code>INCAR</code> 参数有</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ISMEAR = <span class=\"number\">0</span>       <span class=\"comment\">! 继承自上面的计算结果</span></span><br><span class=\"line\">SIGMA = <span class=\"number\">0.1</span></span><br><span class=\"line\">ENCUT = <span class=\"number\">450</span></span><br><span class=\"line\"></span><br><span class=\"line\">PREC = Accurate</span><br><span class=\"line\">EDIFF = <span class=\"number\">1.0E-6</span></span><br><span class=\"line\">EDIFFG = -<span class=\"number\">0.01</span></span><br><span class=\"line\">IBRION = <span class=\"number\">1</span>       <span class=\"comment\">! 准牛顿法</span></span><br><span class=\"line\">ISIF = <span class=\"number\">3</span>         <span class=\"comment\">! 计算 force、stress tensor，对离子、晶格进行弛豫 </span></span><br><span class=\"line\"></span><br><span class=\"line\">NELMIN = <span class=\"number\">6</span>       <span class=\"comment\">! (optional) 强制每个离子步跑至少 6 电子步，提高收敛效果</span></span><br><span class=\"line\">NSW = <span class=\"number\">200</span>        <span class=\"comment\">! 离子步上限为 200 步，目前本渣所算的体系中离子步数没有超过这个值的，也许是我太年轻了吧</span></span><br></pre></td></tr></table></figure>\n<p>这个步骤耗时最长，尤其是加上 <code>PREC</code> 后，每个电子步计算量上升很多，而为了结构的优化，离子步数的增多也使这个过程耗时不少，本例中 8 个原子的体系优化需要数个小时；本渣另外的一个体系中有 12 个原子，优化就需要 12h+ 。</p>\n<p><strong>第三个坑</strong>：<code>EDIFFG</code>有正负之分，<strong>负数</strong>表示收敛的力判据。如果<code>EDIFFG</code>误写为正，则<code>EDIFF</code>会被覆盖，<code>VASP</code>按照<code>EDIFFG</code>进行收敛判断，结果就是收敛可能会变得很快（快上几个数量级），但是所得结构不是我们想要的结构。</p>\n<p><strong>第四个坑</strong>：如果 <code>EDIFF</code>和<code>EDIFFG</code>设置过小，则计算时收敛可能会变得非常漫长，有时甚至会将结构跑散——原子间距离越来越大，这时候有三种选择：1. 提高精度，重新测出晶格常数，晶格常数可以精确到 0.001；2. 放宽收敛判据； 3. <code>IBRION</code> 取 2 （如果你对这个结构是否稳定没有信心的话。</p>\n<h2 id=\"高精度的电子自洽计算（SCF）\"><a href=\"#高精度的电子自洽计算（SCF）\" class=\"headerlink\" title=\"高精度的电子自洽计算（SCF）\"></a>高精度的电子自洽计算（SCF）</h2><p>进行高精度的电子自洽计算是为了得到体系的电荷分布，同时也为后面计算能带提供数据。</p>\n<p>这一步需要<strong>将 relaxation 得到的 CONTCAR 复制到 SCF 计算目录下，并重命名为 POSCAR</strong> ，<code>INCAR</code> 内容相似，仅将弛豫相关参数修改即可，<code>INCAR</code> 如下</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C3B Mono Layer  strcut_optim</span><br><span class=\"line\">  SYSTEM = <span class=\"string\">\"C3B Mono Layer\"</span> # System <span class=\"keyword\">Name</span></span><br><span class=\"line\"></span><br><span class=\"line\">Electronic minimization</span><br><span class=\"line\">  ISMEAR = <span class=\"number\">0</span>                # Toggle Gaussian Method, complete later</span><br><span class=\"line\">  SIGMA = <span class=\"number\">0.1</span>               # Broadening <span class=\"keyword\">in</span> eV -<span class=\"number\">4</span>-tet-<span class=\"number\">1</span>-fermi <span class=\"number\">0</span>-gaus</span><br><span class=\"line\">  EDIFF = <span class=\"number\">1.E-6</span>             # Energy tolerance eV/atom</span><br><span class=\"line\">#  EDIFFG = -<span class=\"number\">0.01</span>            # Force tolerance</span><br><span class=\"line\">  PREC = Accurate           # Accuracy</span><br><span class=\"line\">  IBRION = -<span class=\"number\">1</span>               # quasi-Newton algorithm</span><br><span class=\"line\">#  ISIF = <span class=\"number\">3</span>                  # optim totally: volume, stress, force, ion, <span class=\"built_in\">shape</span></span><br><span class=\"line\"></span><br><span class=\"line\">Ionic minimization</span><br><span class=\"line\">  NSW = <span class=\"number\">0</span>                   # Converge steps, must set</span><br><span class=\"line\">  ENCUT = <span class=\"number\">450</span>               # components beyond ENCUT are <span class=\"string\">'removed'</span> from the projection</span><br><span class=\"line\">                            # operators</span><br><span class=\"line\">  LWAVE = .TRUE.            # Output WAVECAR</span><br><span class=\"line\">  LCHARG = .TRUE.           # Output density of charge to CHG and CHGCAR</span><br><span class=\"line\">  NCORE = <span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n<p>由于默认输出 <code>CHGCAR</code> ， <code>INCAR</code> 中的 <code>LCHARG</code> 可以不写。</p>\n<h2 id=\"计算能带（band）\"><a href=\"#计算能带（band）\" class=\"headerlink\" title=\"计算能带（band）\"></a>计算能带（band）</h2><p><strong>复制 SCF 计算所得 CHGCAR 到 band 计算目录下。</strong></p>\n<p>我们需要重写 <code>KPOINTS</code> ，之前的 <code>KPOINTS</code> 一直是系统帮助我们在布里渊区采样，现在我们想要得到布里渊区某一路径上能带的能量变化，则需要在 <code>KPOINTS</code> 指定出路径。</p>\n<p>根据 <a href=\"https://arxiv.org/abs/1004.2974\" target=\"_blank\" rel=\"noopener\">DOI:10.1016/j.commatsci.2010.05.010</a> 后面所给资料提示选择对应的布里渊区 K 点路径（注意文中基矢的取法是否与自己一致，否则需要重新画出布里渊区，找出对应的 K 点。这里在寻找 K 点时可以借助 <a href=\"http://www.xcrysden.org/\" target=\"_blank\" rel=\"noopener\">XCrysDen</a> ，选择 K-Point path 即可</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/FpmnmrDYGQOgi2NLIPUvy31t0c4p\" alt=\"这里取 Gamma -&gt; K -&gt; M -&gt; Gamma\"></p>\n<p>写出 <code>KPOINTS</code> 如下：</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">K-POINTS    C3B Mono Layer Bands\t<span class=\"comment\">! 注释行</span></span><br><span class=\"line\">    <span class=\"number\">40</span>\t\t\t\t\t\t\t\t<span class=\"comment\">! 每两个K点之间取样点数</span></span><br><span class=\"line\">Line-mode\t\t\t\t\t\t\t<span class=\"comment\">! Line-mode，区别于自动取样模式，跑能带专用</span></span><br><span class=\"line\"><span class=\"keyword\">Rec</span>\t\t\t\t\t\t\t\t\t<span class=\"comment\">! 在倒空间内取点</span></span><br><span class=\"line\">    <span class=\"number\">0</span>       <span class=\"number\">0</span>       <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! Gamma</span></span><br><span class=\"line\">    <span class=\"number\">0.33333</span> <span class=\"number\">0.66666</span> <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! K</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">0.33333</span> <span class=\"number\">0.66666</span> <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! K</span></span><br><span class=\"line\">    <span class=\"number\">0.5</span>     <span class=\"number\">0.5</span>     <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! M</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">0.5</span>     <span class=\"number\">0.5</span>     <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! M</span></span><br><span class=\"line\">    <span class=\"number\">0</span>       <span class=\"number\">0</span>       <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! Gamma</span></span><br></pre></td></tr></table></figure>\n<p>同时在 <code>INCAR</code> 中加上 <code>ICHARG = 11</code> 以读取 SCF 所得 <code>CHGCAR</code> 进行能带计算。</p>\n<p>最后，取所得 <code>vasprun.xml</code> 导入 <code>p4vasp</code> 进行绘制能带图。如果读者有兴趣可以以 <code>EIGENVAL</code>  文件为输入自己实现绘制band的程序（不会很难）。</p>\n<blockquote>\n<p>跑能带的感觉就和抽卡/开箱是一样的，你永远也不知道下一个体系的 band 会是什么鸟样。</p>\n</blockquote>\n<p>跑出的能带是这个样子</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/Fodl8Omy6tyxekWIF6pAxHI_lPkN\" alt></p>\n<p>文献中的截图是这个样子的</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/Fp0bJ1vUyw-dm2uxoVXt61hm6ka_\" alt></p>\n<p>这里解释一下，本渣最初在跑 band 时 K 点取的路径和文献不同，所以两幅图基本等于对方水平翻转所得，但本文中所给 <code>KPOINTS</code> 里 K 点路径与文献是相符的。细心的大神已经看出两幅图中上图似乎向下平移了一部分，这可能是费米能级的取值差异所致，由于本渣水平太低，姑且只能这样理解了。</p>\n<h2 id=\"计算态密度（DOS）\"><a href=\"#计算态密度（DOS）\" class=\"headerlink\" title=\"计算态密度（\bDOS）\"></a>计算态密度（\bDOS）</h2><p>如果阅读过文献的话，我们会发现文献中经常和能带图一起出现的还有 <em>态密度</em> 图。何为态密度\b？<a href=\"https://zh.wikipedia.org/zh-hans/%E7%8A%B6%E6%80%81%E5%AF%86%E5%BA%A6\" target=\"_blank\" rel=\"noopener\">Wikipedia</a> 上的解释为某一能量周围单位区间内的微观状态数量。具体到本文，\b\b上面的微观状态\b便是\b指占据某能级的电子态。</p>\n<h1 id=\"论检查输入文件正确性的重要性\"><a href=\"#论检查输入文件正确性的重要性\" class=\"headerlink\" title=\"论检查输入文件正确性的重要性\"></a>论检查输入文件正确性的重要性</h1><p>这里的输入文件指 <code>VASP</code> 计算时需要用到的文件，如<code>INCAR</code>、<code>POSCAR</code>、<code>POTCAR</code>、<code>KPOINTS</code>、<code>CHGCAR</code>等。</p>\n<ol>\n<li>文件名是否正确。我知道很多人在 <code>bash</code> 中喜欢用 Tab 补全，这对提高命令输入效率非常有效，但同时也降低了我们检查文件名正确性的机会，上文中提到的 <code>KPOINS</code> 错误就是因为一直使用 Tab 补全而使它一直被继承到跑出 band ，还不止坑了自己，多么可笑；</li>\n<li>脚本中重定向输出的文件名是否与需求一致。当使用上一次计算的脚本进行修改时本渣很容易忘了修改输出重定向的目标，从而导致 <code>POSCAR</code> 的内容被输出到 <code>KPOINTS</code> 里，这时 <code>VASP</code> 会报错，遇到这种情况及时修改脚本重新提交任务即可，无非是重新排队的问题；</li>\n<li><code>POTCAR</code> 是否与体系相对应。有的论文并不明确说出自己使用哪个 <code>POTCAR</code> ，而是这样说：”We treated 4p, 5s, 4d orbitals of xx, and x orbitals of xxx as valence electrons…”，这就表明我们需要考虑使用带 <code>_pv</code> 、 <code>_sv</code> 的 <code>POTCAR</code> 。<strong>这大概是本人近期踩过的最大的坑了吧</strong>，可以想象，如果从一开始的 <code>POTCAR</code> 就出了问题，那么后面所有的计算就都是徒劳的，而在排错时无论如何也很难将目光投向 <code>POTCAR</code> 。这里要特别感谢 <strong>比那名居腿娘</strong> 同学的帮助；</li>\n<li><code>POSCAR</code> 中的晶胞是否需要超胞。有的文献中给出一个 band 图但未给出其对应的结构，本渣按照前文所给结构计算，始终无法得到与文献相符的 band 图，直到本渣使用 2x2 超胞后的结构进行计算，终于重复出和文献很接近的结果；</li>\n<li>有时在弛豫后进行 SCF 计算时会提示对称性错误，这时需要在 <code>INCAR</code> 中指定 <code>SYMPREC</code> 的值，这个值默认为<code>SYMPREC = 1.0E-5</code>，指定时可以使用更小的值。</li>\n</ol>\n<p>除了上面说到的 <code>INCAR</code>、<code>POSCAR</code>、<code>POTCAR</code>、<code>KPOINTS</code>、<code>CHGCAR</code>等，有时还会用到 <code>WAVECAR</code> ，<code>WAVECAR</code> 是二进制文件，在使用 FileZilla 传送时，如果没有勾选 <code>binary</code> 选项，则传送时会按照 ASCII 编码进行传送，后果就是 <code>WAVECAR</code> 文件损坏。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ol>\n<li>VASP软件包的使用入门指南——候柱锋</li>\n<li>VASP the GUIDE(April 20, 2016)——Kresse, Martijn Marsman , Jurgen Furthmuller</li>\n<li><a href=\"https://arxiv.org/abs/1004.2974\" target=\"_blank\" rel=\"noopener\">High-throughput electronic band structure calculations: challenges and tools</a> ——<a href=\"https://arxiv.org/find/cond-mat/1/au:+Setyawan_W/0/1/0/all/0/1\" target=\"_blank\" rel=\"noopener\">Wahyu Setyawan</a>, <a href=\"https://arxiv.org/find/cond-mat/1/au:+Curtarolo_S/0/1/0/all/0/1\" target=\"_blank\" rel=\"noopener\">Stefano Curtarolo</a></li>\n</ol>\n<p>这次 blog 就写到这里吧，反正也是为自己写的。（当然如果有大佬愿意在评论区指出其中的错误，本渣感激不尽！</p>\n<p>最后祝愿各位读到这里的菊苣，提前（</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><strong>警告</strong>：本渣刚学 <code>VASP</code> 不久，对 <code>VASP</code> 的算法、参数不甚了解，如果有大触偶遇此文，并发现有错误，请在评论区指出或邮箱联系本渣。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本文是本渣从 3 月初以来刚接触 <code>VASP</code> 所学技能与遇到坑的总结，以纪念我为文献中一副图而逝去的最近一星期。何为 <code>VASP</code> 以及<code>VASP</code> 能做什么？本渣只是一个刚学的菜鸡，恕不能回答，请自行 Google 解决。</p>\n<h2 id=\"VASP-的输入文件\"><a href=\"#VASP-的输入文件\" class=\"headerlink\" title=\"VASP 的输入文件\"></a>VASP 的输入文件</h2><p>想要执行一次最简单的计算，<code>VASP</code> 需要至少4个文件，它们分别是：</p>\n<ul>\n<li><code>INCAR</code>：<code>VASP</code> 计算的<strong>核心</strong>文件，基本等同于本次计算的司令部。它包含了“<strong>算什么</strong>”、“<strong>怎么算</strong>”、和“<strong>输入、输出那些</strong>”这三个方面的内容，它的几项常用（PBE计算中）参数在后面我们会较为详细地了解到；</li>\n<li><code>POSCAR</code>：决定元胞结构的文件。它包含了元胞的格子类型、格子大小、以和格子内所有原子的种类及坐标，在弛豫时，它还可以指定哪些原子可以在哪些方向上进行<a href=\"https://en.wikipedia.org/wiki/Relaxation_(physics\" target=\"_blank\" rel=\"noopener\">弛豫</a>)，在 <code>VASP</code> 中我们无需给出原子间的成键情况，仅给出原子的坐标即可；</li>\n<li><code>KPOINTS</code>：描述 <code>VASP</code> 计算中对元胞格子的 mesh 精细度，或指定格子中哪些点的信息需要计算（？这里留个问号，本渣也不是很懂这里）；</li>\n<li><code>POTCAR</code>：赝势库，按 <code>POSCAR</code> 中元素列出顺序给出了对应元素的赝势库。</li>\n</ul>\n<p><strong>以上四个文件全为文本文件</strong>。当然我们还可以命令 <code>VASP</code> 读取上一次的计算结果，比如 <code>WAVECAR</code> ，比如 <code>CHGCAR</code> ，用以更快地收敛或者执行某些特殊的计算。</p>\n<h2 id=\"我们需要-VASP-的哪些输出文件？（目前为止）\"><a href=\"#我们需要-VASP-的哪些输出文件？（目前为止）\" class=\"headerlink\" title=\"我们需要 VASP 的哪些输出文件？（目前为止）\"></a>我们需要 VASP 的哪些输出文件？（目前为止）</h2><ul>\n<li><code>OUTCAR</code>：<code>VASP</code> 的计算日志，里面包含了几乎所有我们需要的结果，明文存储，随计算过程实时更新；</li>\n<li><del><code>WAVECAR</code>：<strong>二进制</strong>文件，经常很大，计算结束时会将内存中的波函数平面波系数写入该文件。（我对这个文件所了解的仅有这些；</del></li>\n<li><code>OSZICAR</code>：<code>VASP</code> 计算过程中能量收敛日志，每个电子步结束时写入；</li>\n<li><del><code>EIGENVAL</code>：<code>VASP</code> 计算出的能带信息保存在这个文件中，计算结束时被写入（可以使用 <code>Python</code> 等工具以它为输入绘制能带图，但本渣太菜，目前还没写这个小程序；</del></li>\n<li><code>CONTCAR</code>：在<a href=\"https://en.wikipedia.org/wiki/Relaxation_(physics\" target=\"_blank\" rel=\"noopener\">弛豫</a>)中，这个文件包含了<code>VASP</code>每个离子步结束时系统优化得到的元胞原子的坐标，每个离子步结束时写入；如果希望从还未收敛的弛豫结果继续计算，应直接将这个文件复制并重命名为 <code>POSCAR</code> 继续计算即可；</li>\n<li><del><code>CHG</code> &amp; <code>CHGCAR</code>：这个两个文件都包含了元胞中原子的位置信息，以及电荷密度信息，但 <code>CHG</code> 比 <code>CHGCAR</code> 小一些，因其不包含 <code>PAW one centre</code>；</del></li>\n<li><code>vasprun.xml</code>：XML 格式存储的 <code>VASP</code> 计算过程日志。</li>\n<li><code>PROCAR</code>：</li>\n</ul>\n<h2 id=\"用-PBE-方法跑出能带图的总体步骤\"><a href=\"#用-PBE-方法跑出能带图的总体步骤\" class=\"headerlink\" title=\"用 PBE 方法跑出能带图的总体步骤\"></a>用 PBE 方法跑出能带图的总体步骤</h2><ol>\n<li>阅读文献，列出文献所给参数（如果有的话），比如 <code>SIGMA</code> ，<code>ISMEAR</code> ，<code>ENCUT</code> ，晶格常数 $a$ 等等信息；</li>\n<li>查阅资料，<strong>实现文献所给结构</strong>，关注文献的结构是否经过超胞，是否有真空层，是否考虑 vdW ；</li>\n<li>按顺序测出适合该体系的 <code>SIGMA</code> 、<code>ENCUT</code> 、kpts 、<code>a</code> ；（如果文献中给出了这些参数可跳过这一步</li>\n<li>对结构进行弛豫，优化出最稳定结构；</li>\n<li>对体系进行高精度的电子自洽计算；</li>\n<li>跑出能带图、DOS 图以及直接获得所需的能量值等。</li>\n</ol>\n<h1 id=\"正文开始\"><a href=\"#正文开始\" class=\"headerlink\" title=\"正文开始\"></a>正文开始</h1><p>下面以单层 C3B 结构为例，走一遍上面的流程，看看有哪些坑。</p>\n<h2 id=\"获取参数\"><a href=\"#获取参数\" class=\"headerlink\" title=\"获取参数\"></a>获取参数</h2><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">5.17</span> \t\t<span class=\"comment\">! 晶格常数</span></span><br><span class=\"line\">EDIFF = <span class=\"number\">1.0E-6</span>\t<span class=\"comment\">! 弛豫收敛条件</span></span><br><span class=\"line\">EDIFFG = -<span class=\"number\">0.001</span>\t<span class=\"comment\">! </span></span><br><span class=\"line\"></span><br><span class=\"line\">kpts: Monkhorst\t<span class=\"comment\">! KPOINTS 取法</span></span><br></pre></td></tr></table></figure>\n<p>文献给出单层 C3B 的结构为 $D_{6h}$ ，长这样（从上往下看：</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/FpGVI905Z66B8ksQjiULb3cLahCV\" alt></p>\n<h2 id=\"实现结构\"><a href=\"#实现结构\" class=\"headerlink\" title=\"实现结构\"></a>实现结构</h2><p>建立元胞的格子基矢（D6h 的晶型都可以这样建系，使用 Direct 模式，可以手写所有原子的坐标），并表示出各个原子的坐标</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/FiQMZt8-XbO9iXes05rkDhfFjHls\" alt></p>\n<p>所以它对应的 <code>POSCAR</code> 应为：</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C3B graphene like structure, a = <span class=\"number\">5.17</span>               <span class=\"comment\">! 注释</span></span><br><span class=\"line\">   <span class=\"number\">5.17</span>                                             <span class=\"comment\">! 晶格放大系数</span></span><br><span class=\"line\">    <span class=\"number\">0.8660254037</span>   -<span class=\"number\">0.5000000000</span>     <span class=\"number\">0.0000000000</span>   <span class=\"comment\">! 下面三行为实空间中定义元胞的三个格矢 a1, a2, a3</span></span><br><span class=\"line\">    <span class=\"number\">0.8660254037</span>    <span class=\"number\">0.5000000000</span>   \t <span class=\"number\">0.0000000000</span></span><br><span class=\"line\">    <span class=\"number\">0.0000000000</span>    <span class=\"number\">0.0000000000</span>     <span class=\"number\">4.0000000000</span>   <span class=\"comment\">! 真空层厚度为 4.0*5.17 = 20.68A</span></span><br><span class=\"line\">   B    C                                           <span class=\"comment\">! 元素种类，这一行是给人看的，而不是给VASP看的</span></span><br><span class=\"line\">   <span class=\"number\">2</span>    <span class=\"number\">6</span>                                           <span class=\"comment\">! 对应元素的原子数目</span></span><br><span class=\"line\"><span class=\"keyword\">Direct</span>                                              <span class=\"comment\">! 以定义的格矢为基底</span></span><br><span class=\"line\">    <span class=\"number\">0.0000000000</span>    <span class=\"number\">0.0000000000</span>    <span class=\"number\">0.0000000000</span>    <span class=\"comment\">! B 下面皆为原子坐标，顺序与第六行指定的元素种类相同</span></span><br><span class=\"line\">    <span class=\"number\">0.6666666666</span>    <span class=\"number\">0.6666666666</span>    <span class=\"number\">0.0000000000</span>    <span class=\"comment\">! 要注意，仅靠POSCAR，并vasp不知道元素的具体种类，而只知道元素种类的个数。</span></span><br><span class=\"line\">    <span class=\"number\">0.5000000000</span>    <span class=\"number\">0.0000000000</span>    <span class=\"number\">0.0000000000</span>    <span class=\"comment\">! C</span></span><br><span class=\"line\">    <span class=\"number\">0.1666666666</span>    <span class=\"number\">0.1666666666</span>    <span class=\"number\">0.0000000000</span></span><br><span class=\"line\">    <span class=\"number\">0.0000000000</span>    <span class=\"number\">0.5000000000</span>    <span class=\"number\">0.0000000000</span></span><br><span class=\"line\">    <span class=\"number\">0.5000000000</span>    <span class=\"number\">0.5000000000</span>    <span class=\"number\">0.0000000000</span></span><br><span class=\"line\">    <span class=\"number\">0.6666666666</span>    <span class=\"number\">0.1666666666</span>    <span class=\"number\">0.0000000000</span></span><br><span class=\"line\">    <span class=\"number\">0.1666666666</span>    <span class=\"number\">0.6666666666</span>    <span class=\"number\">0.0000000000</span></span><br></pre></td></tr></table></figure>\n<p><strong>第一个坑</strong>：文献中的晶格常数应该怎样对应 <code>POSCAR</code> 中的晶格参数？</p>\n<p>这取决于我们取的基底。上文中我们以相邻两个元胞的 B 原子间模长最短的矢量为基矢，因此这个这个元胞的实际晶格常数应为 $a = |\\vec{a}<em>i| \\times a</em>{POSCAR}$ ， $a$ 即为文中给出的晶格常数，可见，<code>POSCAR</code> 中的晶格参数可以理解为缩放系数，所以写完结构时应与文献对照或放入 VESTA 等软件测出原子键长看与文献是否一致。有的文献作者基底的取法特殊，所给的晶格常数也很“魔性”，但不变的是格子的实际大小、原子间距离等，以这些信息为准才能写出与文献中真正等价的结构。此外，二维结构的实现时需要层间有 20 A 左右的真空层，以避免层间不必要的相互作用，但真空层不可取太厚，否则计算量的增加不仅仅是线性的。</p>\n<p><strong>闲话</strong>：如何建系是个见仁见智的问题，有人喜欢直接沿着六边形的边建系，有人喜欢像上文那样建系，但不管怎样，只要实现的结构是等价的那么建系就是没有问题的</p>\n<h2 id=\"测出必要的参数\"><a href=\"#测出必要的参数\" class=\"headerlink\" title=\"测出必要的参数\"></a>测出必要的参数</h2><h3 id=\"INCAR-Template\"><a href=\"#INCAR-Template\" class=\"headerlink\" title=\"INCAR Template\"></a><code>INCAR</code> Template</h3><p>在测各项参数之前，先给出一个<code>INCAR</code> 模板，具体参数的含义见注释或<code>VASP</code>手册。</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C3B Mono Layer  strcut_optim</span><br><span class=\"line\">  SYSTEM = <span class=\"string\">\"C3B Mono Layer\"</span> # 系统注释</span><br><span class=\"line\"></span><br><span class=\"line\">Electronic minimization</span><br><span class=\"line\">  ISMEAR =                  # 使用Gaussian smearing，取 <span class=\"number\">0</span> 用于导体、绝缘体的计算</span><br><span class=\"line\">  SIGMA =                   # Smearring 的宽度，在精度允许范围内应尽量大以减小计算量</span><br><span class=\"line\">  EDIFF =                   # 收敛判据的能量判据</span><br><span class=\"line\">  EDIFFG =                  # 收敛判据，若值为负，则为力判据；若值为正，则为能量判据</span><br><span class=\"line\">  PREC =                    # 精确度</span><br><span class=\"line\">  IBRION =                  # 离子移动方法，跑MD、弛豫抑或静态计算时设置不同</span><br><span class=\"line\">  ISIF =                    # 结构优化类型</span><br><span class=\"line\"></span><br><span class=\"line\">Ionic minimization</span><br><span class=\"line\">  NSW =                     # 离子步数上限</span><br><span class=\"line\">  NELMIN = \t\t\t\t\t# 电子步收敛下限</span><br><span class=\"line\">  ENCUT =                   # 截断能，在保证收敛良好的情况下应尽量小</span><br><span class=\"line\">  LWAVE =                   # 是否输出 WAVECAR；该值为 .FALSE. 时也会有 WAVECAR 输出，但其长度为 <span class=\"number\">0</span></span><br><span class=\"line\">  LCHARG =                  # 是否输出 CHGCAR</span><br><span class=\"line\"></span><br><span class=\"line\">Band Calcs</span><br><span class=\"line\">  ISTART =                  # 是否从当前目录读取 WAVECAR</span><br><span class=\"line\">  ICHARG =                  #  <span class=\"number\">1</span>: 读取 CHGCAR</span><br><span class=\"line\">                            # <span class=\"number\">10</span>: 不改变当前目录下的 CHGCAR</span><br></pre></td></tr></table></figure>\n<p>同时 <code>POTCAR</code> 这样获得：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat path/to/PPs/B/POTCAR &gt;&gt; ./POTCAR</span><br><span class=\"line\">cat path/to/PPs/C/POTCAR &gt;&gt; ./POTCAR</span><br></pre></td></tr></table></figure>\n<p>这里注意 <code>POTCAR</code> 中元素赝势的顺序应与 <code>POSCAR</code> 元素出现的顺序一致。</p>\n<h3 id=\"测出-SIGMA\"><a href=\"#测出-SIGMA\" class=\"headerlink\" title=\"测出 SIGMA\"></a>测出 <code>SIGMA</code></h3><p>固定<code>ENCUT</code>和kpts为较大的值<code>ENCUT = 600</code>、<code>kpts = 21</code>，固定晶格常数为“合适”值，取一系列<code>SIGMA</code>值做静态计算，当<code>OSZICAR</code>中<code>dE</code>绝对值小于 1.0 meV/atom 时取最大的 <code>SIGMA</code> 值。</p>\n<p>使用脚本如下（参考候柱锋老师的入门指南）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">rm WAVECAR          <span class=\"comment\"># 删除目录中的 WAVECAR 以免影响收敛</span></span><br><span class=\"line\"><span class=\"comment\"># in 后面 0.20 0.10 0.05 即为 sigma 所取的值，一般从大到小取，取值越小计算量越大当发现 dE 满足要求后可以及时终止计算</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> 0.20 0.10 0.05\t</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    cat &gt; INCAR &lt;&lt;! <span class=\"comment\"># 在 INCAR 中覆盖以下内容, ! 表示cat内容终止标志，可以自定义，如用 EOF</span></span><br><span class=\"line\">SYSTEM = Na adsorbed on site 1</span><br><span class=\"line\">ENCUT = 600         <span class=\"comment\"># 截断能取较大值</span></span><br><span class=\"line\">ISMEAR = 0          <span class=\"comment\"># Gaussian Smearing</span></span><br><span class=\"line\">SIGMA = <span class=\"variable\">$i</span>          <span class=\"comment\"># 每次循环 SIGMA 取 $i 的值</span></span><br><span class=\"line\">NSW = 0             <span class=\"comment\"># 静态计算，离子步数为 1</span></span><br><span class=\"line\">IBRION = -1\t        <span class=\"comment\"># 静态计算</span></span><br><span class=\"line\">LWAVE = .FALSE.     <span class=\"comment\"># 不输出 WAVECAR，不使用上次计算所得平面波系数作为初始值</span></span><br><span class=\"line\">!</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\" SIGMA = <span class=\"variable\">$i</span> eV \"</span></span><br><span class=\"line\">    time vasp &gt;&gt; vasp.log   <span class=\"comment\"># 执行 vasp 计算，重定向输出到 vasp.log ，并对该过程计时，结果输出到 stdout</span></span><br><span class=\"line\">    <span class=\"comment\"># OUTCAR 中 EENTRO 等于 OSZICAR 中的 dE，这里取出 dE</span></span><br><span class=\"line\">    TS=`grep <span class=\"string\">\"EENTRO\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%12.6f\", $5&#125;'</span>`</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$i</span>   <span class=\"variable\">$TS</span>\"</span> &gt;&gt; sigma.txt     <span class=\"comment\"># 输出 SIGMA 和 dE 到sigma.txt</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\n\\n\"</span>   <span class=\"comment\"># 换行 3 次</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>所得 sigma.txt 内容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0.20   -0.00519083</span><br><span class=\"line\">0.10   -0.00009427</span><br><span class=\"line\">0.05   0.00000000</span><br></pre></td></tr></table></figure>\n<p>显然，这里<code>SIGMA</code>取 0.10 即可，当然还可以在 (0.10, 0.20) 之间再取几个点，逼近使 dE &lt; 1meV/atom 的最大 SIGMA。</p>\n<h3 id=\"测出-ENCUT\"><a href=\"#测出-ENCUT\" class=\"headerlink\" title=\"测出 ENCUT\"></a>测出 <code>ENCUT</code></h3><p>将上面测出的 <code>SIGMA = 0.10</code> 固定，<code>ENCUT</code> 取不同值，过程与上面类似，只是判断 <code>ENCUT</code> 取值的依据变成了两次计算结果的<code>TOTEN</code>之差绝对值小于 1 meV/atom。</p>\n<p>使用脚本如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm WAVECAR</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> 300 350 400 450 500 550 600 <span class=\"comment\"># 每次循环 ENCUT 的取值</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    cat &gt; INCAR &lt;&lt;!</span><br><span class=\"line\">SYSTEM = Na adsorbed on site 1</span><br><span class=\"line\">ENCUT = <span class=\"variable\">$i</span></span><br><span class=\"line\">ISMEAR = 0</span><br><span class=\"line\">SIGMA = 0.10\t\t<span class=\"comment\"># SIGMA 取上面测得的值</span></span><br><span class=\"line\">NSW = 0</span><br><span class=\"line\">IBRION = -1</span><br><span class=\"line\">!</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\" ENCUT = <span class=\"variable\">$i</span> eV \"</span></span><br><span class=\"line\">    time vasp &gt;&gt; vasp.log</span><br><span class=\"line\">    E=`grep <span class=\"string\">\"TOTEN\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%12.6f\", $5&#125;'</span>`\t<span class=\"comment\"># 取出 OUTCAR 中的 TOTEN</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$i</span>   <span class=\"variable\">$E</span>\"</span> &gt;&gt; encut.txt</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"E = <span class=\"variable\">$E</span>\\n\\n\"</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>测得 <code>ENCUT</code> 取值为 450。这里 <code>ENCUT</code> 如果取值过小，后面在弛豫时很可能能量不会收敛。</p>\n<h3 id=\"测出-kpts\"><a href=\"#测出-kpts\" class=\"headerlink\" title=\"测出 kpts\"></a>测出 kpts</h3><p>kpts 指的是 <code>KPOINTS</code> 里 meshgrid 的取样点数，取样越多，计算结果收敛越好，同时计算量也变大。取值条件与上面相同，即两次计算的 <code>TOTEN</code> 相差小于 1meV/atom 。</p>\n<p><strong>注意，不要忘了把测好的 <code>SIGMA</code> 和 <code>ENCUT</code> 写入 <code>INCAR</code></strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm WAVECAR</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> 9 13 17 21\t<span class=\"comment\"># kpts 取 9 13 17 21</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    cat &gt; KPOINTS &lt;&lt;!</span><br><span class=\"line\">Na adsorbed on site1 -- det_kp</span><br><span class=\"line\">0</span><br><span class=\"line\">Monkhorst-Pack\t\t<span class=\"comment\"># 只要第一个字母为 M 即可</span></span><br><span class=\"line\">    <span class=\"variable\">$i</span>  <span class=\"variable\">$i</span>  1\t\t<span class=\"comment\"># 有真空层存在，z方向采样点数为 1</span></span><br><span class=\"line\">    0   0   0</span><br><span class=\"line\">!</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"k mesh = <span class=\"variable\">$i</span>\\t<span class=\"variable\">$i</span>\\t1\"</span>; time vasp &gt;&gt; vasp.log</span><br><span class=\"line\">    E=`grep <span class=\"string\">\"TOTEN\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%18.10f\", $5&#125;'</span>`</span><br><span class=\"line\">    KP=`grep <span class=\"string\">\"irreducible\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%5i\", $2&#125;'</span>`</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span> <span class=\"variable\">$KP</span> <span class=\"variable\">$E</span> &gt;&gt; det_kp.txt</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>测得 kpts 取15。</p>\n<p><strong>第二个坑</strong>：<code>KPOINTS</code> 文件名一定要写对，本渣使用的 <code>VASP</code> 版本为 5.3.5，计算中如果没检测到 <code>KPOINTS</code> 文件存在，则<strong>默认</strong> kpts 取值为 <strong>3</strong> ，导致结果错误。本渣某次计算中误将 <code>KPOINTS</code> 写成了 <code>KPOINS</code> ，导致后面无论如何修改参数，结果与文献值始终相差很大。（这个东西不仅坑了我，还坑了<strong>比那名居腿娘</strong>(来自WHU的EE大佬)大神熬夜到 3 点多，说来惭愧……</p>\n<h3 id=\"测出-a\"><a href=\"#测出-a\" class=\"headerlink\" title=\"测出 a\"></a>测出 <code>a</code></h3><p>这里的<code>a</code>确切地指 <code>POSCAR</code> 中第二行的那个数值，即元胞的放大系数。因为本例中的晶格基矢模长 $|\\vec{a_1}| = |\\vec{a_2}| = 1$ ，故其放大系等于文献中的晶格常数 $a$。这里 <code>a</code> 的取值条件与上面相同。给出测试脚本如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm WAVECAR</span><br><span class=\"line\"><span class=\"comment\"># 晶格参数的取值应在文献值附近取点</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> 4.97 5.02 5.07 5.12 5.17 5.22 5.27 5.32 5.37</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    cat &gt; POSCAR &lt;&lt;!</span><br><span class=\"line\">C3B graphene like structure, a = 5.17</span><br><span class=\"line\">   <span class=\"variable\">$i</span></span><br><span class=\"line\">    0.8660254037   -0.5000000000    0.0000000000</span><br><span class=\"line\">    0.8660254037    0.5000000000    0.0000000000</span><br><span class=\"line\">    0.0000000000    0.0000000000    3.0000000000</span><br><span class=\"line\">   B    C</span><br><span class=\"line\">   2    6</span><br><span class=\"line\">Direct</span><br><span class=\"line\">    0.0000000000    0.0000000000    0.0000000000    ! B1</span><br><span class=\"line\">    0.6666666666    0.6666666666    0.0000000000    ! B2</span><br><span class=\"line\">    0.5000000000    0.0000000000    0.0000000000    ! C1</span><br><span class=\"line\">    0.1666666666    0.1666666666    0.0000000000    ! C2</span><br><span class=\"line\">    0.0000000000    0.5000000000    0.0000000000    ! C3</span><br><span class=\"line\">    0.5000000000    0.5000000000    0.0000000000    ! C4</span><br><span class=\"line\">    0.6666666666    0.1666666666    0.0000000000    ! C5</span><br><span class=\"line\">    0.1666666666    0.6666666666    0.0000000000    ! C6</span><br><span class=\"line\">!</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -e <span class=\"string\">\"a = <span class=\"variable\">$i</span> angstrom\"</span>; time vasp &gt;&gt; vasp.log</span><br><span class=\"line\">\tE=`grep <span class=\"string\">\"TOTEN\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%12.6f\", $5 &#125;'</span>`</span><br><span class=\"line\">\tV=`grep <span class=\"string\">\"volume\"</span> OUTCAR | tail -1 | awk <span class=\"string\">'&#123;printf \"%12.4f\", $5&#125;'</span>`</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span> <span class=\"string\">\"%6.3f %10.4f %18.10f\\n\"</span> <span class=\"variable\">$i</span> <span class=\"variable\">$V</span> <span class=\"variable\">$E</span> &gt;&gt; a.txt</span><br><span class=\"line\">\ttail -1 a.txt</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>测得 <code>a</code> 与文献值相同，5.17。这里的 <code>a</code> 还可以取得更精细一些，甚至可以到小数点后三位，这里取值越接近“真实值”，后面弛豫的过程将会越短。</p>\n<h2 id=\"弛豫（结构优化，relaxation）\"><a href=\"#弛豫（结构优化，relaxation）\" class=\"headerlink\" title=\"弛豫（结构优化，relaxation）\"></a>弛豫（结构优化，relaxation）</h2><p>弛豫中需要用到的 <code>INCAR</code> 参数有</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ISMEAR = <span class=\"number\">0</span>       <span class=\"comment\">! 继承自上面的计算结果</span></span><br><span class=\"line\">SIGMA = <span class=\"number\">0.1</span></span><br><span class=\"line\">ENCUT = <span class=\"number\">450</span></span><br><span class=\"line\"></span><br><span class=\"line\">PREC = Accurate</span><br><span class=\"line\">EDIFF = <span class=\"number\">1.0E-6</span></span><br><span class=\"line\">EDIFFG = -<span class=\"number\">0.01</span></span><br><span class=\"line\">IBRION = <span class=\"number\">1</span>       <span class=\"comment\">! 准牛顿法</span></span><br><span class=\"line\">ISIF = <span class=\"number\">3</span>         <span class=\"comment\">! 计算 force、stress tensor，对离子、晶格进行弛豫 </span></span><br><span class=\"line\"></span><br><span class=\"line\">NELMIN = <span class=\"number\">6</span>       <span class=\"comment\">! (optional) 强制每个离子步跑至少 6 电子步，提高收敛效果</span></span><br><span class=\"line\">NSW = <span class=\"number\">200</span>        <span class=\"comment\">! 离子步上限为 200 步，目前本渣所算的体系中离子步数没有超过这个值的，也许是我太年轻了吧</span></span><br></pre></td></tr></table></figure>\n<p>这个步骤耗时最长，尤其是加上 <code>PREC</code> 后，每个电子步计算量上升很多，而为了结构的优化，离子步数的增多也使这个过程耗时不少，本例中 8 个原子的体系优化需要数个小时；本渣另外的一个体系中有 12 个原子，优化就需要 12h+ 。</p>\n<p><strong>第三个坑</strong>：<code>EDIFFG</code>有正负之分，<strong>负数</strong>表示收敛的力判据。如果<code>EDIFFG</code>误写为正，则<code>EDIFF</code>会被覆盖，<code>VASP</code>按照<code>EDIFFG</code>进行收敛判断，结果就是收敛可能会变得很快（快上几个数量级），但是所得结构不是我们想要的结构。</p>\n<p><strong>第四个坑</strong>：如果 <code>EDIFF</code>和<code>EDIFFG</code>设置过小，则计算时收敛可能会变得非常漫长，有时甚至会将结构跑散——原子间距离越来越大，这时候有三种选择：1. 提高精度，重新测出晶格常数，晶格常数可以精确到 0.001；2. 放宽收敛判据； 3. <code>IBRION</code> 取 2 （如果你对这个结构是否稳定没有信心的话。</p>\n<h2 id=\"高精度的电子自洽计算（SCF）\"><a href=\"#高精度的电子自洽计算（SCF）\" class=\"headerlink\" title=\"高精度的电子自洽计算（SCF）\"></a>高精度的电子自洽计算（SCF）</h2><p>进行高精度的电子自洽计算是为了得到体系的电荷分布，同时也为后面计算能带提供数据。</p>\n<p>这一步需要<strong>将 relaxation 得到的 CONTCAR 复制到 SCF 计算目录下，并重命名为 POSCAR</strong> ，<code>INCAR</code> 内容相似，仅将弛豫相关参数修改即可，<code>INCAR</code> 如下</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C3B Mono Layer  strcut_optim</span><br><span class=\"line\">  SYSTEM = <span class=\"string\">\"C3B Mono Layer\"</span> # System <span class=\"keyword\">Name</span></span><br><span class=\"line\"></span><br><span class=\"line\">Electronic minimization</span><br><span class=\"line\">  ISMEAR = <span class=\"number\">0</span>                # Toggle Gaussian Method, complete later</span><br><span class=\"line\">  SIGMA = <span class=\"number\">0.1</span>               # Broadening <span class=\"keyword\">in</span> eV -<span class=\"number\">4</span>-tet-<span class=\"number\">1</span>-fermi <span class=\"number\">0</span>-gaus</span><br><span class=\"line\">  EDIFF = <span class=\"number\">1.E-6</span>             # Energy tolerance eV/atom</span><br><span class=\"line\">#  EDIFFG = -<span class=\"number\">0.01</span>            # Force tolerance</span><br><span class=\"line\">  PREC = Accurate           # Accuracy</span><br><span class=\"line\">  IBRION = -<span class=\"number\">1</span>               # quasi-Newton algorithm</span><br><span class=\"line\">#  ISIF = <span class=\"number\">3</span>                  # optim totally: volume, stress, force, ion, <span class=\"built_in\">shape</span></span><br><span class=\"line\"></span><br><span class=\"line\">Ionic minimization</span><br><span class=\"line\">  NSW = <span class=\"number\">0</span>                   # Converge steps, must set</span><br><span class=\"line\">  ENCUT = <span class=\"number\">450</span>               # components beyond ENCUT are <span class=\"string\">'removed'</span> from the projection</span><br><span class=\"line\">                            # operators</span><br><span class=\"line\">  LWAVE = .TRUE.            # Output WAVECAR</span><br><span class=\"line\">  LCHARG = .TRUE.           # Output density of charge to CHG and CHGCAR</span><br><span class=\"line\">  NCORE = <span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n<p>由于默认输出 <code>CHGCAR</code> ， <code>INCAR</code> 中的 <code>LCHARG</code> 可以不写。</p>\n<h2 id=\"计算能带（band）\"><a href=\"#计算能带（band）\" class=\"headerlink\" title=\"计算能带（band）\"></a>计算能带（band）</h2><p><strong>复制 SCF 计算所得 CHGCAR 到 band 计算目录下。</strong></p>\n<p>我们需要重写 <code>KPOINTS</code> ，之前的 <code>KPOINTS</code> 一直是系统帮助我们在布里渊区采样，现在我们想要得到布里渊区某一路径上能带的能量变化，则需要在 <code>KPOINTS</code> 指定出路径。</p>\n<p>根据 <a href=\"https://arxiv.org/abs/1004.2974\" target=\"_blank\" rel=\"noopener\">DOI:10.1016/j.commatsci.2010.05.010</a> 后面所给资料提示选择对应的布里渊区 K 点路径（注意文中基矢的取法是否与自己一致，否则需要重新画出布里渊区，找出对应的 K 点。这里在寻找 K 点时可以借助 <a href=\"http://www.xcrysden.org/\" target=\"_blank\" rel=\"noopener\">XCrysDen</a> ，选择 K-Point path 即可</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/FpmnmrDYGQOgi2NLIPUvy31t0c4p\" alt=\"这里取 Gamma -&gt; K -&gt; M -&gt; Gamma\"></p>\n<p>写出 <code>KPOINTS</code> 如下：</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">K-POINTS    C3B Mono Layer Bands\t<span class=\"comment\">! 注释行</span></span><br><span class=\"line\">    <span class=\"number\">40</span>\t\t\t\t\t\t\t\t<span class=\"comment\">! 每两个K点之间取样点数</span></span><br><span class=\"line\">Line-mode\t\t\t\t\t\t\t<span class=\"comment\">! Line-mode，区别于自动取样模式，跑能带专用</span></span><br><span class=\"line\"><span class=\"keyword\">Rec</span>\t\t\t\t\t\t\t\t\t<span class=\"comment\">! 在倒空间内取点</span></span><br><span class=\"line\">    <span class=\"number\">0</span>       <span class=\"number\">0</span>       <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! Gamma</span></span><br><span class=\"line\">    <span class=\"number\">0.33333</span> <span class=\"number\">0.66666</span> <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! K</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">0.33333</span> <span class=\"number\">0.66666</span> <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! K</span></span><br><span class=\"line\">    <span class=\"number\">0.5</span>     <span class=\"number\">0.5</span>     <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! M</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">0.5</span>     <span class=\"number\">0.5</span>     <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! M</span></span><br><span class=\"line\">    <span class=\"number\">0</span>       <span class=\"number\">0</span>       <span class=\"number\">0</span>   \t\t\t<span class=\"comment\">! Gamma</span></span><br></pre></td></tr></table></figure>\n<p>同时在 <code>INCAR</code> 中加上 <code>ICHARG = 11</code> 以读取 SCF 所得 <code>CHGCAR</code> 进行能带计算。</p>\n<p>最后，取所得 <code>vasprun.xml</code> 导入 <code>p4vasp</code> 进行绘制能带图。如果读者有兴趣可以以 <code>EIGENVAL</code>  文件为输入自己实现绘制band的程序（不会很难）。</p>\n<blockquote>\n<p>跑能带的感觉就和抽卡/开箱是一样的，你永远也不知道下一个体系的 band 会是什么鸟样。</p>\n</blockquote>\n<p>跑出的能带是这个样子</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/Fodl8Omy6tyxekWIF6pAxHI_lPkN\" alt></p>\n<p>文献中的截图是这个样子的</p>\n<p><img src=\"http://owucpthrj.bkt.clouddn.com/Fp0bJ1vUyw-dm2uxoVXt61hm6ka_\" alt></p>\n<p>这里解释一下，本渣最初在跑 band 时 K 点取的路径和文献不同，所以两幅图基本等于对方水平翻转所得，但本文中所给 <code>KPOINTS</code> 里 K 点路径与文献是相符的。细心的大神已经看出两幅图中上图似乎向下平移了一部分，这可能是费米能级的取值差异所致，由于本渣水平太低，姑且只能这样理解了。</p>\n<h2 id=\"计算态密度（DOS）\"><a href=\"#计算态密度（DOS）\" class=\"headerlink\" title=\"计算态密度（\bDOS）\"></a>计算态密度（\bDOS）</h2><p>如果阅读过文献的话，我们会发现文献中经常和能带图一起出现的还有 <em>态密度</em> 图。何为态密度\b？<a href=\"https://zh.wikipedia.org/zh-hans/%E7%8A%B6%E6%80%81%E5%AF%86%E5%BA%A6\" target=\"_blank\" rel=\"noopener\">Wikipedia</a> 上的解释为某一能量周围单位区间内的微观状态数量。具体到本文，\b\b上面的微观状态\b便是\b指占据某能级的电子态。</p>\n<h1 id=\"论检查输入文件正确性的重要性\"><a href=\"#论检查输入文件正确性的重要性\" class=\"headerlink\" title=\"论检查输入文件正确性的重要性\"></a>论检查输入文件正确性的重要性</h1><p>这里的输入文件指 <code>VASP</code> 计算时需要用到的文件，如<code>INCAR</code>、<code>POSCAR</code>、<code>POTCAR</code>、<code>KPOINTS</code>、<code>CHGCAR</code>等。</p>\n<ol>\n<li>文件名是否正确。我知道很多人在 <code>bash</code> 中喜欢用 Tab 补全，这对提高命令输入效率非常有效，但同时也降低了我们检查文件名正确性的机会，上文中提到的 <code>KPOINS</code> 错误就是因为一直使用 Tab 补全而使它一直被继承到跑出 band ，还不止坑了自己，多么可笑；</li>\n<li>脚本中重定向输出的文件名是否与需求一致。当使用上一次计算的脚本进行修改时本渣很容易忘了修改输出重定向的目标，从而导致 <code>POSCAR</code> 的内容被输出到 <code>KPOINTS</code> 里，这时 <code>VASP</code> 会报错，遇到这种情况及时修改脚本重新提交任务即可，无非是重新排队的问题；</li>\n<li><code>POTCAR</code> 是否与体系相对应。有的论文并不明确说出自己使用哪个 <code>POTCAR</code> ，而是这样说：”We treated 4p, 5s, 4d orbitals of xx, and x orbitals of xxx as valence electrons…”，这就表明我们需要考虑使用带 <code>_pv</code> 、 <code>_sv</code> 的 <code>POTCAR</code> 。<strong>这大概是本人近期踩过的最大的坑了吧</strong>，可以想象，如果从一开始的 <code>POTCAR</code> 就出了问题，那么后面所有的计算就都是徒劳的，而在排错时无论如何也很难将目光投向 <code>POTCAR</code> 。这里要特别感谢 <strong>比那名居腿娘</strong> 同学的帮助；</li>\n<li><code>POSCAR</code> 中的晶胞是否需要超胞。有的文献中给出一个 band 图但未给出其对应的结构，本渣按照前文所给结构计算，始终无法得到与文献相符的 band 图，直到本渣使用 2x2 超胞后的结构进行计算，终于重复出和文献很接近的结果；</li>\n<li>有时在弛豫后进行 SCF 计算时会提示对称性错误，这时需要在 <code>INCAR</code> 中指定 <code>SYMPREC</code> 的值，这个值默认为<code>SYMPREC = 1.0E-5</code>，指定时可以使用更小的值。</li>\n</ol>\n<p>除了上面说到的 <code>INCAR</code>、<code>POSCAR</code>、<code>POTCAR</code>、<code>KPOINTS</code>、<code>CHGCAR</code>等，有时还会用到 <code>WAVECAR</code> ，<code>WAVECAR</code> 是二进制文件，在使用 FileZilla 传送时，如果没有勾选 <code>binary</code> 选项，则传送时会按照 ASCII 编码进行传送，后果就是 <code>WAVECAR</code> 文件损坏。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ol>\n<li>VASP软件包的使用入门指南——候柱锋</li>\n<li>VASP the GUIDE(April 20, 2016)——Kresse, Martijn Marsman , Jurgen Furthmuller</li>\n<li><a href=\"https://arxiv.org/abs/1004.2974\" target=\"_blank\" rel=\"noopener\">High-throughput electronic band structure calculations: challenges and tools</a> ——<a href=\"https://arxiv.org/find/cond-mat/1/au:+Setyawan_W/0/1/0/all/0/1\" target=\"_blank\" rel=\"noopener\">Wahyu Setyawan</a>, <a href=\"https://arxiv.org/find/cond-mat/1/au:+Curtarolo_S/0/1/0/all/0/1\" target=\"_blank\" rel=\"noopener\">Stefano Curtarolo</a></li>\n</ol>\n<p>这次 blog 就写到这里吧，反正也是为自己写的。（当然如果有大佬愿意在评论区指出其中的错误，本渣感激不尽！</p>\n<p>最后祝愿各位读到这里的菊苣，提前（</p>\n"},{"title":"简单理解 Hatree-Fock 方法","date":"2019-01-18T15:11:20.000Z","_content":"\n# 多原子分子体系S-方程的描述\n\n## Hamiltonian 算符\n\n在非相对论近似下，分子体系满足多体 Schrodinger 方程：\n$$\n\\hat { H } \\Phi = \\varepsilon \\Phi\n$$\n其中 $\\hat{H}$ 是分子体系的 Hamiltonian 算符，$\\Phi$ 是分子体系的波函数。\n\n设一个分子体系含 $M$ 个核，$N$ 个电子，则它的 Hamiltonian 可以写成\n\n$$\n\\begin{align*}\n\\hat { H } ={}& \\hat { T } _ { e } + \\hat { T } _ { N } + \\hat { V } _ { N e } + \\hat { V } _ { e e } + \\hat { V } _ { N N } \\\\\n={}& - \\sum _ { i = 1 } ^ { N } \\frac { 1 } { 2 } \\nabla _ { i } ^ { 2 } - \\sum _ { \\alpha = 1 } ^ { M } \\frac { 1 } { 2 M _ { \\alpha } } \\nabla _ { \\alpha } ^ { 2 } - \\sum _ { i = 1 } ^ { N } \\sum _ { \\alpha = 1 } ^ { M } \\frac { Z _ { \\alpha } } { r _ { i \\alpha } } + \\sum _ { i = 1 } ^ { N } \\sum _ { j > i } ^ { N } \\frac { 1 } { r _ { i j } } + \\sum _ { \\alpha = 1 } ^ { M } \\sum _ { \\beta > \\alpha } ^ { M } \\frac { Z _ { \\alpha } Z _ { \\beta } } { R _ { \\alpha \\beta } }\n\\end{align*} \\tag{2}\n$$\n\n式子中 $\\alpha, \\beta$ 表示原子核的标号，$Z_{\\alpha}$ 表示核电荷数，$M_{\\alpha}$ 表示原子核的质量（原子单位制）， $i,j$ 表示电子的标号。\n\n### Born-Oppenheimer 近似\n\nBorn-Oppenheimer 近似：电子的质量远远小于核的质量，故核的运动相对于电子是相当缓慢的，因此研究电子的运动行为时认为核是不动的，就好比放牛时牛和它周围的牛蝇运动一样。\n\n经过 Born-Oppenheimer 近似，电子与核的运动被解耦，它们被分开处理，分子的波函数可以写成电子波函数和核波函数乘积的形式，即\n$$\n\\Phi = \\Psi _ { e l } \\Psi _ { N } \\notag\n$$\n于是电子运动和核的运动分别描述为\n$$\n\\begin{cases}\n\\left( \\hat { T } _ { e } + \\hat { V } _ { N e } + \\hat { V } _ { e e } \\right) \\Psi _ { e l } = E _ { e l } \\Psi _ { e l }\\\\\n\\left(\\hat { T } _ { N } + \\hat { V } _ { N N }\\right) \\Psi _ { N } = \\left( \\varepsilon - E _ { e l } \\right) \\Psi _ { N }\n\\end{cases} \\label{eq:oppenheimer}\n$$\n\n$\\eqref{eq:oppenheimer}$ 式中第一个方程即为电子的运动方程，也是量子化学主要研究的问题。\n\n### 平均场近似\n\n忽略电子之间的瞬时运动关联，每个电子视为在核与其他电子建立的平均势场中运动。每个电子的状态用一个分子轨道（分子波函数）描述，即\n$$\n\\hat { h } ( 1 ) \\psi _ { i } ( 1 ) = \\varepsilon _ { i } \\psi _ { i } ( 1 ) \\label{eq:mo}\n$$\n其中 $\\{ \\psi_i \\}$ 为分子轨道（MO）； $\\{ \\epsilon_i \\}$ 为轨道能 。\n\n其中单电子算符 $ \\hat { h } ( 1 ) = - \\frac { 1 } { 2 } \\nabla _ { 1 } ^ { 2 } + \\sum _ { a } - \\frac { Z _ { a } } { r _ { 1 a } } + \\hat { v } _ { e f f } ( 1 ) $ ， $\\hat { v } _ { e f f } ( 1 )$ 是等效单电子势，即其他电子对该电子相互作用的等效作用势。\n\n总电子的波函数用行列式波函数（Slater 行列式）描述，总电子能量为\n\n$$\nE _ { e l } = \\left\\langle \\Psi \\left| H _ { e l } \\right| \\Psi \\right\\rangle\n$$\n\n###  LCAO 近似\n\n分子轨道取为某些合理的原子轨道线性组合：\n$$\n\\psi _ { i } = \\sum _ { v } c _ { v i } \\varphi _ { v } \\label{eq:lcao}\n$$\n$\\eqref{eq:lcao}$ 中$c_{vi}$ 表示原子轨道的系数， $\\varphi_v$ 表示原子轨道。\n\n注：这里的分子轨道指自旋轨道，区别于空间轨道。（自旋轨道 = 空间轨道 * 自旋， $\\psi_i = \\varphi_i \\eta_i$）\n\n## 行列式波函数\n\n由于电子具有交换反对称性，简单乘积波函数\n$$\n\\Phi = \\prod_i \\psi_i\n$$\n不能描述这个性质，故必须使用 Slater 行列式描述体系的波函数，即：\n$$\n\\begin{align}\n\\Psi \\left( q _ { 1 } , \\cdots , q _ { N } \\right) ={}& \\frac { 1 } { \\sqrt { N ! } } \\nonumber\n\\begin{vmatrix} \\begin{array} { c c c } { \\psi _ { 1 } \\left( q _ { 1 } \\right) } & { \\cdots } & { \\psi _ { 1 } \\left( q _ { N } \\right) } \\\\ { \\psi _ { 2 } \\left( q _ { 1 } \\right) }& \\cdots & { \\psi _ { 2 } \\left( q _ { N } \\right) } \\\\ { \\vdots }& \\ddots & { \\vdots } \\\\ { \\psi _ { N } \\left( q _ { 1 } \\right) }& \\cdots & { \\psi _ { N } \\left( q _ { N } \\right) } \\end{array} \\end{vmatrix} \\\\ \\nonumber\n={}& | \\psi _ { 1 } \\psi _ { 2 } \\cdots \\psi _ { N } \\rangle \\\\\n={}&  \\frac { 1 } { \\sqrt { N ! } } \\sum _ { n = 1 } ^ { N ! } ( - 1 ) ^ { P _ { n } } \\hat { P } _ { n } \\left\\{ \\psi _ { 1 } \\left( q _ { 1 } \\right) \\psi _ { 2 } \\left( q _ { 2 } \\right) \\cdots \\psi _ { N } \\left( q _ { N } \\right) \\right\\}  \\label{eq:slater}\n\\end{align}\n$$\n\n\n- $\\hat{P}$ 算符是交换算符， $\\hat{P}_{12}$ 表示将 1, 2 号轨道上的电子互换；\n- $\\eqref{eq:slater}$ 中的每个电子的分子轨道都满足正交归一性： $ \\left\\langle \\psi _ { i } | \\psi _ { j } \\right\\rangle = \\int \\psi _ { i } ^ { * } ( 1 ) \\psi _ { j } ( 1 ) d q _ { 1 } = \\delta _ { i j } $ （即每个电子只能占据一个轨道）；\n- 如果两个行列式波函数的自旋轨道不完全相同，则它们正交。\n\n## 库仑作用与交换作用\n\n### 库仑作用\n\n库仑作用是指两个电子（无论自旋是否相同）之间存在的静电相互作用：\n$$\n\\begin{aligned} J _ { 1 s 2 s } & = \\int \\frac { \\left| \\psi _ { 1 } ( 1 ) \\right| ^ { 2 } \\cdot \\left| \\psi _ { 2 } ( 2 ) \\right| ^ { 2 } } { r _ { 12 } } d q _ { 1 } d q _ { 2 } \\\\ & = \\int \\frac { \\left| \\varphi _ { 1 s } ( 1 ) \\right| ^ { 2 } \\cdot \\varphi _ { 2 s } \\left. ( 2 ) \\right| ^ { 2 } } { r _ { 12 } } d \\vec { r } _ { 1 } d \\vec { r } _ { 2 } \\int \\left| \\eta _ { 1 } ( 1 ) \\right| ^ { 2 } d \\omega _ { 1 } \\int \\left| \\eta _ { 2 } ( 2 ) \\right| ^ { 2 } d \\omega _ { 2 } \\end{aligned}\n$$\n\n### 交换作用\n\n以 He​ 体系为例：\n$$\n\\Psi ( 1,2 ) = \\frac { 1 } { \\sqrt { 2 } } \\left| \\begin{array} { l l } { \\psi _ { 1 } ( 1 ) } & { \\psi _ { 1 } ( 2 ) } \\\\ { \\psi _ { 2 } ( 1 ) } & { \\psi _ { 2 } ( 2 ) } \\end{array} \\right|\n$$\n则它的能量期待值为：\n$$\n\\begin{aligned}\nE ={}& \\frac { 1 } { 2 } \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) - \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\left| \\hat { h } ( 1 ) + \\hat { h } ( 2 ) + \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) - \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\\\\n={}& \\frac { 1 } { 2 } \\left\\{ 2 \\times \\left( \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } \\right) - 2 \\times \\left[ \\left\\langle \\psi _ { 1 } ( 1 ) | \\hat { h } ( 1 ) | \\psi _ { 2 } ( 1 ) \\right\\rangle \\left\\langle \\psi _ { 2 } ( 2 ) | \\psi _ { 1 } ( 2 ) \\right\\rangle +\\right. \\right. \\\\\n& \\left. \\left. \\left\\langle \\psi _ { 1 } ( 1 ) | \\psi _ { 2 } ( 1 ) \\right\\rangle \\left\\langle \\psi _ { 2 } ( 2 ) | \\hat { h } ( 2 ) | \\psi _ { 1 } ( 2 ) \\right\\rangle + \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\right]  \\right\\}\\\\\n={}& \\frac { 1 } { 2 } \\left\\{ 2 \\times \\left( \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } \\right) - 2 \\times \\left[ 0 + 0 + \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\right] \\right\\} \\\\\n={}& \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } - K _ { 1 s 2 s }\n\\end{aligned}\n$$\n上式中的 $K_{1s 2s} = \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle$ 即为交换能。\n\n交换作用是指**同自旋**的两个电子之间存在的相互作用：\n$$\n\\begin{aligned}\nK _ { 1s 2s } ={}& \\int \\frac { \\psi_ { 1 } ( 1 ) ^* \\psi _ { 2 } ( 2 ) ^* \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) } { r _ { 12 } } d q _ { 1 } d q _ { 2 } \\\\\n={} & \\int \\frac { \\varphi _ { 1 s } ( 1 ) ^ { * } \\varphi _ { 2 s } ( 2 ) ^* \\varphi _ { 2 s } ( 1 ) \\varphi _ { 1 s } ( 2 ) } { r _ { 12 } } d \\vec { r _ { 1 } } d \\vec { r _ { 2 } } \\int \\eta _ { 1 } ( 1 ) ^ { * } \\eta _ { 2 } ( 1 ) d \\omega _ { 1 } \\int \\eta _ { 2 } ( 2 ) ^ { * } \\eta _ { 1 } ( 2 ) d \\omega _ { 2 }\n\\end{aligned}\n$$\n\n- 当 $\\psi_1, \\psi_2$ 同自旋， $\\eta_1 = \\eta_2$ ，$K \\neq 0$ ($K>0$)；\n\n- 当 $\\psi_1, \\psi_2$ 反自旋， $\\eta_1 \\neq \\eta_2$ ，$K = 0$ 。\n\n  这一项可以通过求 Slater 行列式的能量期待值得到。\n\n**注**：$J_{11} - K_{11} = 0$ ，电子不存在自相关作用。\n\n### 行列式波函数的 Pros\n\n1. 行列式波函数部分地考虑了同自旋电子间的运动关联（不允许电子占据同一个自旋轨道）；\n2. 同自旋电子间存在交换作用，它使总能量降低；\n3. 多电子原子中，$n, l$ 相同的简并轨道上的电子，将分占磁量子数 $m$ 不同的轨道，并使其自旋平行（Hund 规则）\n\n## Slater-Condon 规则\n\nSlater-Condon 规则即为 Slater 行列式矩阵元的计算规则，\n\n$$\n\\left\\langle \\Psi ^ { \\prime } | \\hat { O } | \\Psi \\right\\rangle = \\int \\left[ \\left( \\Psi ^ { \\prime } \\right) ^* \\hat { O } \\Psi \\right] d q _ { 1 } \\cdots d q _ { N } = ?\n$$\n\n### 准备\n\n1. 算符：\n\n   1. 单电子算符：$ \\hat { O } _ { 1 } = \\sum _ { n } \\hat { h } ( n ) $ ；\n   2. 双电子算符： $ \\hat { O } _ { 2 } = \\sum _ { n < m } \\frac { 1 } { r _ { n m } } $ 。\n\n2. 行列式：\n\n   1. 对角矩阵元：\n      $$\n      | \\Psi ^ { \\prime } \\rangle = | \\Psi \\rangle \\nonumber\n      $$\n\n   2. 非对角矩阵元 1:\n      $$\n      \\begin{aligned} \n      | \\Psi \\rangle & = | \\psi _ { 1 } \\cdots \\psi _ { k } \\cdots \\psi _ { N } \\rangle \\\\ \n      | \\Psi ^ { \\prime } \\rangle & = | \\psi _ { 1 } \\cdots \\psi _ { a } \\cdots \\psi _ { N } \\rangle \\quad \\text{单激发组态} \\end{aligned}\n      $$\n\n   3. 非对角矩阵元 2:\n      $$\n      \\begin{array} { l } { | \\Psi \\rangle = | \\cdots \\psi _ { k } \\cdots \\psi _ { l } \\cdots \\rangle } \\\\ { | \\Psi ^ { \\prime \\prime } \\rangle = | \\dots \\psi _ { a } \\cdots \\psi _ { b } \\cdots \\rangle } \\quad \\text{双激发组态} \\end{array} \\nonumber\n      $$\n\n\n\n\n\n### 规则\n\n1. 重叠：\n\n   1. 对角矩阵元：\n      $$\n      \\langle \\Psi | \\Psi \\rangle = 1\n      $$\n\n   2. 单激发态&双激发态：\n      $$\n      \\left\\langle \\Psi ^ { \\prime } | \\Psi \\right\\rangle = 0\n      $$\n\n2. 单电子算符：\n\n   1. 对角矩阵元：\n      $$\n      \\left\\langle \\Psi \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = \\sum _ { i } \\left\\langle \\psi _ { i } | \\hat { h } | \\psi _ { i } \\right\\rangle = \\sum _ { i } \\langle i | \\hat { h } | i \\rangle\n      $$\n\n   2. 单激发态：\n      $$\n      \\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = \\left\\langle \\psi _ { a } | \\hat { h } | \\psi _ { k } \\right\\rangle = \\langle a | \\hat { h } | k \\rangle\n      $$\n\n   3. 双激发态：\n      $$\n      \\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = 0\n      $$\n\n3. 双电子算符：\n\n   1. 对角矩阵元：\n      $$\n      \\begin{aligned} \\left\\langle \\Psi \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle & = \\frac { 1 } { 2 } \\sum _ { i = 1 } ^ { N } \\sum _ { j = 1 } ^ { N } \\left\\langle \\psi _ { i } \\psi _ { j } | \\psi _ { i } \\psi _ { j } \\right\\rangle - \\left\\langle \\psi _ { i } \\psi _ { j } | \\psi _ { j } \\psi _ { i } \\right\\rangle \\\\ & = \\frac { 1 } { 2 } \\sum _ { i = 1 } ^ { N } \\sum _ { j = 1 } ^ { N } \\langle i j | i j \\rangle - \\langle i j | j i \\rangle \\end{aligned}\n      $$\n\n   2. 单激发态：\n      $$\n      \\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle = \\sum _ { i = 1 } ^ { N } \\langle i a | i k \\rangle - \\langle i a | k i \\rangle\n      $$\n\n   3. 双激发态：\n      $$\n      \\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle = \\langle a b | k l \\rangle - \\langle a b | l k \\rangle\n      $$\n\n\n\n\n\n\n\n# Hatree-Fock 方程\n\nHatree-Fock 方程（非正则形式）：\n$$\n\\left[ \\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right) \\right] \\psi _ { i } ( 1 ) = \\sum _ { j = 1 } ^ { N } \\varepsilon _ { i j } \\psi _ { j } ( 1 ) \\label{eq:hf_ununitary}\n$$\n其中，库伦算符和交换算符：\n$$\n\\begin{align}\n\\hat { J } _ { j } ( 1 ) \\psi _ { i } ( 1 ) = \\left[ \\int \\psi _ { j } ^ { * } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { j } ( 2 ) d q _ { 2 } \\right] \\psi _ { i } ( 1 ) \\\\\n \\hat { K } _ { j } ( 1 ) \\psi _ { i } ( 1 ) = \\left[ \\int \\psi _ { j } ^ { * } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { i } ( 2 ) d q _ { 2 } \\right] \\psi _ { j } ( 1 )\n \\end{align}\n$$\n$\\eqref{eq:hf_ununitary}$ 中 $\\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right)$ 可用 Fock 算符 $\\hat{f}(1)$ 简写代替。\n\n经过 Unitary 变换， $\\eqref{eq:hf_ununitary}$ 可以变换为正则形式，即：\n$$\n\\hat { f } ( 1 ) \\psi _ { i } ( 1 ) = \\varepsilon _ { i } \\psi _ { i } ( 1 )\n$$\n\n**注：$\\eqref{eq:fock}$ 中的 $\\hat { h } ( 1 ) = - \\frac { 1 } { 2 } \\nabla _ { 1 } ^ { 2 } - \\sum _ { \\alpha } \\frac { Z _ { \\alpha } } { r _ { 1 \\alpha } } $ 表示核 Hamiltonian 项，是单电子算符，与 $\\eqref{eq:mo}$ 中 $\\hat{h}(1)$ 的含义有所区别，请注意区分。**\n\n## Fock 算符的性质\n\nFock 算符：\n$$\n\\hat{f}(1) = \\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right) \\label{eq:fock}\n$$\n\n- Fock 算符是等效单电子的哈密顿算符，它的本征函数式分子轨道，本征值为轨道能；\n- Fock 算符是 Hermitian 算符（因为交换算符和库仑算符都是 Hermitian 算符，动能项以及核势能项也都是 Hermitian 算符）；\n- Fock 算符是分子点群的对称算符，分子轨道属于分子点群的不可约表示；\n- Fock 算符之和 $\\sum _ { n = 1 } ^ { N } \\hat { f } ( n ) = \\hat { H } ^ { H F } \\neq \\hat { H } _ { e l }$ ，它将电子间的作用重复计入。\n\n## 轨道能与电子总能量\n\n### 轨道能\n\n$$\n\\varepsilon _ { i } = \\left\\langle \\psi _ { i } | \\hat { f } | \\psi _ { i } \\right\\rangle\n= \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N } \\left( J _ { i j } - K _ { i j } \\right) \\label{eq:orb_en}\n$$\n\n$\\eqref{eq:orb_en}$ 中：\n\n- $\\varepsilon_i^0$ 为 $\\hat{h}(1)$ 的本征值， $\\varepsilon_i$ 为第 $i$ 个轨道的轨道能；\n- $ J _ { i j } = \\langle i j | i j \\rangle = \\int d q _ { 1 } d q _ { 2 } \\psi _ { i } ^ { * } ( 1 ) \\psi _ { j } ^ { * } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { i } ( 1 ) \\psi _ { j } ( 2 ) $；\n- $ K _ { i j } = \\langle i j | j i \\rangle = \\int d q _ { 1 } d q _ { 2 } \\psi _ { i } ^ { * } ( 1 ) \\psi _ { j } ^ { * } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { j } ( 1 ) \\psi _ { i } ( 2 ) $ 。\n\n### 电子总能量\n\n$$\nE _ { 0 } = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } \\left[ J _ { i j } - K _ { i j } \\right] \\label{eq:ele_en}\n$$\n\n$\\eqref{eq:ele_en}$ 中第二项的 $\\frac{1}{2}$ 表示去除因双重求和重复计入的交换能和库仑能 。\n\n**注：分子轨道能之和不等于电子总能**\n$$\n\\sum _ { i } ^ { N } \\varepsilon _ { i } = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } \\left[ J _ { i j } - K _ { i j } \\right] \\neq E _ { 0 } \n$$\n\n## Koopmans 定理\n\n假如从占据轨道 $\\psi_k$ 上电离一个电子而其他轨道不变，则分子的电离势为 $-\\varepsilon_k$ 。假定在空轨道 $\\psi_r$ 上亲和一个电子而其他轨道不变，则分子的电子亲和势为 $\\varepsilon_r$ ，简言之：当不考虑轨道弛豫时电离能/亲和能近似等于被电离/亲和电子的轨道能。\n\n### 电离能\n\n电离前：\n\n$$\n\\begin{align}\n&| \\Psi _ { 0 } ^ { N } \\rangle = | \\psi _ { 1 } \\cdots \\psi _ { k } \\cdots \\psi _ { N } \\rangle \\nonumber \\\\\n&E _ { 0 } = \\left\\langle \\Psi _ { 0 } ^ { N } | \\hat { H } | \\Psi _ { 0 } ^ { N } \\right\\rangle = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i } \\sum _ { j } \\left( J _ { i j } - K _ { i j } \\right) \\nonumber\n\\end{align}\n$$\n\n电离后：\n$$\n\\begin{align}\n | \\Psi _ { k } ^ { N - 1 } \\rangle ={}& | \\psi _ { 1 } \\cdots \\psi _ { k - 1 } \\psi _ { k + 1 } \\cdots \\psi _ { N } \\rangle  \\nonumber \\\\\n E _ { k } ^ { + } ={}& \\left\\langle \\Psi _ { k } ^ { N - 1 } | \\hat { H } | \\Psi _ { k } ^ { N - 1 } \\right\\rangle = \\sum _ { i \\neq k } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i \\neq k } \\sum _ { j \\neq k } \\left( J _ { i j } - K _ { i j } \\right) \\nonumber\n\\end{align}\n$$\n\n则电离能：\n$$\n\\begin{align}\nI.P. ={}& E _ { k } ^ { + } - E _ { 0 } \\\\\n={}& - \\varepsilon _ { k } ^ { 0 } - \\frac { 1 } { 2 } \\left[ \\sum _ { j } \\left( J _ { k j } - K _ { k j } \\right) + \\sum _ { i } \\left( J _ { i k } - K _ { i k } \\right) \\right] \\\\\n={}& - \\varepsilon _ { k } ^ { 0 } - \\sum _ { j } \\left( J _ { k j } - K _ { k j } \\right) = - \\varepsilon _ { k }\n\\end{align}\n$$\n\n### 亲和能\n\n与电离能同理， \n$$\nE . A . = E _ { 0 } - E _ { r } ^ { N + 1 } = - \\varepsilon _ { r } ^ { 0 } - \\sum _ { j } \\left( J _ { r j } - K _ { j r } \\right) = - \\varepsilon _ { r }\n$$\n\nKoopmans 定理提供了一种近似求解 $I.P$ 与 $E.A.$ 的方法，但它不考虑电离/亲和后的轨道弛豫和电子的相关效应（事实上整个 Hatree-Fock 近似也没有考虑相关效应），这样求得的电离能与亲和能有误差。\n\n# Roothan 方程\n\nRoothan 方程的本质是将 Hatree-Fock 方程的分子轨道用一系列基函数展开得到的方程。\n\n## 限制性与非限制性自旋轨道\n\n限制性自旋轨道：假设同一个分子轨道分为两个自旋相反的自旋轨道，它们的空间轨道部分完全相同。限制性自旋轨道一般用于描述闭壳层的电子行为。\n$$\n\\psi _ { a } \\left( q _ { 1 } \\right) \\longrightarrow \\left\\{ \\begin{array} { l } { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\alpha \\left( \\omega _ { 1 } \\right) } \\\\ { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\beta \\left( \\omega _ { 1 } \\right) } \\end{array} \\right.\n$$\n非限制性自旋轨道：同一个分子轨道中自旋轨道的空间轨道部分不同。\n$$\n\\psi _ { a } \\left( q _ { 1 } \\right) \\longrightarrow \\left\\{ \\begin{array} { l } { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\alpha \\left( \\omega _ { 1 } \\right) } \\\\ { \\varphi _ { i } ^ {\\color{red} \\prime } \\left( \\vec { r } _ { 1 } \\right) \\beta \\left( \\omega _ { 1 } \\right) } \\end{array} \\right.\n$$\n非限制性自旋轨道一般用于描述开壳层的电子行为。\n\n## 空间轨道的 HF 方程\n\n空间轨道的 Hatree-Fock 方程为：\n$$\n\\hat { f } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\varepsilon _ { i } \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\label{eq:hf_space}\n$$\n其中空间轨道的 Fock 算符为：\n$$\n\\begin{aligned} { f \\left( \\vec { r } _ { 1 } \\right) = \\hat { h } \\left( \\vec { r } _ { 1 } \\right) + \\sum _ { j = 1 } ^ { N / 2 } 2 \\hat { J } _ { j } \\left( \\vec { r } _ { 1 } \\right) - \\hat { K } _ { j } \\left( \\vec { r } _ { 1 } \\right) } \\\\ { \\hat { J } _ { j } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\left[ \\int \\frac { \\varphi _ { j } ^ { * } \\left( \\vec { r } _ { 2 } \\right) \\varphi _ { j } \\left( \\vec { r } _ { 2 } \\right) } { r _ { 12 } } d \\vec { r } _ { 2 } \\right] \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) } \\\\ { \\hat { K } _ { j } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\left[ \\int \\frac { \\varphi _ { j } \\left( \\vec { r } _ { 2 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 2 } \\right) } { r _ { 12 } } d \\vec { r _ { 2 } } \\right] \\varphi _ { j } \\left( \\vec { r } _ { 1 } \\right) } \\end{aligned}\n$$\n上面式子中 $ \\hat{K} $ 项前面没有 2 是因为该波函数为限制性自旋波函数，体系为闭壳层，自旋向上和自旋向下的电子个数相同，恰好有一半的空间轨道有电子占据，且这些空间轨道都已经占满，故只有自旋平行的电子之间有交换作用（即只有 $\\frac{N}{2}$ 个电子之间有交换作用）。\n\n分子轨道的轨道能（自旋轨道）：\n$$\n\\varepsilon_i =   \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N } \\left( J _ { i j } - K _ { i j } \\right)\n$$\n分子轨道的轨道能（空间轨道，闭壳层限制性）：\n$$\n\\varepsilon_i = \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N / 2 } \\left( 2 J _ { i j } - K _ { i j } \\right)\n$$\n电子总能量（自旋轨道）：\n$$\nE_0= \\sum _ { i } ^ { N } h _ { i i } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } J _ { i j } - K _ { i j }\n$$\n电子总能量（空间轨道，闭壳层限制性）：\n$$\nE _ 0 = \\sum _ { i } ^ { N / 2 } 2 h _ { i i } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N / 2 } \\sum _ { j } ^ { N / 2 } 2 J _ { i j } - K _ { i j }\n$$\n上式中第二项前的 $\\frac{1}{2}$ 表示已经减去重复计入的空间轨道的相互作用。\n\n## Roothaan 方程\n\n引入一组**已知**的基函数将空间轨道展开：\n$$\n\\varphi _ { i } = \\sum _ { v = 1 } ^ { m } C _ { vi } \\chi _ { v } \\quad i = 1,2 , \\cdots , m  \\label{eq:roothaan_base}\n$$\n将 $\\eqref{eq:roothaan_base}$ 代入 $\\eqref{eq:hf_space}$ 可以得到：\n$$\n\\hat { f } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\varepsilon _ { i } \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right)  \\quad i = 1,2 , \\cdots , m\n$$\n上式左乘 $\\chi_{\\mu}^* (1)$ 并积分，得到：\n$$\n\\sum _ { v } ^ { m } C _ { v i } \\langle \\chi _ { \\mu } ( 1 ) | \\hat { f } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\varepsilon _ { i } \\sum _ { v } ^ { m } C _ { v i } \\langle \\chi _ { \\mu } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle \\quad i = 1,2 , \\cdots , m\n$$\n令 $ S _ { \\mu \\nu } = \\langle \\chi _ { \\mu } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\chi _ { v } ( 1 ) $ ，\n\n$ F _ { \\mu v } = \\langle \\chi _ { \\mu } ( 1 ) | \\hat { f } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) $ \n\n由此可以得到方程组：\n$$\n\\sum _ { v } ^ { m } F _ { \\mu \\nu } C _ { v i } = \\varepsilon _ { i } \\sum _ { v } ^ { m } S _ { \\mu \\nu } C _ { v i } \\quad i = 1,2 , \\cdots , m\n$$\n或者写成矩阵形式：\n$$\n\\mathbf { F C } _ { i } = \\varepsilon _ { i } \\mathbf { S } \\mathbf { C } _ { i } \\quad i = 1,2 , \\cdots , m\n$$\n合并写成矩阵方程：\n$$\n\\mathbf { F C } = \\mathbf { S } \\mathbf { C } \\boldsymbol { \\varepsilon } \\tag{*} \\label{eq:roothaan}\n$$\n$\\eqref{eq:roothaan}​$ 即为 Roothaan 方程。\n\n其中：\n$$\n\\mathbf { C } = \\left( \\begin{array} { c c c c } { C _ { 11 } } & { C _ { 12 } } & { \\cdots } & { C _ { 1 m } } \\\\ { C _ { 21 } } & { C _ { 22 } } & { \\cdots } & { C _ { 2 m } } \\\\ { C _ { 31 } } & { C _ { 32 } } & { \\cdots } & { C _ { 3 m } } \\\\ { \\vdots } & { \\vdots } & { } & { \\vdots } \\\\ { C _ { m 1 } } & { C _ { m 2 } } & { \\cdots } & { C _ { m m } } \\end{array} \\right) ,\\quad \n\\boldsymbol { \\varepsilon } = \\left( \\begin{array} { c c c c } { \\varepsilon _ { 1 } } & { } & { } & { O } \\\\ { } & { \\varepsilon _ { 2 } } & { } & { } \\\\ { } & { } & { \\ddots } & { } \\\\ { O } & { } & { } & { \\varepsilon _ { m } } \\end{array} \\right)\n$$\n它们分别表示分子轨道（空间轨道）和轨道能。\n\n$C_{ij}$ 表示第 $j$ 个分子轨道（空间轨道）第 $i$ 个基函数的系数。\n\n### 重叠矩阵\n\n$$\nS _ { \\mu \\nu } = \\langle \\chi _ { \\mu } ^ { * } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\chi _ { v } ( 1 )\n$$\n\n且\n$$\nS _ { \\mu \\nu } ^ { * } = \\left[ \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\chi _ { v } ( 1 ) \\right] ^ { * } = \\int d \\vec { r } _ { 1 } \\chi _ { v } ^ { * } ( 1 ) \\chi _ { \\mu } ( 1 ) = S _ { v \\mu }\n$$\n故 $\\mathbf{S}$ 为一个 $m \\times m$ 的 Hermitian 矩阵，且 $0 \\leq \\left| S _ { \\mu\\nu } \\right| \\leq 1$\n\n### Fock矩阵\n\n$$\n\\begin{aligned}\n\\mathbf{F} _ { \\mu \\nu } ={}& \\langle \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) \\rangle \\\\\n={}& \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) \\\\\n={} & h _ { \\mu v } ^ { c o r e } + \\sum _ { j } ^ { N / 2 } \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\left[ 2 \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right] \\chi _ { v } ( 1 )\n\\end{aligned}\n$$\n\n令 $\\varphi _ { j } = \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } \\chi _ { \\sigma }$ ，$ \\varphi _ { j } ^ { * } = \\sum _ { \\lambda } ^ { m } C _ { \\lambda j } ^ { * } \\chi _ { \\lambda } ^ { * } $  ，则\n$$\n\\begin{aligned}\n\\int \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { J } _ { j } ( 1 ) \\chi _ { v } ( 1 ) d \\vec { r } _ { 1 } = \\sum _ { \\lambda } ^ { m } \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } C _ { \\lambda j } ^ { * } \\langle \\mu v | \\lambda \\sigma \\rangle \\\\\n\\int \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { K } _ { j } ( 1 ) \\chi _ { v } ( 1 ) d \\vec { r } _ { 1 } = \\sum _ { \\lambda } ^ { m } \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } C _ { \\lambda j } ^ { * } \\langle \\mu {\\color{red} \\sigma} | \\lambda {\\color{red} v} \\rangle\n\\end{aligned}\n$$\n所以 Fock 矩阵的矩阵元可以进一步写成\n$$\n\\begin{aligned}\nF _ { \\mu \\nu } ={}& h _ { \\mu \\nu } ^ { c o r e } + \\sum _ { \\lambda , \\sigma } ^ { m , m } \\sum _ { j } ^ { N / 2 } C _ { \\sigma j } C _ { \\lambda j } ^ { * } [ 2 ( \\mu v | \\lambda \\sigma ) - ( \\mu \\sigma | \\lambda v ) ] \\\\\n={}& h _ { \\mu \\nu } ^ { c o r e } + \\sum _ { \\lambda , \\sigma } ^ { m , m } P _ { \\sigma \\lambda } [ 2 ( \\mu v | \\lambda \\sigma ) - ( \\mu \\sigma | \\lambda v ) ] \\\\\n={}& h _ { \\mu \\nu } ^ { c o r e } + G _ { \\mu \\nu }\n\\end{aligned}\n$$\n$G_{\\mu\\nu}$ 矩阵即为 Fock 矩阵的双电子项，由密度矩阵 $P_{\\sigma \\lambda}$和基函数的双电子积分给出。 \n\n### 密度矩阵\n\n定义密度矩阵：\n$$\nP _ { \\sigma \\lambda } = \\sum _ { j } ^ { N / 2 } C _ { \\sigma j } C _ { \\lambda j } ^ { * } = \\sum _ { j } ^ { N / 2 } ( C ) _ { \\sigma j } \\left( C ^ { \\dagger } \\right) _ { j \\lambda }\n$$\n$C$ 是分子轨道基函数的展开系数。\n\n由于闭壳层的限制性，只有 $N/2$ 个空间轨道占有电子，且都占满，故密度矩阵通常等于\n$$\nP = C _ { 0 } C _ { 0 } ^ { \\dagger } = \\left( \\begin{array} { c c c } { \\vdots } & { } & { } \\\\ { c _ { \\sigma 1 } } & { \\dots } & { c _ { \\sigma N / 2 } } \\\\ { \\vdots } & { } & { } \\end{array} \\right) \\left( \\begin{array} { c c c } { } & { c _ { \\lambda 1 } ^ { * } } \\\\ { \\ldots } & { \\vdots } & { \\cdots } \\\\ { } & { c _ { \\lambda N / 2 } ^ { * } } \\end{array} \\right)\n$$\n\n## 基的幺正化\n\nRoothaan 方程 $\\mathbf { F C } = \\mathbf { S } \\mathbf { C\\varepsilon } $  不是标准的矩阵本征值方程，如果 $\\mathbf{S}  = 1$，则 $\\mathbf { F C } = \\mathbf { C } \\varepsilon$  是标准的本征值方程。所以要对 Roothaan 方程进行  Unitary 变换使其满足标准本征值方程，才能进行求解。\n\n构造变换矩阵 $\\mathbf{X}​$ 使得 \n$$\n\\mathbf { X } ^ { \\dagger } \\mathbf { S X } = \\mathbf { S } ^ { \\prime } = \\mathbf { I }\n$$\n\n则构造变换后的 Fock 矩阵 $\\mathbf{F}'$\n\n$$\n\\mathbf { F } ^ { \\prime } = \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X }\n$$\n继续假设原系数矩阵 $\\mathbf { C } = \\mathbf { X } \\mathbf { C } ^ { \\prime }$ ，此时得到变换后的 Roothaan 方程：\n$$\n\\begin{aligned}\n\\mathbf { F X C } ^ { \\prime } ={}& \\mathbf { S X C ^ { \\prime } \\varepsilon } \\\\\n\\left( \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X } \\right) \\mathbf { C } ^ { \\prime } ={}& \\left( \\mathbf { X } ^ { + } \\mathbf { S X } \\right) \\mathbf { C } ^ { \\prime } \\boldsymbol { \\varepsilon }\\\\\n\\mathbf { F } ^ { \\prime } \\mathbf { C } ^ { \\prime } ={}& \\mathbf { C } ^ { \\prime } \\boldsymbol { \\varepsilon }\n\\end{aligned}\n$$\n此时对角化 Fock 矩阵 $\\mathbf{F}'$ ，即可得到系数矩阵 $\\mathbf C'$ 和本征值 $\\boldsymbol{\\varepsilon}$ 。 \n\n## SCF 迭代步骤\n\n1. 给定分子的初始信息（核位置 $\\vec{R}_\\alpha$，元素种类 $\\{Z_{\\alpha}\\}$ ，电子个数 $N_{elec}$ ，以及基函数 $\\left\\{ \\chi _ { v } \\right\\}$ ）；\n2. 计算分子积分 $S _ { \\mu \\nu } , \\quad h _ { \\mu \\nu } ^ { \\text { core } } , \\langle \\mu v | \\lambda \\sigma \\rangle$ ；\n3. 幺正化 $\\mathbf{S}$ 矩阵，得到变换矩阵 $\\mathbf{X}$ ；\n4. **猜**一个初始密度矩阵 $\\mathbf{P}$ ；\n5. 由密度矩阵 $\\mathbf{P}$ 和双电子积分计算 $\\mathbf{G}$ 矩阵；\n6. 构造 Fock 矩阵 $ \\mathbf { F } = \\mathbf { h } ^ { \\mathrm { core } } + \\mathbf { G } $ ；\n7. 计算变换后的 Fock 矩阵 $\\mathbf { F } ^ { \\prime } = \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X }$ ；\n8. 对角化 $\\mathbf{F}'$ 得到 $\\mathbf{C}'$ 和 $\\boldsymbol{\\varepsilon}$ ；\n9. 计算系数矩阵 $\\mathbf { C } = \\mathbf { X } \\mathbf { C } ^ { \\prime }$ ；\n10. 构造密度矩阵 $\\mathbf{P}$ ： $P _ { \\mu } = \\sum _ { j } ^ { N / 2 } C _ { \\mu } C _ { v j } ^ { * }$ ；\n11. 验证密度矩阵 $\\mathbf{P}$ 和能量 $\\varepsilon$ 是否收敛，若未收敛，返回步骤 5，用刚得到的密度矩阵 $\\mathbf{P}$ 计算 $\\mathbf{G}$ 矩阵；\n12. 计算已经收敛，迭代结束，计算能量期待值与其它性质。\n\n## 基本计算结果\n\n1. 轨道能与电子能量；\n2. 势能面、构型优化、振动频率分析；\n3. 单电子性质（如分子偶极矩）；\n4. 电荷密度计算等。\n\n# 总结\n\nHatree-Fock 方法的几个关键点：\n\n1. 使用 Slater 行列式描述分子的波函数；\n2. 使用基函数将分子轨道展开，便于计算；\n3. 使用自洽场方法迭代计算；\n4. $J_{11} - K_{11} = 0$ ，没有自相关作用。","source":"_drafts/2019-1-18-Understand-Hatree-Fock.md","raw":"---\ntitle: 简单理解 Hatree-Fock 方法\ndate: 2019-01-18 23:11:20\ntags: First Principle Calculation\n---\n\n# 多原子分子体系S-方程的描述\n\n## Hamiltonian 算符\n\n在非相对论近似下，分子体系满足多体 Schrodinger 方程：\n$$\n\\hat { H } \\Phi = \\varepsilon \\Phi\n$$\n其中 $\\hat{H}$ 是分子体系的 Hamiltonian 算符，$\\Phi$ 是分子体系的波函数。\n\n设一个分子体系含 $M$ 个核，$N$ 个电子，则它的 Hamiltonian 可以写成\n\n$$\n\\begin{align*}\n\\hat { H } ={}& \\hat { T } _ { e } + \\hat { T } _ { N } + \\hat { V } _ { N e } + \\hat { V } _ { e e } + \\hat { V } _ { N N } \\\\\n={}& - \\sum _ { i = 1 } ^ { N } \\frac { 1 } { 2 } \\nabla _ { i } ^ { 2 } - \\sum _ { \\alpha = 1 } ^ { M } \\frac { 1 } { 2 M _ { \\alpha } } \\nabla _ { \\alpha } ^ { 2 } - \\sum _ { i = 1 } ^ { N } \\sum _ { \\alpha = 1 } ^ { M } \\frac { Z _ { \\alpha } } { r _ { i \\alpha } } + \\sum _ { i = 1 } ^ { N } \\sum _ { j > i } ^ { N } \\frac { 1 } { r _ { i j } } + \\sum _ { \\alpha = 1 } ^ { M } \\sum _ { \\beta > \\alpha } ^ { M } \\frac { Z _ { \\alpha } Z _ { \\beta } } { R _ { \\alpha \\beta } }\n\\end{align*} \\tag{2}\n$$\n\n式子中 $\\alpha, \\beta$ 表示原子核的标号，$Z_{\\alpha}$ 表示核电荷数，$M_{\\alpha}$ 表示原子核的质量（原子单位制）， $i,j$ 表示电子的标号。\n\n### Born-Oppenheimer 近似\n\nBorn-Oppenheimer 近似：电子的质量远远小于核的质量，故核的运动相对于电子是相当缓慢的，因此研究电子的运动行为时认为核是不动的，就好比放牛时牛和它周围的牛蝇运动一样。\n\n经过 Born-Oppenheimer 近似，电子与核的运动被解耦，它们被分开处理，分子的波函数可以写成电子波函数和核波函数乘积的形式，即\n$$\n\\Phi = \\Psi _ { e l } \\Psi _ { N } \\notag\n$$\n于是电子运动和核的运动分别描述为\n$$\n\\begin{cases}\n\\left( \\hat { T } _ { e } + \\hat { V } _ { N e } + \\hat { V } _ { e e } \\right) \\Psi _ { e l } = E _ { e l } \\Psi _ { e l }\\\\\n\\left(\\hat { T } _ { N } + \\hat { V } _ { N N }\\right) \\Psi _ { N } = \\left( \\varepsilon - E _ { e l } \\right) \\Psi _ { N }\n\\end{cases} \\label{eq:oppenheimer}\n$$\n\n$\\eqref{eq:oppenheimer}$ 式中第一个方程即为电子的运动方程，也是量子化学主要研究的问题。\n\n### 平均场近似\n\n忽略电子之间的瞬时运动关联，每个电子视为在核与其他电子建立的平均势场中运动。每个电子的状态用一个分子轨道（分子波函数）描述，即\n$$\n\\hat { h } ( 1 ) \\psi _ { i } ( 1 ) = \\varepsilon _ { i } \\psi _ { i } ( 1 ) \\label{eq:mo}\n$$\n其中 $\\{ \\psi_i \\}$ 为分子轨道（MO）； $\\{ \\epsilon_i \\}$ 为轨道能 。\n\n其中单电子算符 $ \\hat { h } ( 1 ) = - \\frac { 1 } { 2 } \\nabla _ { 1 } ^ { 2 } + \\sum _ { a } - \\frac { Z _ { a } } { r _ { 1 a } } + \\hat { v } _ { e f f } ( 1 ) $ ， $\\hat { v } _ { e f f } ( 1 )$ 是等效单电子势，即其他电子对该电子相互作用的等效作用势。\n\n总电子的波函数用行列式波函数（Slater 行列式）描述，总电子能量为\n\n$$\nE _ { e l } = \\left\\langle \\Psi \\left| H _ { e l } \\right| \\Psi \\right\\rangle\n$$\n\n###  LCAO 近似\n\n分子轨道取为某些合理的原子轨道线性组合：\n$$\n\\psi _ { i } = \\sum _ { v } c _ { v i } \\varphi _ { v } \\label{eq:lcao}\n$$\n$\\eqref{eq:lcao}$ 中$c_{vi}$ 表示原子轨道的系数， $\\varphi_v$ 表示原子轨道。\n\n注：这里的分子轨道指自旋轨道，区别于空间轨道。（自旋轨道 = 空间轨道 * 自旋， $\\psi_i = \\varphi_i \\eta_i$）\n\n## 行列式波函数\n\n由于电子具有交换反对称性，简单乘积波函数\n$$\n\\Phi = \\prod_i \\psi_i\n$$\n不能描述这个性质，故必须使用 Slater 行列式描述体系的波函数，即：\n$$\n\\begin{align}\n\\Psi \\left( q _ { 1 } , \\cdots , q _ { N } \\right) ={}& \\frac { 1 } { \\sqrt { N ! } } \\nonumber\n\\begin{vmatrix} \\begin{array} { c c c } { \\psi _ { 1 } \\left( q _ { 1 } \\right) } & { \\cdots } & { \\psi _ { 1 } \\left( q _ { N } \\right) } \\\\ { \\psi _ { 2 } \\left( q _ { 1 } \\right) }& \\cdots & { \\psi _ { 2 } \\left( q _ { N } \\right) } \\\\ { \\vdots }& \\ddots & { \\vdots } \\\\ { \\psi _ { N } \\left( q _ { 1 } \\right) }& \\cdots & { \\psi _ { N } \\left( q _ { N } \\right) } \\end{array} \\end{vmatrix} \\\\ \\nonumber\n={}& | \\psi _ { 1 } \\psi _ { 2 } \\cdots \\psi _ { N } \\rangle \\\\\n={}&  \\frac { 1 } { \\sqrt { N ! } } \\sum _ { n = 1 } ^ { N ! } ( - 1 ) ^ { P _ { n } } \\hat { P } _ { n } \\left\\{ \\psi _ { 1 } \\left( q _ { 1 } \\right) \\psi _ { 2 } \\left( q _ { 2 } \\right) \\cdots \\psi _ { N } \\left( q _ { N } \\right) \\right\\}  \\label{eq:slater}\n\\end{align}\n$$\n\n\n- $\\hat{P}$ 算符是交换算符， $\\hat{P}_{12}$ 表示将 1, 2 号轨道上的电子互换；\n- $\\eqref{eq:slater}$ 中的每个电子的分子轨道都满足正交归一性： $ \\left\\langle \\psi _ { i } | \\psi _ { j } \\right\\rangle = \\int \\psi _ { i } ^ { * } ( 1 ) \\psi _ { j } ( 1 ) d q _ { 1 } = \\delta _ { i j } $ （即每个电子只能占据一个轨道）；\n- 如果两个行列式波函数的自旋轨道不完全相同，则它们正交。\n\n## 库仑作用与交换作用\n\n### 库仑作用\n\n库仑作用是指两个电子（无论自旋是否相同）之间存在的静电相互作用：\n$$\n\\begin{aligned} J _ { 1 s 2 s } & = \\int \\frac { \\left| \\psi _ { 1 } ( 1 ) \\right| ^ { 2 } \\cdot \\left| \\psi _ { 2 } ( 2 ) \\right| ^ { 2 } } { r _ { 12 } } d q _ { 1 } d q _ { 2 } \\\\ & = \\int \\frac { \\left| \\varphi _ { 1 s } ( 1 ) \\right| ^ { 2 } \\cdot \\varphi _ { 2 s } \\left. ( 2 ) \\right| ^ { 2 } } { r _ { 12 } } d \\vec { r } _ { 1 } d \\vec { r } _ { 2 } \\int \\left| \\eta _ { 1 } ( 1 ) \\right| ^ { 2 } d \\omega _ { 1 } \\int \\left| \\eta _ { 2 } ( 2 ) \\right| ^ { 2 } d \\omega _ { 2 } \\end{aligned}\n$$\n\n### 交换作用\n\n以 He​ 体系为例：\n$$\n\\Psi ( 1,2 ) = \\frac { 1 } { \\sqrt { 2 } } \\left| \\begin{array} { l l } { \\psi _ { 1 } ( 1 ) } & { \\psi _ { 1 } ( 2 ) } \\\\ { \\psi _ { 2 } ( 1 ) } & { \\psi _ { 2 } ( 2 ) } \\end{array} \\right|\n$$\n则它的能量期待值为：\n$$\n\\begin{aligned}\nE ={}& \\frac { 1 } { 2 } \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) - \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\left| \\hat { h } ( 1 ) + \\hat { h } ( 2 ) + \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) - \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\\\\n={}& \\frac { 1 } { 2 } \\left\\{ 2 \\times \\left( \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } \\right) - 2 \\times \\left[ \\left\\langle \\psi _ { 1 } ( 1 ) | \\hat { h } ( 1 ) | \\psi _ { 2 } ( 1 ) \\right\\rangle \\left\\langle \\psi _ { 2 } ( 2 ) | \\psi _ { 1 } ( 2 ) \\right\\rangle +\\right. \\right. \\\\\n& \\left. \\left. \\left\\langle \\psi _ { 1 } ( 1 ) | \\psi _ { 2 } ( 1 ) \\right\\rangle \\left\\langle \\psi _ { 2 } ( 2 ) | \\hat { h } ( 2 ) | \\psi _ { 1 } ( 2 ) \\right\\rangle + \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\right]  \\right\\}\\\\\n={}& \\frac { 1 } { 2 } \\left\\{ 2 \\times \\left( \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } \\right) - 2 \\times \\left[ 0 + 0 + \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\right] \\right\\} \\\\\n={}& \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } - K _ { 1 s 2 s }\n\\end{aligned}\n$$\n上式中的 $K_{1s 2s} = \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle$ 即为交换能。\n\n交换作用是指**同自旋**的两个电子之间存在的相互作用：\n$$\n\\begin{aligned}\nK _ { 1s 2s } ={}& \\int \\frac { \\psi_ { 1 } ( 1 ) ^* \\psi _ { 2 } ( 2 ) ^* \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) } { r _ { 12 } } d q _ { 1 } d q _ { 2 } \\\\\n={} & \\int \\frac { \\varphi _ { 1 s } ( 1 ) ^ { * } \\varphi _ { 2 s } ( 2 ) ^* \\varphi _ { 2 s } ( 1 ) \\varphi _ { 1 s } ( 2 ) } { r _ { 12 } } d \\vec { r _ { 1 } } d \\vec { r _ { 2 } } \\int \\eta _ { 1 } ( 1 ) ^ { * } \\eta _ { 2 } ( 1 ) d \\omega _ { 1 } \\int \\eta _ { 2 } ( 2 ) ^ { * } \\eta _ { 1 } ( 2 ) d \\omega _ { 2 }\n\\end{aligned}\n$$\n\n- 当 $\\psi_1, \\psi_2$ 同自旋， $\\eta_1 = \\eta_2$ ，$K \\neq 0$ ($K>0$)；\n\n- 当 $\\psi_1, \\psi_2$ 反自旋， $\\eta_1 \\neq \\eta_2$ ，$K = 0$ 。\n\n  这一项可以通过求 Slater 行列式的能量期待值得到。\n\n**注**：$J_{11} - K_{11} = 0$ ，电子不存在自相关作用。\n\n### 行列式波函数的 Pros\n\n1. 行列式波函数部分地考虑了同自旋电子间的运动关联（不允许电子占据同一个自旋轨道）；\n2. 同自旋电子间存在交换作用，它使总能量降低；\n3. 多电子原子中，$n, l$ 相同的简并轨道上的电子，将分占磁量子数 $m$ 不同的轨道，并使其自旋平行（Hund 规则）\n\n## Slater-Condon 规则\n\nSlater-Condon 规则即为 Slater 行列式矩阵元的计算规则，\n\n$$\n\\left\\langle \\Psi ^ { \\prime } | \\hat { O } | \\Psi \\right\\rangle = \\int \\left[ \\left( \\Psi ^ { \\prime } \\right) ^* \\hat { O } \\Psi \\right] d q _ { 1 } \\cdots d q _ { N } = ?\n$$\n\n### 准备\n\n1. 算符：\n\n   1. 单电子算符：$ \\hat { O } _ { 1 } = \\sum _ { n } \\hat { h } ( n ) $ ；\n   2. 双电子算符： $ \\hat { O } _ { 2 } = \\sum _ { n < m } \\frac { 1 } { r _ { n m } } $ 。\n\n2. 行列式：\n\n   1. 对角矩阵元：\n      $$\n      | \\Psi ^ { \\prime } \\rangle = | \\Psi \\rangle \\nonumber\n      $$\n\n   2. 非对角矩阵元 1:\n      $$\n      \\begin{aligned} \n      | \\Psi \\rangle & = | \\psi _ { 1 } \\cdots \\psi _ { k } \\cdots \\psi _ { N } \\rangle \\\\ \n      | \\Psi ^ { \\prime } \\rangle & = | \\psi _ { 1 } \\cdots \\psi _ { a } \\cdots \\psi _ { N } \\rangle \\quad \\text{单激发组态} \\end{aligned}\n      $$\n\n   3. 非对角矩阵元 2:\n      $$\n      \\begin{array} { l } { | \\Psi \\rangle = | \\cdots \\psi _ { k } \\cdots \\psi _ { l } \\cdots \\rangle } \\\\ { | \\Psi ^ { \\prime \\prime } \\rangle = | \\dots \\psi _ { a } \\cdots \\psi _ { b } \\cdots \\rangle } \\quad \\text{双激发组态} \\end{array} \\nonumber\n      $$\n\n\n\n\n\n### 规则\n\n1. 重叠：\n\n   1. 对角矩阵元：\n      $$\n      \\langle \\Psi | \\Psi \\rangle = 1\n      $$\n\n   2. 单激发态&双激发态：\n      $$\n      \\left\\langle \\Psi ^ { \\prime } | \\Psi \\right\\rangle = 0\n      $$\n\n2. 单电子算符：\n\n   1. 对角矩阵元：\n      $$\n      \\left\\langle \\Psi \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = \\sum _ { i } \\left\\langle \\psi _ { i } | \\hat { h } | \\psi _ { i } \\right\\rangle = \\sum _ { i } \\langle i | \\hat { h } | i \\rangle\n      $$\n\n   2. 单激发态：\n      $$\n      \\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = \\left\\langle \\psi _ { a } | \\hat { h } | \\psi _ { k } \\right\\rangle = \\langle a | \\hat { h } | k \\rangle\n      $$\n\n   3. 双激发态：\n      $$\n      \\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = 0\n      $$\n\n3. 双电子算符：\n\n   1. 对角矩阵元：\n      $$\n      \\begin{aligned} \\left\\langle \\Psi \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle & = \\frac { 1 } { 2 } \\sum _ { i = 1 } ^ { N } \\sum _ { j = 1 } ^ { N } \\left\\langle \\psi _ { i } \\psi _ { j } | \\psi _ { i } \\psi _ { j } \\right\\rangle - \\left\\langle \\psi _ { i } \\psi _ { j } | \\psi _ { j } \\psi _ { i } \\right\\rangle \\\\ & = \\frac { 1 } { 2 } \\sum _ { i = 1 } ^ { N } \\sum _ { j = 1 } ^ { N } \\langle i j | i j \\rangle - \\langle i j | j i \\rangle \\end{aligned}\n      $$\n\n   2. 单激发态：\n      $$\n      \\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle = \\sum _ { i = 1 } ^ { N } \\langle i a | i k \\rangle - \\langle i a | k i \\rangle\n      $$\n\n   3. 双激发态：\n      $$\n      \\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle = \\langle a b | k l \\rangle - \\langle a b | l k \\rangle\n      $$\n\n\n\n\n\n\n\n# Hatree-Fock 方程\n\nHatree-Fock 方程（非正则形式）：\n$$\n\\left[ \\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right) \\right] \\psi _ { i } ( 1 ) = \\sum _ { j = 1 } ^ { N } \\varepsilon _ { i j } \\psi _ { j } ( 1 ) \\label{eq:hf_ununitary}\n$$\n其中，库伦算符和交换算符：\n$$\n\\begin{align}\n\\hat { J } _ { j } ( 1 ) \\psi _ { i } ( 1 ) = \\left[ \\int \\psi _ { j } ^ { * } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { j } ( 2 ) d q _ { 2 } \\right] \\psi _ { i } ( 1 ) \\\\\n \\hat { K } _ { j } ( 1 ) \\psi _ { i } ( 1 ) = \\left[ \\int \\psi _ { j } ^ { * } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { i } ( 2 ) d q _ { 2 } \\right] \\psi _ { j } ( 1 )\n \\end{align}\n$$\n$\\eqref{eq:hf_ununitary}$ 中 $\\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right)$ 可用 Fock 算符 $\\hat{f}(1)$ 简写代替。\n\n经过 Unitary 变换， $\\eqref{eq:hf_ununitary}$ 可以变换为正则形式，即：\n$$\n\\hat { f } ( 1 ) \\psi _ { i } ( 1 ) = \\varepsilon _ { i } \\psi _ { i } ( 1 )\n$$\n\n**注：$\\eqref{eq:fock}$ 中的 $\\hat { h } ( 1 ) = - \\frac { 1 } { 2 } \\nabla _ { 1 } ^ { 2 } - \\sum _ { \\alpha } \\frac { Z _ { \\alpha } } { r _ { 1 \\alpha } } $ 表示核 Hamiltonian 项，是单电子算符，与 $\\eqref{eq:mo}$ 中 $\\hat{h}(1)$ 的含义有所区别，请注意区分。**\n\n## Fock 算符的性质\n\nFock 算符：\n$$\n\\hat{f}(1) = \\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right) \\label{eq:fock}\n$$\n\n- Fock 算符是等效单电子的哈密顿算符，它的本征函数式分子轨道，本征值为轨道能；\n- Fock 算符是 Hermitian 算符（因为交换算符和库仑算符都是 Hermitian 算符，动能项以及核势能项也都是 Hermitian 算符）；\n- Fock 算符是分子点群的对称算符，分子轨道属于分子点群的不可约表示；\n- Fock 算符之和 $\\sum _ { n = 1 } ^ { N } \\hat { f } ( n ) = \\hat { H } ^ { H F } \\neq \\hat { H } _ { e l }$ ，它将电子间的作用重复计入。\n\n## 轨道能与电子总能量\n\n### 轨道能\n\n$$\n\\varepsilon _ { i } = \\left\\langle \\psi _ { i } | \\hat { f } | \\psi _ { i } \\right\\rangle\n= \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N } \\left( J _ { i j } - K _ { i j } \\right) \\label{eq:orb_en}\n$$\n\n$\\eqref{eq:orb_en}$ 中：\n\n- $\\varepsilon_i^0$ 为 $\\hat{h}(1)$ 的本征值， $\\varepsilon_i$ 为第 $i$ 个轨道的轨道能；\n- $ J _ { i j } = \\langle i j | i j \\rangle = \\int d q _ { 1 } d q _ { 2 } \\psi _ { i } ^ { * } ( 1 ) \\psi _ { j } ^ { * } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { i } ( 1 ) \\psi _ { j } ( 2 ) $；\n- $ K _ { i j } = \\langle i j | j i \\rangle = \\int d q _ { 1 } d q _ { 2 } \\psi _ { i } ^ { * } ( 1 ) \\psi _ { j } ^ { * } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { j } ( 1 ) \\psi _ { i } ( 2 ) $ 。\n\n### 电子总能量\n\n$$\nE _ { 0 } = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } \\left[ J _ { i j } - K _ { i j } \\right] \\label{eq:ele_en}\n$$\n\n$\\eqref{eq:ele_en}$ 中第二项的 $\\frac{1}{2}$ 表示去除因双重求和重复计入的交换能和库仑能 。\n\n**注：分子轨道能之和不等于电子总能**\n$$\n\\sum _ { i } ^ { N } \\varepsilon _ { i } = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } \\left[ J _ { i j } - K _ { i j } \\right] \\neq E _ { 0 } \n$$\n\n## Koopmans 定理\n\n假如从占据轨道 $\\psi_k$ 上电离一个电子而其他轨道不变，则分子的电离势为 $-\\varepsilon_k$ 。假定在空轨道 $\\psi_r$ 上亲和一个电子而其他轨道不变，则分子的电子亲和势为 $\\varepsilon_r$ ，简言之：当不考虑轨道弛豫时电离能/亲和能近似等于被电离/亲和电子的轨道能。\n\n### 电离能\n\n电离前：\n\n$$\n\\begin{align}\n&| \\Psi _ { 0 } ^ { N } \\rangle = | \\psi _ { 1 } \\cdots \\psi _ { k } \\cdots \\psi _ { N } \\rangle \\nonumber \\\\\n&E _ { 0 } = \\left\\langle \\Psi _ { 0 } ^ { N } | \\hat { H } | \\Psi _ { 0 } ^ { N } \\right\\rangle = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i } \\sum _ { j } \\left( J _ { i j } - K _ { i j } \\right) \\nonumber\n\\end{align}\n$$\n\n电离后：\n$$\n\\begin{align}\n | \\Psi _ { k } ^ { N - 1 } \\rangle ={}& | \\psi _ { 1 } \\cdots \\psi _ { k - 1 } \\psi _ { k + 1 } \\cdots \\psi _ { N } \\rangle  \\nonumber \\\\\n E _ { k } ^ { + } ={}& \\left\\langle \\Psi _ { k } ^ { N - 1 } | \\hat { H } | \\Psi _ { k } ^ { N - 1 } \\right\\rangle = \\sum _ { i \\neq k } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i \\neq k } \\sum _ { j \\neq k } \\left( J _ { i j } - K _ { i j } \\right) \\nonumber\n\\end{align}\n$$\n\n则电离能：\n$$\n\\begin{align}\nI.P. ={}& E _ { k } ^ { + } - E _ { 0 } \\\\\n={}& - \\varepsilon _ { k } ^ { 0 } - \\frac { 1 } { 2 } \\left[ \\sum _ { j } \\left( J _ { k j } - K _ { k j } \\right) + \\sum _ { i } \\left( J _ { i k } - K _ { i k } \\right) \\right] \\\\\n={}& - \\varepsilon _ { k } ^ { 0 } - \\sum _ { j } \\left( J _ { k j } - K _ { k j } \\right) = - \\varepsilon _ { k }\n\\end{align}\n$$\n\n### 亲和能\n\n与电离能同理， \n$$\nE . A . = E _ { 0 } - E _ { r } ^ { N + 1 } = - \\varepsilon _ { r } ^ { 0 } - \\sum _ { j } \\left( J _ { r j } - K _ { j r } \\right) = - \\varepsilon _ { r }\n$$\n\nKoopmans 定理提供了一种近似求解 $I.P$ 与 $E.A.$ 的方法，但它不考虑电离/亲和后的轨道弛豫和电子的相关效应（事实上整个 Hatree-Fock 近似也没有考虑相关效应），这样求得的电离能与亲和能有误差。\n\n# Roothan 方程\n\nRoothan 方程的本质是将 Hatree-Fock 方程的分子轨道用一系列基函数展开得到的方程。\n\n## 限制性与非限制性自旋轨道\n\n限制性自旋轨道：假设同一个分子轨道分为两个自旋相反的自旋轨道，它们的空间轨道部分完全相同。限制性自旋轨道一般用于描述闭壳层的电子行为。\n$$\n\\psi _ { a } \\left( q _ { 1 } \\right) \\longrightarrow \\left\\{ \\begin{array} { l } { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\alpha \\left( \\omega _ { 1 } \\right) } \\\\ { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\beta \\left( \\omega _ { 1 } \\right) } \\end{array} \\right.\n$$\n非限制性自旋轨道：同一个分子轨道中自旋轨道的空间轨道部分不同。\n$$\n\\psi _ { a } \\left( q _ { 1 } \\right) \\longrightarrow \\left\\{ \\begin{array} { l } { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\alpha \\left( \\omega _ { 1 } \\right) } \\\\ { \\varphi _ { i } ^ {\\color{red} \\prime } \\left( \\vec { r } _ { 1 } \\right) \\beta \\left( \\omega _ { 1 } \\right) } \\end{array} \\right.\n$$\n非限制性自旋轨道一般用于描述开壳层的电子行为。\n\n## 空间轨道的 HF 方程\n\n空间轨道的 Hatree-Fock 方程为：\n$$\n\\hat { f } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\varepsilon _ { i } \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\label{eq:hf_space}\n$$\n其中空间轨道的 Fock 算符为：\n$$\n\\begin{aligned} { f \\left( \\vec { r } _ { 1 } \\right) = \\hat { h } \\left( \\vec { r } _ { 1 } \\right) + \\sum _ { j = 1 } ^ { N / 2 } 2 \\hat { J } _ { j } \\left( \\vec { r } _ { 1 } \\right) - \\hat { K } _ { j } \\left( \\vec { r } _ { 1 } \\right) } \\\\ { \\hat { J } _ { j } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\left[ \\int \\frac { \\varphi _ { j } ^ { * } \\left( \\vec { r } _ { 2 } \\right) \\varphi _ { j } \\left( \\vec { r } _ { 2 } \\right) } { r _ { 12 } } d \\vec { r } _ { 2 } \\right] \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) } \\\\ { \\hat { K } _ { j } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\left[ \\int \\frac { \\varphi _ { j } \\left( \\vec { r } _ { 2 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 2 } \\right) } { r _ { 12 } } d \\vec { r _ { 2 } } \\right] \\varphi _ { j } \\left( \\vec { r } _ { 1 } \\right) } \\end{aligned}\n$$\n上面式子中 $ \\hat{K} $ 项前面没有 2 是因为该波函数为限制性自旋波函数，体系为闭壳层，自旋向上和自旋向下的电子个数相同，恰好有一半的空间轨道有电子占据，且这些空间轨道都已经占满，故只有自旋平行的电子之间有交换作用（即只有 $\\frac{N}{2}$ 个电子之间有交换作用）。\n\n分子轨道的轨道能（自旋轨道）：\n$$\n\\varepsilon_i =   \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N } \\left( J _ { i j } - K _ { i j } \\right)\n$$\n分子轨道的轨道能（空间轨道，闭壳层限制性）：\n$$\n\\varepsilon_i = \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N / 2 } \\left( 2 J _ { i j } - K _ { i j } \\right)\n$$\n电子总能量（自旋轨道）：\n$$\nE_0= \\sum _ { i } ^ { N } h _ { i i } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } J _ { i j } - K _ { i j }\n$$\n电子总能量（空间轨道，闭壳层限制性）：\n$$\nE _ 0 = \\sum _ { i } ^ { N / 2 } 2 h _ { i i } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N / 2 } \\sum _ { j } ^ { N / 2 } 2 J _ { i j } - K _ { i j }\n$$\n上式中第二项前的 $\\frac{1}{2}$ 表示已经减去重复计入的空间轨道的相互作用。\n\n## Roothaan 方程\n\n引入一组**已知**的基函数将空间轨道展开：\n$$\n\\varphi _ { i } = \\sum _ { v = 1 } ^ { m } C _ { vi } \\chi _ { v } \\quad i = 1,2 , \\cdots , m  \\label{eq:roothaan_base}\n$$\n将 $\\eqref{eq:roothaan_base}$ 代入 $\\eqref{eq:hf_space}$ 可以得到：\n$$\n\\hat { f } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\varepsilon _ { i } \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right)  \\quad i = 1,2 , \\cdots , m\n$$\n上式左乘 $\\chi_{\\mu}^* (1)$ 并积分，得到：\n$$\n\\sum _ { v } ^ { m } C _ { v i } \\langle \\chi _ { \\mu } ( 1 ) | \\hat { f } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\varepsilon _ { i } \\sum _ { v } ^ { m } C _ { v i } \\langle \\chi _ { \\mu } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle \\quad i = 1,2 , \\cdots , m\n$$\n令 $ S _ { \\mu \\nu } = \\langle \\chi _ { \\mu } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\chi _ { v } ( 1 ) $ ，\n\n$ F _ { \\mu v } = \\langle \\chi _ { \\mu } ( 1 ) | \\hat { f } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) $ \n\n由此可以得到方程组：\n$$\n\\sum _ { v } ^ { m } F _ { \\mu \\nu } C _ { v i } = \\varepsilon _ { i } \\sum _ { v } ^ { m } S _ { \\mu \\nu } C _ { v i } \\quad i = 1,2 , \\cdots , m\n$$\n或者写成矩阵形式：\n$$\n\\mathbf { F C } _ { i } = \\varepsilon _ { i } \\mathbf { S } \\mathbf { C } _ { i } \\quad i = 1,2 , \\cdots , m\n$$\n合并写成矩阵方程：\n$$\n\\mathbf { F C } = \\mathbf { S } \\mathbf { C } \\boldsymbol { \\varepsilon } \\tag{*} \\label{eq:roothaan}\n$$\n$\\eqref{eq:roothaan}​$ 即为 Roothaan 方程。\n\n其中：\n$$\n\\mathbf { C } = \\left( \\begin{array} { c c c c } { C _ { 11 } } & { C _ { 12 } } & { \\cdots } & { C _ { 1 m } } \\\\ { C _ { 21 } } & { C _ { 22 } } & { \\cdots } & { C _ { 2 m } } \\\\ { C _ { 31 } } & { C _ { 32 } } & { \\cdots } & { C _ { 3 m } } \\\\ { \\vdots } & { \\vdots } & { } & { \\vdots } \\\\ { C _ { m 1 } } & { C _ { m 2 } } & { \\cdots } & { C _ { m m } } \\end{array} \\right) ,\\quad \n\\boldsymbol { \\varepsilon } = \\left( \\begin{array} { c c c c } { \\varepsilon _ { 1 } } & { } & { } & { O } \\\\ { } & { \\varepsilon _ { 2 } } & { } & { } \\\\ { } & { } & { \\ddots } & { } \\\\ { O } & { } & { } & { \\varepsilon _ { m } } \\end{array} \\right)\n$$\n它们分别表示分子轨道（空间轨道）和轨道能。\n\n$C_{ij}$ 表示第 $j$ 个分子轨道（空间轨道）第 $i$ 个基函数的系数。\n\n### 重叠矩阵\n\n$$\nS _ { \\mu \\nu } = \\langle \\chi _ { \\mu } ^ { * } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\chi _ { v } ( 1 )\n$$\n\n且\n$$\nS _ { \\mu \\nu } ^ { * } = \\left[ \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\chi _ { v } ( 1 ) \\right] ^ { * } = \\int d \\vec { r } _ { 1 } \\chi _ { v } ^ { * } ( 1 ) \\chi _ { \\mu } ( 1 ) = S _ { v \\mu }\n$$\n故 $\\mathbf{S}$ 为一个 $m \\times m$ 的 Hermitian 矩阵，且 $0 \\leq \\left| S _ { \\mu\\nu } \\right| \\leq 1$\n\n### Fock矩阵\n\n$$\n\\begin{aligned}\n\\mathbf{F} _ { \\mu \\nu } ={}& \\langle \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) \\rangle \\\\\n={}& \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) \\\\\n={} & h _ { \\mu v } ^ { c o r e } + \\sum _ { j } ^ { N / 2 } \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\left[ 2 \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right] \\chi _ { v } ( 1 )\n\\end{aligned}\n$$\n\n令 $\\varphi _ { j } = \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } \\chi _ { \\sigma }$ ，$ \\varphi _ { j } ^ { * } = \\sum _ { \\lambda } ^ { m } C _ { \\lambda j } ^ { * } \\chi _ { \\lambda } ^ { * } $  ，则\n$$\n\\begin{aligned}\n\\int \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { J } _ { j } ( 1 ) \\chi _ { v } ( 1 ) d \\vec { r } _ { 1 } = \\sum _ { \\lambda } ^ { m } \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } C _ { \\lambda j } ^ { * } \\langle \\mu v | \\lambda \\sigma \\rangle \\\\\n\\int \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { K } _ { j } ( 1 ) \\chi _ { v } ( 1 ) d \\vec { r } _ { 1 } = \\sum _ { \\lambda } ^ { m } \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } C _ { \\lambda j } ^ { * } \\langle \\mu {\\color{red} \\sigma} | \\lambda {\\color{red} v} \\rangle\n\\end{aligned}\n$$\n所以 Fock 矩阵的矩阵元可以进一步写成\n$$\n\\begin{aligned}\nF _ { \\mu \\nu } ={}& h _ { \\mu \\nu } ^ { c o r e } + \\sum _ { \\lambda , \\sigma } ^ { m , m } \\sum _ { j } ^ { N / 2 } C _ { \\sigma j } C _ { \\lambda j } ^ { * } [ 2 ( \\mu v | \\lambda \\sigma ) - ( \\mu \\sigma | \\lambda v ) ] \\\\\n={}& h _ { \\mu \\nu } ^ { c o r e } + \\sum _ { \\lambda , \\sigma } ^ { m , m } P _ { \\sigma \\lambda } [ 2 ( \\mu v | \\lambda \\sigma ) - ( \\mu \\sigma | \\lambda v ) ] \\\\\n={}& h _ { \\mu \\nu } ^ { c o r e } + G _ { \\mu \\nu }\n\\end{aligned}\n$$\n$G_{\\mu\\nu}$ 矩阵即为 Fock 矩阵的双电子项，由密度矩阵 $P_{\\sigma \\lambda}$和基函数的双电子积分给出。 \n\n### 密度矩阵\n\n定义密度矩阵：\n$$\nP _ { \\sigma \\lambda } = \\sum _ { j } ^ { N / 2 } C _ { \\sigma j } C _ { \\lambda j } ^ { * } = \\sum _ { j } ^ { N / 2 } ( C ) _ { \\sigma j } \\left( C ^ { \\dagger } \\right) _ { j \\lambda }\n$$\n$C$ 是分子轨道基函数的展开系数。\n\n由于闭壳层的限制性，只有 $N/2$ 个空间轨道占有电子，且都占满，故密度矩阵通常等于\n$$\nP = C _ { 0 } C _ { 0 } ^ { \\dagger } = \\left( \\begin{array} { c c c } { \\vdots } & { } & { } \\\\ { c _ { \\sigma 1 } } & { \\dots } & { c _ { \\sigma N / 2 } } \\\\ { \\vdots } & { } & { } \\end{array} \\right) \\left( \\begin{array} { c c c } { } & { c _ { \\lambda 1 } ^ { * } } \\\\ { \\ldots } & { \\vdots } & { \\cdots } \\\\ { } & { c _ { \\lambda N / 2 } ^ { * } } \\end{array} \\right)\n$$\n\n## 基的幺正化\n\nRoothaan 方程 $\\mathbf { F C } = \\mathbf { S } \\mathbf { C\\varepsilon } $  不是标准的矩阵本征值方程，如果 $\\mathbf{S}  = 1$，则 $\\mathbf { F C } = \\mathbf { C } \\varepsilon$  是标准的本征值方程。所以要对 Roothaan 方程进行  Unitary 变换使其满足标准本征值方程，才能进行求解。\n\n构造变换矩阵 $\\mathbf{X}​$ 使得 \n$$\n\\mathbf { X } ^ { \\dagger } \\mathbf { S X } = \\mathbf { S } ^ { \\prime } = \\mathbf { I }\n$$\n\n则构造变换后的 Fock 矩阵 $\\mathbf{F}'$\n\n$$\n\\mathbf { F } ^ { \\prime } = \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X }\n$$\n继续假设原系数矩阵 $\\mathbf { C } = \\mathbf { X } \\mathbf { C } ^ { \\prime }$ ，此时得到变换后的 Roothaan 方程：\n$$\n\\begin{aligned}\n\\mathbf { F X C } ^ { \\prime } ={}& \\mathbf { S X C ^ { \\prime } \\varepsilon } \\\\\n\\left( \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X } \\right) \\mathbf { C } ^ { \\prime } ={}& \\left( \\mathbf { X } ^ { + } \\mathbf { S X } \\right) \\mathbf { C } ^ { \\prime } \\boldsymbol { \\varepsilon }\\\\\n\\mathbf { F } ^ { \\prime } \\mathbf { C } ^ { \\prime } ={}& \\mathbf { C } ^ { \\prime } \\boldsymbol { \\varepsilon }\n\\end{aligned}\n$$\n此时对角化 Fock 矩阵 $\\mathbf{F}'$ ，即可得到系数矩阵 $\\mathbf C'$ 和本征值 $\\boldsymbol{\\varepsilon}$ 。 \n\n## SCF 迭代步骤\n\n1. 给定分子的初始信息（核位置 $\\vec{R}_\\alpha$，元素种类 $\\{Z_{\\alpha}\\}$ ，电子个数 $N_{elec}$ ，以及基函数 $\\left\\{ \\chi _ { v } \\right\\}$ ）；\n2. 计算分子积分 $S _ { \\mu \\nu } , \\quad h _ { \\mu \\nu } ^ { \\text { core } } , \\langle \\mu v | \\lambda \\sigma \\rangle$ ；\n3. 幺正化 $\\mathbf{S}$ 矩阵，得到变换矩阵 $\\mathbf{X}$ ；\n4. **猜**一个初始密度矩阵 $\\mathbf{P}$ ；\n5. 由密度矩阵 $\\mathbf{P}$ 和双电子积分计算 $\\mathbf{G}$ 矩阵；\n6. 构造 Fock 矩阵 $ \\mathbf { F } = \\mathbf { h } ^ { \\mathrm { core } } + \\mathbf { G } $ ；\n7. 计算变换后的 Fock 矩阵 $\\mathbf { F } ^ { \\prime } = \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X }$ ；\n8. 对角化 $\\mathbf{F}'$ 得到 $\\mathbf{C}'$ 和 $\\boldsymbol{\\varepsilon}$ ；\n9. 计算系数矩阵 $\\mathbf { C } = \\mathbf { X } \\mathbf { C } ^ { \\prime }$ ；\n10. 构造密度矩阵 $\\mathbf{P}$ ： $P _ { \\mu } = \\sum _ { j } ^ { N / 2 } C _ { \\mu } C _ { v j } ^ { * }$ ；\n11. 验证密度矩阵 $\\mathbf{P}$ 和能量 $\\varepsilon$ 是否收敛，若未收敛，返回步骤 5，用刚得到的密度矩阵 $\\mathbf{P}$ 计算 $\\mathbf{G}$ 矩阵；\n12. 计算已经收敛，迭代结束，计算能量期待值与其它性质。\n\n## 基本计算结果\n\n1. 轨道能与电子能量；\n2. 势能面、构型优化、振动频率分析；\n3. 单电子性质（如分子偶极矩）；\n4. 电荷密度计算等。\n\n# 总结\n\nHatree-Fock 方法的几个关键点：\n\n1. 使用 Slater 行列式描述分子的波函数；\n2. 使用基函数将分子轨道展开，便于计算；\n3. 使用自洽场方法迭代计算；\n4. $J_{11} - K_{11} = 0$ ，没有自相关作用。","slug":"2019-1-18-Understand-Hatree-Fock","published":0,"updated":"2019-01-19T07:22:31.040Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt2yjbe2002mzq4is04bmqka","content":"<h1 id=\"多原子分子体系S-方程的描述\"><a href=\"#多原子分子体系S-方程的描述\" class=\"headerlink\" title=\"多原子分子体系S-方程的描述\"></a>多原子分子体系S-方程的描述</h1><h2 id=\"Hamiltonian-算符\"><a href=\"#Hamiltonian-算符\" class=\"headerlink\" title=\"Hamiltonian 算符\"></a>Hamiltonian 算符</h2><p>在非相对论近似下，分子体系满足多体 Schrodinger 方程：<br>$$<br>\\hat { H } \\Phi = \\varepsilon \\Phi<br>$$<br>其中 $\\hat{H}$ 是分子体系的 Hamiltonian 算符，$\\Phi$ 是分子体系的波函数。</p>\n<p>设一个分子体系含 $M$ 个核，$N$ 个电子，则它的 Hamiltonian 可以写成</p>\n<p>$$<br>\\begin{align<em>}<br>\\hat { H } ={}&amp; \\hat { T } _ { e } + \\hat { T } _ { N } + \\hat { V } _ { N e } + \\hat { V } _ { e e } + \\hat { V } _ { N N } \\<br>={}&amp; - \\sum _ { i = 1 } ^ { N } \\frac { 1 } { 2 } \\nabla _ { i } ^ { 2 } - \\sum _ { \\alpha = 1 } ^ { M } \\frac { 1 } { 2 M _ { \\alpha } } \\nabla _ { \\alpha } ^ { 2 } - \\sum _ { i = 1 } ^ { N } \\sum _ { \\alpha = 1 } ^ { M } \\frac { Z _ { \\alpha } } { r _ { i \\alpha } } + \\sum _ { i = 1 } ^ { N } \\sum _ { j &gt; i } ^ { N } \\frac { 1 } { r _ { i j } } + \\sum _ { \\alpha = 1 } ^ { M } \\sum _ { \\beta &gt; \\alpha } ^ { M } \\frac { Z _ { \\alpha } Z _ { \\beta } } { R _ { \\alpha \\beta } }<br>\\end{align</em>} \\tag{2}<br>$$</p>\n<p>式子中 $\\alpha, \\beta$ 表示原子核的标号，$Z_{\\alpha}$ 表示核电荷数，$M_{\\alpha}$ 表示原子核的质量（原子单位制）， $i,j$ 表示电子的标号。</p>\n<h3 id=\"Born-Oppenheimer-近似\"><a href=\"#Born-Oppenheimer-近似\" class=\"headerlink\" title=\"Born-Oppenheimer 近似\"></a>Born-Oppenheimer 近似</h3><p>Born-Oppenheimer 近似：电子的质量远远小于核的质量，故核的运动相对于电子是相当缓慢的，因此研究电子的运动行为时认为核是不动的，就好比放牛时牛和它周围的牛蝇运动一样。</p>\n<p>经过 Born-Oppenheimer 近似，电子与核的运动被解耦，它们被分开处理，分子的波函数可以写成电子波函数和核波函数乘积的形式，即<br>$$<br>\\Phi = \\Psi _ { e l } \\Psi _ { N } \\notag<br>$$<br>于是电子运动和核的运动分别描述为<br>$$<br>\\begin{cases}<br>\\left( \\hat { T } _ { e } + \\hat { V } _ { N e } + \\hat { V } _ { e e } \\right) \\Psi _ { e l } = E _ { e l } \\Psi _ { e l }\\<br>\\left(\\hat { T } _ { N } + \\hat { V } _ { N N }\\right) \\Psi _ { N } = \\left( \\varepsilon - E _ { e l } \\right) \\Psi _ { N }<br>\\end{cases} \\label{eq:oppenheimer}<br>$$</p>\n<p>$\\eqref{eq:oppenheimer}$ 式中第一个方程即为电子的运动方程，也是量子化学主要研究的问题。</p>\n<h3 id=\"平均场近似\"><a href=\"#平均场近似\" class=\"headerlink\" title=\"平均场近似\"></a>平均场近似</h3><p>忽略电子之间的瞬时运动关联，每个电子视为在核与其他电子建立的平均势场中运动。每个电子的状态用一个分子轨道（分子波函数）描述，即<br>$$<br>\\hat { h } ( 1 ) \\psi _ { i } ( 1 ) = \\varepsilon _ { i } \\psi _ { i } ( 1 ) \\label{eq:mo}<br>$$<br>其中 ${ \\psi_i }$ 为分子轨道（MO）； ${ \\epsilon_i }$ 为轨道能 。</p>\n<p>其中单电子算符 $ \\hat { h } ( 1 ) = - \\frac { 1 } { 2 } \\nabla _ { 1 } ^ { 2 } + \\sum _ { a } - \\frac { Z _ { a } } { r _ { 1 a } } + \\hat { v } _ { e f f } ( 1 ) $ ， $\\hat { v } _ { e f f } ( 1 )$ 是等效单电子势，即其他电子对该电子相互作用的等效作用势。</p>\n<p>总电子的波函数用行列式波函数（Slater 行列式）描述，总电子能量为</p>\n<p>$$<br>E _ { e l } = \\left\\langle \\Psi \\left| H _ { e l } \\right| \\Psi \\right\\rangle<br>$$</p>\n<h3 id=\"LCAO-近似\"><a href=\"#LCAO-近似\" class=\"headerlink\" title=\"LCAO 近似\"></a>LCAO 近似</h3><p>分子轨道取为某些合理的原子轨道线性组合：<br>$$<br>\\psi _ { i } = \\sum _ { v } c _ { v i } \\varphi _ { v } \\label{eq:lcao}<br>$$<br>$\\eqref{eq:lcao}$ 中$c_{vi}$ 表示原子轨道的系数， $\\varphi_v$ 表示原子轨道。</p>\n<p>注：这里的分子轨道指自旋轨道，区别于空间轨道。（自旋轨道 = 空间轨道 * 自旋， $\\psi_i = \\varphi_i \\eta_i$）</p>\n<h2 id=\"行列式波函数\"><a href=\"#行列式波函数\" class=\"headerlink\" title=\"行列式波函数\"></a>行列式波函数</h2><p>由于电子具有交换反对称性，简单乘积波函数<br>$$<br>\\Phi = \\prod_i \\psi_i<br>$$<br>不能描述这个性质，故必须使用 Slater 行列式描述体系的波函数，即：<br>$$<br>\\begin{align}<br>\\Psi \\left( q _ { 1 } , \\cdots , q _ { N } \\right) ={}&amp; \\frac { 1 } { \\sqrt { N ! } } \\nonumber<br>\\begin{vmatrix} \\begin{array} { c c c } { \\psi _ { 1 } \\left( q _ { 1 } \\right) } &amp; { \\cdots } &amp; { \\psi _ { 1 } \\left( q _ { N } \\right) } \\ { \\psi _ { 2 } \\left( q _ { 1 } \\right) }&amp; \\cdots &amp; { \\psi _ { 2 } \\left( q _ { N } \\right) } \\ { \\vdots }&amp; \\ddots &amp; { \\vdots } \\ { \\psi _ { N } \\left( q _ { 1 } \\right) }&amp; \\cdots &amp; { \\psi _ { N } \\left( q _ { N } \\right) } \\end{array} \\end{vmatrix} \\ \\nonumber<br>={}&amp; | \\psi _ { 1 } \\psi _ { 2 } \\cdots \\psi _ { N } \\rangle \\<br>={}&amp;  \\frac { 1 } { \\sqrt { N ! } } \\sum _ { n = 1 } ^ { N ! } ( - 1 ) ^ { P _ { n } } \\hat { P } _ { n } \\left{ \\psi _ { 1 } \\left( q _ { 1 } \\right) \\psi _ { 2 } \\left( q _ { 2 } \\right) \\cdots \\psi _ { N } \\left( q _ { N } \\right) \\right}  \\label{eq:slater}<br>\\end{align}<br>$$</p>\n<ul>\n<li>$\\hat{P}$ 算符是交换算符， $\\hat{P}_{12}$ 表示将 1, 2 号轨道上的电子互换；</li>\n<li>$\\eqref{eq:slater}$ 中的每个电子的分子轨道都满足正交归一性： $ \\left\\langle \\psi _ { i } | \\psi _ { j } \\right\\rangle = \\int \\psi _ { i } ^ { * } ( 1 ) \\psi _ { j } ( 1 ) d q _ { 1 } = \\delta _ { i j } $ （即每个电子只能占据一个轨道）；</li>\n<li>如果两个行列式波函数的自旋轨道不完全相同，则它们正交。</li>\n</ul>\n<h2 id=\"库仑作用与交换作用\"><a href=\"#库仑作用与交换作用\" class=\"headerlink\" title=\"库仑作用与交换作用\"></a>库仑作用与交换作用</h2><h3 id=\"库仑作用\"><a href=\"#库仑作用\" class=\"headerlink\" title=\"库仑作用\"></a>库仑作用</h3><p>库仑作用是指两个电子（无论自旋是否相同）之间存在的静电相互作用：<br>$$<br>\\begin{aligned} J _ { 1 s 2 s } &amp; = \\int \\frac { \\left| \\psi _ { 1 } ( 1 ) \\right| ^ { 2 } \\cdot \\left| \\psi _ { 2 } ( 2 ) \\right| ^ { 2 } } { r _ { 12 } } d q _ { 1 } d q _ { 2 } \\ &amp; = \\int \\frac { \\left| \\varphi _ { 1 s } ( 1 ) \\right| ^ { 2 } \\cdot \\varphi _ { 2 s } \\left. ( 2 ) \\right| ^ { 2 } } { r _ { 12 } } d \\vec { r } _ { 1 } d \\vec { r } _ { 2 } \\int \\left| \\eta _ { 1 } ( 1 ) \\right| ^ { 2 } d \\omega _ { 1 } \\int \\left| \\eta _ { 2 } ( 2 ) \\right| ^ { 2 } d \\omega _ { 2 } \\end{aligned}<br>$$</p>\n<h3 id=\"交换作用\"><a href=\"#交换作用\" class=\"headerlink\" title=\"交换作用\"></a>交换作用</h3><p>以 He​ 体系为例：<br>$$<br>\\Psi ( 1,2 ) = \\frac { 1 } { \\sqrt { 2 } } \\left| \\begin{array} { l l } { \\psi _ { 1 } ( 1 ) } &amp; { \\psi _ { 1 } ( 2 ) } \\ { \\psi _ { 2 } ( 1 ) } &amp; { \\psi _ { 2 } ( 2 ) } \\end{array} \\right|<br>$$<br>则它的能量期待值为：<br>$$<br>\\begin{aligned}<br>E ={}&amp; \\frac { 1 } { 2 } \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) - \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\left| \\hat { h } ( 1 ) + \\hat { h } ( 2 ) + \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) - \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\<br>={}&amp; \\frac { 1 } { 2 } \\left{ 2 \\times \\left( \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } \\right) - 2 \\times \\left[ \\left\\langle \\psi _ { 1 } ( 1 ) | \\hat { h } ( 1 ) | \\psi _ { 2 } ( 1 ) \\right\\rangle \\left\\langle \\psi _ { 2 } ( 2 ) | \\psi _ { 1 } ( 2 ) \\right\\rangle +\\right. \\right. \\<br>&amp; \\left. \\left. \\left\\langle \\psi _ { 1 } ( 1 ) | \\psi _ { 2 } ( 1 ) \\right\\rangle \\left\\langle \\psi _ { 2 } ( 2 ) | \\hat { h } ( 2 ) | \\psi _ { 1 } ( 2 ) \\right\\rangle + \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\right]  \\right}\\<br>={}&amp; \\frac { 1 } { 2 } \\left{ 2 \\times \\left( \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } \\right) - 2 \\times \\left[ 0 + 0 + \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\right] \\right} \\<br>={}&amp; \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } - K _ { 1 s 2 s }<br>\\end{aligned}<br>$$<br>上式中的 $K_{1s 2s} = \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle$ 即为交换能。</p>\n<p>交换作用是指<strong>同自旋</strong>的两个电子之间存在的相互作用：<br>$$<br>\\begin{aligned}<br>K _ { 1s 2s } ={}&amp; \\int \\frac { \\psi_ { 1 } ( 1 ) ^<em> \\psi _ { 2 } ( 2 ) ^</em> \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) } { r _ { 12 } } d q _ { 1 } d q _ { 2 } \\<br>={} &amp; \\int \\frac { \\varphi _ { 1 s } ( 1 ) ^ { <em> } \\varphi _ { 2 s } ( 2 ) ^</em> \\varphi _ { 2 s } ( 1 ) \\varphi _ { 1 s } ( 2 ) } { r _ { 12 } } d \\vec { r _ { 1 } } d \\vec { r _ { 2 } } \\int \\eta _ { 1 } ( 1 ) ^ { <em> } \\eta _ { 2 } ( 1 ) d \\omega _ { 1 } \\int \\eta _ { 2 } ( 2 ) ^ { </em> } \\eta _ { 1 } ( 2 ) d \\omega _ { 2 }<br>\\end{aligned}<br>$$</p>\n<ul>\n<li><p>当 $\\psi_1, \\psi_2$ 同自旋， $\\eta_1 = \\eta_2$ ，$K \\neq 0$ ($K&gt;0$)；</p>\n</li>\n<li><p>当 $\\psi_1, \\psi_2$ 反自旋， $\\eta_1 \\neq \\eta_2$ ，$K = 0$ 。</p>\n<p>这一项可以通过求 Slater 行列式的能量期待值得到。</p>\n</li>\n</ul>\n<p><strong>注</strong>：$J_{11} - K_{11} = 0$ ，电子不存在自相关作用。</p>\n<h3 id=\"行列式波函数的-Pros\"><a href=\"#行列式波函数的-Pros\" class=\"headerlink\" title=\"行列式波函数的 Pros\"></a>行列式波函数的 Pros</h3><ol>\n<li>行列式波函数部分地考虑了同自旋电子间的运动关联（不允许电子占据同一个自旋轨道）；</li>\n<li>同自旋电子间存在交换作用，它使总能量降低；</li>\n<li>多电子原子中，$n, l$ 相同的简并轨道上的电子，将分占磁量子数 $m$ 不同的轨道，并使其自旋平行（Hund 规则）</li>\n</ol>\n<h2 id=\"Slater-Condon-规则\"><a href=\"#Slater-Condon-规则\" class=\"headerlink\" title=\"Slater-Condon 规则\"></a>Slater-Condon 规则</h2><p>Slater-Condon 规则即为 Slater 行列式矩阵元的计算规则，</p>\n<p>$$<br>\\left\\langle \\Psi ^ { \\prime } | \\hat { O } | \\Psi \\right\\rangle = \\int \\left[ \\left( \\Psi ^ { \\prime } \\right) ^* \\hat { O } \\Psi \\right] d q _ { 1 } \\cdots d q _ { N } = ?<br>$$</p>\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><ol>\n<li><p>算符：</p>\n<ol>\n<li>单电子算符：$ \\hat { O } _ { 1 } = \\sum _ { n } \\hat { h } ( n ) $ ；</li>\n<li>双电子算符： $ \\hat { O } _ { 2 } = \\sum _ { n &lt; m } \\frac { 1 } { r _ { n m } } $ 。</li>\n</ol>\n</li>\n<li><p>行列式：</p>\n<ol>\n<li><p>对角矩阵元：<br>$$<br>| \\Psi ^ { \\prime } \\rangle = | \\Psi \\rangle \\nonumber<br>$$</p>\n</li>\n<li><p>非对角矩阵元 1:<br>$$<br>\\begin{aligned}<br>| \\Psi \\rangle &amp; = | \\psi _ { 1 } \\cdots \\psi _ { k } \\cdots \\psi _ { N } \\rangle \\<br>| \\Psi ^ { \\prime } \\rangle &amp; = | \\psi _ { 1 } \\cdots \\psi _ { a } \\cdots \\psi _ { N } \\rangle \\quad \\text{单激发组态} \\end{aligned}<br>$$</p>\n</li>\n<li><p>非对角矩阵元 2:<br>$$<br>\\begin{array} { l } { | \\Psi \\rangle = | \\cdots \\psi _ { k } \\cdots \\psi _ { l } \\cdots \\rangle } \\ { | \\Psi ^ { \\prime \\prime } \\rangle = | \\dots \\psi _ { a } \\cdots \\psi _ { b } \\cdots \\rangle } \\quad \\text{双激发组态} \\end{array} \\nonumber<br>$$</p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h3><ol>\n<li><p>重叠：</p>\n<ol>\n<li><p>对角矩阵元：<br>$$<br>\\langle \\Psi | \\Psi \\rangle = 1<br>$$</p>\n</li>\n<li><p>单激发态&amp;双激发态：<br>$$<br>\\left\\langle \\Psi ^ { \\prime } | \\Psi \\right\\rangle = 0<br>$$</p>\n</li>\n</ol>\n</li>\n<li><p>单电子算符：</p>\n<ol>\n<li><p>对角矩阵元：<br>$$<br>\\left\\langle \\Psi \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = \\sum _ { i } \\left\\langle \\psi _ { i } | \\hat { h } | \\psi _ { i } \\right\\rangle = \\sum _ { i } \\langle i | \\hat { h } | i \\rangle<br>$$</p>\n</li>\n<li><p>单激发态：<br>$$<br>\\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = \\left\\langle \\psi _ { a } | \\hat { h } | \\psi _ { k } \\right\\rangle = \\langle a | \\hat { h } | k \\rangle<br>$$</p>\n</li>\n<li><p>双激发态：<br>$$<br>\\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = 0<br>$$</p>\n</li>\n</ol>\n</li>\n<li><p>双电子算符：</p>\n<ol>\n<li><p>对角矩阵元：<br>$$<br>\\begin{aligned} \\left\\langle \\Psi \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle &amp; = \\frac { 1 } { 2 } \\sum _ { i = 1 } ^ { N } \\sum _ { j = 1 } ^ { N } \\left\\langle \\psi _ { i } \\psi _ { j } | \\psi _ { i } \\psi _ { j } \\right\\rangle - \\left\\langle \\psi _ { i } \\psi _ { j } | \\psi _ { j } \\psi _ { i } \\right\\rangle \\ &amp; = \\frac { 1 } { 2 } \\sum _ { i = 1 } ^ { N } \\sum _ { j = 1 } ^ { N } \\langle i j | i j \\rangle - \\langle i j | j i \\rangle \\end{aligned}<br>$$</p>\n</li>\n<li><p>单激发态：<br>$$<br>\\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle = \\sum _ { i = 1 } ^ { N } \\langle i a | i k \\rangle - \\langle i a | k i \\rangle<br>$$</p>\n</li>\n<li><p>双激发态：<br>$$<br>\\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle = \\langle a b | k l \\rangle - \\langle a b | l k \\rangle<br>$$</p>\n</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"Hatree-Fock-方程\"><a href=\"#Hatree-Fock-方程\" class=\"headerlink\" title=\"Hatree-Fock 方程\"></a>Hatree-Fock 方程</h1><p>Hatree-Fock 方程（非正则形式）：<br>$$<br>\\left[ \\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right) \\right] \\psi _ { i } ( 1 ) = \\sum _ { j = 1 } ^ { N } \\varepsilon _ { i j } \\psi _ { j } ( 1 ) \\label{eq:hf_ununitary}<br>$$<br>其中，库伦算符和交换算符：<br>$$<br>\\begin{align}<br>\\hat { J } _ { j } ( 1 ) \\psi _ { i } ( 1 ) = \\left[ \\int \\psi _ { j } ^ { <em> } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { j } ( 2 ) d q _ { 2 } \\right] \\psi _ { i } ( 1 ) \\<br> \\hat { K } _ { j } ( 1 ) \\psi _ { i } ( 1 ) = \\left[ \\int \\psi _ { j } ^ { </em> } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { i } ( 2 ) d q _ { 2 } \\right] \\psi _ { j } ( 1 )<br> \\end{align}<br>$$<br>$\\eqref{eq:hf_ununitary}$ 中 $\\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right)$ 可用 Fock 算符 $\\hat{f}(1)$ 简写代替。</p>\n<p>经过 Unitary 变换， $\\eqref{eq:hf_ununitary}$ 可以变换为正则形式，即：<br>$$<br>\\hat { f } ( 1 ) \\psi _ { i } ( 1 ) = \\varepsilon _ { i } \\psi _ { i } ( 1 )<br>$$</p>\n<p><strong>注：$\\eqref{eq:fock}$ 中的 $\\hat { h } ( 1 ) = - \\frac { 1 } { 2 } \\nabla _ { 1 } ^ { 2 } - \\sum _ { \\alpha } \\frac { Z _ { \\alpha } } { r _ { 1 \\alpha } } $ 表示核 Hamiltonian 项，是单电子算符，与 $\\eqref{eq:mo}$ 中 $\\hat{h}(1)$ 的含义有所区别，请注意区分。</strong></p>\n<h2 id=\"Fock-算符的性质\"><a href=\"#Fock-算符的性质\" class=\"headerlink\" title=\"Fock 算符的性质\"></a>Fock 算符的性质</h2><p>Fock 算符：<br>$$<br>\\hat{f}(1) = \\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right) \\label{eq:fock}<br>$$</p>\n<ul>\n<li>Fock 算符是等效单电子的哈密顿算符，它的本征函数式分子轨道，本征值为轨道能；</li>\n<li>Fock 算符是 Hermitian 算符（因为交换算符和库仑算符都是 Hermitian 算符，动能项以及核势能项也都是 Hermitian 算符）；</li>\n<li>Fock 算符是分子点群的对称算符，分子轨道属于分子点群的不可约表示；</li>\n<li>Fock 算符之和 $\\sum _ { n = 1 } ^ { N } \\hat { f } ( n ) = \\hat { H } ^ { H F } \\neq \\hat { H } _ { e l }$ ，它将电子间的作用重复计入。</li>\n</ul>\n<h2 id=\"轨道能与电子总能量\"><a href=\"#轨道能与电子总能量\" class=\"headerlink\" title=\"轨道能与电子总能量\"></a>轨道能与电子总能量</h2><h3 id=\"轨道能\"><a href=\"#轨道能\" class=\"headerlink\" title=\"轨道能\"></a>轨道能</h3><p>$$<br>\\varepsilon _ { i } = \\left\\langle \\psi _ { i } | \\hat { f } | \\psi _ { i } \\right\\rangle<br>= \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N } \\left( J _ { i j } - K _ { i j } \\right) \\label{eq:orb_en}<br>$$</p>\n<p>$\\eqref{eq:orb_en}$ 中：</p>\n<ul>\n<li>$\\varepsilon_i^0$ 为 $\\hat{h}(1)$ 的本征值， $\\varepsilon_i$ 为第 $i$ 个轨道的轨道能；</li>\n<li>$ J _ { i j } = \\langle i j | i j \\rangle = \\int d q _ { 1 } d q _ { 2 } \\psi _ { i } ^ { <em> } ( 1 ) \\psi _ { j } ^ { </em> } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { i } ( 1 ) \\psi _ { j } ( 2 ) $；</li>\n<li>$ K _ { i j } = \\langle i j | j i \\rangle = \\int d q _ { 1 } d q _ { 2 } \\psi _ { i } ^ { <em> } ( 1 ) \\psi _ { j } ^ { </em> } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { j } ( 1 ) \\psi _ { i } ( 2 ) $ 。</li>\n</ul>\n<h3 id=\"电子总能量\"><a href=\"#电子总能量\" class=\"headerlink\" title=\"电子总能量\"></a>电子总能量</h3><p>$$<br>E _ { 0 } = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } \\left[ J _ { i j } - K _ { i j } \\right] \\label{eq:ele_en}<br>$$</p>\n<p>$\\eqref{eq:ele_en}$ 中第二项的 $\\frac{1}{2}$ 表示去除因双重求和重复计入的交换能和库仑能 。</p>\n<p><strong>注：分子轨道能之和不等于电子总能</strong><br>$$<br>\\sum _ { i } ^ { N } \\varepsilon _ { i } = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } \\left[ J _ { i j } - K _ { i j } \\right] \\neq E _ { 0 }<br>$$</p>\n<h2 id=\"Koopmans-定理\"><a href=\"#Koopmans-定理\" class=\"headerlink\" title=\"Koopmans 定理\"></a>Koopmans 定理</h2><p>假如从占据轨道 $\\psi_k$ 上电离一个电子而其他轨道不变，则分子的电离势为 $-\\varepsilon_k$ 。假定在空轨道 $\\psi_r$ 上亲和一个电子而其他轨道不变，则分子的电子亲和势为 $\\varepsilon_r$ ，简言之：当不考虑轨道弛豫时电离能/亲和能近似等于被电离/亲和电子的轨道能。</p>\n<h3 id=\"电离能\"><a href=\"#电离能\" class=\"headerlink\" title=\"电离能\"></a>电离能</h3><p>电离前：</p>\n<p>$$<br>\\begin{align}<br>&amp;| \\Psi _ { 0 } ^ { N } \\rangle = | \\psi _ { 1 } \\cdots \\psi _ { k } \\cdots \\psi _ { N } \\rangle \\nonumber \\<br>&amp;E _ { 0 } = \\left\\langle \\Psi _ { 0 } ^ { N } | \\hat { H } | \\Psi _ { 0 } ^ { N } \\right\\rangle = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i } \\sum _ { j } \\left( J _ { i j } - K _ { i j } \\right) \\nonumber<br>\\end{align}<br>$$</p>\n<p>电离后：<br>$$<br>\\begin{align}<br> | \\Psi _ { k } ^ { N - 1 } \\rangle ={}&amp; | \\psi _ { 1 } \\cdots \\psi _ { k - 1 } \\psi _ { k + 1 } \\cdots \\psi _ { N } \\rangle  \\nonumber \\<br> E _ { k } ^ { + } ={}&amp; \\left\\langle \\Psi _ { k } ^ { N - 1 } | \\hat { H } | \\Psi _ { k } ^ { N - 1 } \\right\\rangle = \\sum _ { i \\neq k } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i \\neq k } \\sum _ { j \\neq k } \\left( J _ { i j } - K _ { i j } \\right) \\nonumber<br>\\end{align}<br>$$</p>\n<p>则电离能：<br>$$<br>\\begin{align}<br>I.P. ={}&amp; E _ { k } ^ { + } - E _ { 0 } \\<br>={}&amp; - \\varepsilon _ { k } ^ { 0 } - \\frac { 1 } { 2 } \\left[ \\sum _ { j } \\left( J _ { k j } - K _ { k j } \\right) + \\sum _ { i } \\left( J _ { i k } - K _ { i k } \\right) \\right] \\<br>={}&amp; - \\varepsilon _ { k } ^ { 0 } - \\sum _ { j } \\left( J _ { k j } - K _ { k j } \\right) = - \\varepsilon _ { k }<br>\\end{align}<br>$$</p>\n<h3 id=\"亲和能\"><a href=\"#亲和能\" class=\"headerlink\" title=\"亲和能\"></a>亲和能</h3><p>与电离能同理，<br>$$<br>E . A . = E _ { 0 } - E _ { r } ^ { N + 1 } = - \\varepsilon _ { r } ^ { 0 } - \\sum _ { j } \\left( J _ { r j } - K _ { j r } \\right) = - \\varepsilon _ { r }<br>$$</p>\n<p>Koopmans 定理提供了一种近似求解 $I.P$ 与 $E.A.$ 的方法，但它不考虑电离/亲和后的轨道弛豫和电子的相关效应（事实上整个 Hatree-Fock 近似也没有考虑相关效应），这样求得的电离能与亲和能有误差。</p>\n<h1 id=\"Roothan-方程\"><a href=\"#Roothan-方程\" class=\"headerlink\" title=\"Roothan 方程\"></a>Roothan 方程</h1><p>Roothan 方程的本质是将 Hatree-Fock 方程的分子轨道用一系列基函数展开得到的方程。</p>\n<h2 id=\"限制性与非限制性自旋轨道\"><a href=\"#限制性与非限制性自旋轨道\" class=\"headerlink\" title=\"限制性与非限制性自旋轨道\"></a>限制性与非限制性自旋轨道</h2><p>限制性自旋轨道：假设同一个分子轨道分为两个自旋相反的自旋轨道，它们的空间轨道部分完全相同。限制性自旋轨道一般用于描述闭壳层的电子行为。<br>$$<br>\\psi _ { a } \\left( q _ { 1 } \\right) \\longrightarrow \\left{ \\begin{array} { l } { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\alpha \\left( \\omega _ { 1 } \\right) } \\ { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\beta \\left( \\omega _ { 1 } \\right) } \\end{array} \\right.<br>$$<br>非限制性自旋轨道：同一个分子轨道中自旋轨道的空间轨道部分不同。<br>$$<br>\\psi _ { a } \\left( q _ { 1 } \\right) \\longrightarrow \\left{ \\begin{array} { l } { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\alpha \\left( \\omega _ { 1 } \\right) } \\ { \\varphi _ { i } ^ {\\color{red} \\prime } \\left( \\vec { r } _ { 1 } \\right) \\beta \\left( \\omega _ { 1 } \\right) } \\end{array} \\right.<br>$$<br>非限制性自旋轨道一般用于描述开壳层的电子行为。</p>\n<h2 id=\"空间轨道的-HF-方程\"><a href=\"#空间轨道的-HF-方程\" class=\"headerlink\" title=\"空间轨道的 HF 方程\"></a>空间轨道的 HF 方程</h2><p>空间轨道的 Hatree-Fock 方程为：<br>$$<br>\\hat { f } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\varepsilon _ { i } \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\label{eq:hf_space}<br>$$<br>其中空间轨道的 Fock 算符为：<br>$$<br>\\begin{aligned} { f \\left( \\vec { r } _ { 1 } \\right) = \\hat { h } \\left( \\vec { r } _ { 1 } \\right) + \\sum _ { j = 1 } ^ { N / 2 } 2 \\hat { J } _ { j } \\left( \\vec { r } _ { 1 } \\right) - \\hat { K } _ { j } \\left( \\vec { r } _ { 1 } \\right) } \\ { \\hat { J } _ { j } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\left[ \\int \\frac { \\varphi _ { j } ^ { * } \\left( \\vec { r } _ { 2 } \\right) \\varphi _ { j } \\left( \\vec { r } _ { 2 } \\right) } { r _ { 12 } } d \\vec { r } _ { 2 } \\right] \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) } \\ { \\hat { K } _ { j } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\left[ \\int \\frac { \\varphi _ { j } \\left( \\vec { r } _ { 2 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 2 } \\right) } { r _ { 12 } } d \\vec { r _ { 2 } } \\right] \\varphi _ { j } \\left( \\vec { r } _ { 1 } \\right) } \\end{aligned}<br>$$<br>上面式子中 $ \\hat{K} $ 项前面没有 2 是因为该波函数为限制性自旋波函数，体系为闭壳层，自旋向上和自旋向下的电子个数相同，恰好有一半的空间轨道有电子占据，且这些空间轨道都已经占满，故只有自旋平行的电子之间有交换作用（即只有 $\\frac{N}{2}$ 个电子之间有交换作用）。</p>\n<p>分子轨道的轨道能（自旋轨道）：<br>$$<br>\\varepsilon_i =   \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N } \\left( J _ { i j } - K _ { i j } \\right)<br>$$<br>分子轨道的轨道能（空间轨道，闭壳层限制性）：<br>$$<br>\\varepsilon_i = \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N / 2 } \\left( 2 J _ { i j } - K _ { i j } \\right)<br>$$<br>电子总能量（自旋轨道）：<br>$$<br>E_0= \\sum _ { i } ^ { N } h _ { i i } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } J _ { i j } - K _ { i j }<br>$$<br>电子总能量（空间轨道，闭壳层限制性）：<br>$$<br>E _ 0 = \\sum _ { i } ^ { N / 2 } 2 h _ { i i } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N / 2 } \\sum _ { j } ^ { N / 2 } 2 J _ { i j } - K _ { i j }<br>$$<br>上式中第二项前的 $\\frac{1}{2}$ 表示已经减去重复计入的空间轨道的相互作用。</p>\n<h2 id=\"Roothaan-方程\"><a href=\"#Roothaan-方程\" class=\"headerlink\" title=\"Roothaan 方程\"></a>Roothaan 方程</h2><p>引入一组<strong>已知</strong>的基函数将空间轨道展开：<br>$$<br>\\varphi _ { i } = \\sum _ { v = 1 } ^ { m } C _ { vi } \\chi _ { v } \\quad i = 1,2 , \\cdots , m  \\label{eq:roothaan_base}<br>$$<br>将 $\\eqref{eq:roothaan_base}$ 代入 $\\eqref{eq:hf_space}$ 可以得到：<br>$$<br>\\hat { f } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\varepsilon _ { i } \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right)  \\quad i = 1,2 , \\cdots , m<br>$$<br>上式左乘 $\\chi_{\\mu}^<em> (1)$ 并积分，得到：<br>$$<br>\\sum _ { v } ^ { m } C _ { v i } \\langle \\chi _ { \\mu } ( 1 ) | \\hat { f } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\varepsilon _ { i } \\sum _ { v } ^ { m } C _ { v i } \\langle \\chi _ { \\mu } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle \\quad i = 1,2 , \\cdots , m<br>$$<br>令 $ S _ { \\mu \\nu } = \\langle \\chi _ { \\mu } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { </em> } ( 1 ) \\chi _ { v } ( 1 ) $ ，</p>\n<p>$ F _ { \\mu v } = \\langle \\chi _ { \\mu } ( 1 ) | \\hat { f } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) $ </p>\n<p>由此可以得到方程组：<br>$$<br>\\sum _ { v } ^ { m } F _ { \\mu \\nu } C _ { v i } = \\varepsilon _ { i } \\sum _ { v } ^ { m } S _ { \\mu \\nu } C _ { v i } \\quad i = 1,2 , \\cdots , m<br>$$<br>或者写成矩阵形式：<br>$$<br>\\mathbf { F C } _ { i } = \\varepsilon _ { i } \\mathbf { S } \\mathbf { C } _ { i } \\quad i = 1,2 , \\cdots , m<br>$$<br>合并写成矩阵方程：<br>$$<br>\\mathbf { F C } = \\mathbf { S } \\mathbf { C } \\boldsymbol { \\varepsilon } \\tag{*} \\label{eq:roothaan}<br>$$<br>$\\eqref{eq:roothaan}​$ 即为 Roothaan 方程。</p>\n<p>其中：<br>$$<br>\\mathbf { C } = \\left( \\begin{array} { c c c c } { C _ { 11 } } &amp; { C _ { 12 } } &amp; { \\cdots } &amp; { C _ { 1 m } } \\ { C _ { 21 } } &amp; { C _ { 22 } } &amp; { \\cdots } &amp; { C _ { 2 m } } \\ { C _ { 31 } } &amp; { C _ { 32 } } &amp; { \\cdots } &amp; { C _ { 3 m } } \\ { \\vdots } &amp; { \\vdots } &amp; { } &amp; { \\vdots } \\ { C _ { m 1 } } &amp; { C _ { m 2 } } &amp; { \\cdots } &amp; { C _ { m m } } \\end{array} \\right) ,\\quad<br>\\boldsymbol { \\varepsilon } = \\left( \\begin{array} { c c c c } { \\varepsilon _ { 1 } } &amp; { } &amp; { } &amp; { O } \\ { } &amp; { \\varepsilon _ { 2 } } &amp; { } &amp; { } \\ { } &amp; { } &amp; { \\ddots } &amp; { } \\ { O } &amp; { } &amp; { } &amp; { \\varepsilon _ { m } } \\end{array} \\right)<br>$$<br>它们分别表示分子轨道（空间轨道）和轨道能。</p>\n<p>$C_{ij}$ 表示第 $j$ 个分子轨道（空间轨道）第 $i$ 个基函数的系数。</p>\n<h3 id=\"重叠矩阵\"><a href=\"#重叠矩阵\" class=\"headerlink\" title=\"重叠矩阵\"></a>重叠矩阵</h3><p>$$<br>S _ { \\mu \\nu } = \\langle \\chi _ { \\mu } ^ { <em> } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { </em> } ( 1 ) \\chi _ { v } ( 1 )<br>$$</p>\n<p>且<br>$$<br>S _ { \\mu \\nu } ^ { <em> } = \\left[ \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { </em> } ( 1 ) \\chi _ { v } ( 1 ) \\right] ^ { <em> } = \\int d \\vec { r } _ { 1 } \\chi _ { v } ^ { </em> } ( 1 ) \\chi _ { \\mu } ( 1 ) = S _ { v \\mu }<br>$$<br>故 $\\mathbf{S}$ 为一个 $m \\times m$ 的 Hermitian 矩阵，且 $0 \\leq \\left| S _ { \\mu\\nu } \\right| \\leq 1$</p>\n<h3 id=\"Fock矩阵\"><a href=\"#Fock矩阵\" class=\"headerlink\" title=\"Fock矩阵\"></a>Fock矩阵</h3><p>$$<br>\\begin{aligned}<br>\\mathbf{F} _ { \\mu \\nu } ={}&amp; \\langle \\chi _ { \\mu } ^ { <em> } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) \\rangle \\<br>={}&amp; \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { </em> } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) \\<br>={} &amp; h _ { \\mu v } ^ { c o r e } + \\sum _ { j } ^ { N / 2 } \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\left[ 2 \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right] \\chi _ { v } ( 1 )<br>\\end{aligned}<br>$$</p>\n<p>令 $\\varphi _ { j } = \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } \\chi _ { \\sigma }$ ，$ \\varphi _ { j } ^ { <em> } = \\sum _ { \\lambda } ^ { m } C _ { \\lambda j } ^ { </em> } \\chi _ { \\lambda } ^ { <em> } $  ，则<br>$$<br>\\begin{aligned}<br>\\int \\chi _ { \\mu } ^ { </em> } ( 1 ) \\hat { J } _ { j } ( 1 ) \\chi _ { v } ( 1 ) d \\vec { r } _ { 1 } = \\sum _ { \\lambda } ^ { m } \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } C _ { \\lambda j } ^ { <em> } \\langle \\mu v | \\lambda \\sigma \\rangle \\<br>\\int \\chi _ { \\mu } ^ { </em> } ( 1 ) \\hat { K } _ { j } ( 1 ) \\chi _ { v } ( 1 ) d \\vec { r } _ { 1 } = \\sum _ { \\lambda } ^ { m } \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } C _ { \\lambda j } ^ { <em> } \\langle \\mu {\\color{red} \\sigma} | \\lambda {\\color{red} v} \\rangle<br>\\end{aligned}<br>$$<br>所以 Fock 矩阵的矩阵元可以进一步写成<br>$$<br>\\begin{aligned}<br>F _ { \\mu \\nu } ={}&amp; h _ { \\mu \\nu } ^ { c o r e } + \\sum _ { \\lambda , \\sigma } ^ { m , m } \\sum _ { j } ^ { N / 2 } C _ { \\sigma j } C _ { \\lambda j } ^ { </em> } [ 2 ( \\mu v | \\lambda \\sigma ) - ( \\mu \\sigma | \\lambda v ) ] \\<br>={}&amp; h _ { \\mu \\nu } ^ { c o r e } + \\sum _ { \\lambda , \\sigma } ^ { m , m } P _ { \\sigma \\lambda } [ 2 ( \\mu v | \\lambda \\sigma ) - ( \\mu \\sigma | \\lambda v ) ] \\<br>={}&amp; h _ { \\mu \\nu } ^ { c o r e } + G _ { \\mu \\nu }<br>\\end{aligned}<br>$$<br>$G_{\\mu\\nu}$ 矩阵即为 Fock 矩阵的双电子项，由密度矩阵 $P_{\\sigma \\lambda}$和基函数的双电子积分给出。 </p>\n<h3 id=\"密度矩阵\"><a href=\"#密度矩阵\" class=\"headerlink\" title=\"密度矩阵\"></a>密度矩阵</h3><p>定义密度矩阵：<br>$$<br>P _ { \\sigma \\lambda } = \\sum _ { j } ^ { N / 2 } C _ { \\sigma j } C _ { \\lambda j } ^ { * } = \\sum _ { j } ^ { N / 2 } ( C ) _ { \\sigma j } \\left( C ^ { \\dagger } \\right) _ { j \\lambda }<br>$$<br>$C$ 是分子轨道基函数的展开系数。</p>\n<p>由于闭壳层的限制性，只有 $N/2$ 个空间轨道占有电子，且都占满，故密度矩阵通常等于<br>$$<br>P = C _ { 0 } C _ { 0 } ^ { \\dagger } = \\left( \\begin{array} { c c c } { \\vdots } &amp; { } &amp; { } \\ { c _ { \\sigma 1 } } &amp; { \\dots } &amp; { c _ { \\sigma N / 2 } } \\ { \\vdots } &amp; { } &amp; { } \\end{array} \\right) \\left( \\begin{array} { c c c } { } &amp; { c _ { \\lambda 1 } ^ { <em> } } \\ { \\ldots } &amp; { \\vdots } &amp; { \\cdots } \\ { } &amp; { c _ { \\lambda N / 2 } ^ { </em> } } \\end{array} \\right)<br>$$</p>\n<h2 id=\"基的幺正化\"><a href=\"#基的幺正化\" class=\"headerlink\" title=\"基的幺正化\"></a>基的幺正化</h2><p>Roothaan 方程 $\\mathbf { F C } = \\mathbf { S } \\mathbf { C\\varepsilon } $  不是标准的矩阵本征值方程，如果 $\\mathbf{S}  = 1$，则 $\\mathbf { F C } = \\mathbf { C } \\varepsilon$  是标准的本征值方程。所以要对 Roothaan 方程进行  Unitary 变换使其满足标准本征值方程，才能进行求解。</p>\n<p>构造变换矩阵 $\\mathbf{X}​$ 使得<br>$$<br>\\mathbf { X } ^ { \\dagger } \\mathbf { S X } = \\mathbf { S } ^ { \\prime } = \\mathbf { I }<br>$$</p>\n<p>则构造变换后的 Fock 矩阵 $\\mathbf{F}’$</p>\n<p>$$<br>\\mathbf { F } ^ { \\prime } = \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X }<br>$$<br>继续假设原系数矩阵 $\\mathbf { C } = \\mathbf { X } \\mathbf { C } ^ { \\prime }$ ，此时得到变换后的 Roothaan 方程：<br>$$<br>\\begin{aligned}<br>\\mathbf { F X C } ^ { \\prime } ={}&amp; \\mathbf { S X C ^ { \\prime } \\varepsilon } \\<br>\\left( \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X } \\right) \\mathbf { C } ^ { \\prime } ={}&amp; \\left( \\mathbf { X } ^ { + } \\mathbf { S X } \\right) \\mathbf { C } ^ { \\prime } \\boldsymbol { \\varepsilon }\\<br>\\mathbf { F } ^ { \\prime } \\mathbf { C } ^ { \\prime } ={}&amp; \\mathbf { C } ^ { \\prime } \\boldsymbol { \\varepsilon }<br>\\end{aligned}<br>$$<br>此时对角化 Fock 矩阵 $\\mathbf{F}’$ ，即可得到系数矩阵 $\\mathbf C’$ 和本征值 $\\boldsymbol{\\varepsilon}$ 。 </p>\n<h2 id=\"SCF-迭代步骤\"><a href=\"#SCF-迭代步骤\" class=\"headerlink\" title=\"SCF 迭代步骤\"></a>SCF 迭代步骤</h2><ol>\n<li>给定分子的初始信息（核位置 $\\vec{R}<em>\\alpha$，元素种类 ${Z</em>{\\alpha}}$ ，电子个数 $N_{elec}$ ，以及基函数 $\\left{ \\chi _ { v } \\right}$ ）；</li>\n<li>计算分子积分 $S _ { \\mu \\nu } , \\quad h _ { \\mu \\nu } ^ { \\text { core } } , \\langle \\mu v | \\lambda \\sigma \\rangle$ ；</li>\n<li>幺正化 $\\mathbf{S}$ 矩阵，得到变换矩阵 $\\mathbf{X}$ ；</li>\n<li><strong>猜</strong>一个初始密度矩阵 $\\mathbf{P}$ ；</li>\n<li>由密度矩阵 $\\mathbf{P}$ 和双电子积分计算 $\\mathbf{G}$ 矩阵；</li>\n<li>构造 Fock 矩阵 $ \\mathbf { F } = \\mathbf { h } ^ { \\mathrm { core } } + \\mathbf { G } $ ；</li>\n<li>计算变换后的 Fock 矩阵 $\\mathbf { F } ^ { \\prime } = \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X }$ ；</li>\n<li>对角化 $\\mathbf{F}’$ 得到 $\\mathbf{C}’$ 和 $\\boldsymbol{\\varepsilon}$ ；</li>\n<li>计算系数矩阵 $\\mathbf { C } = \\mathbf { X } \\mathbf { C } ^ { \\prime }$ ；</li>\n<li>构造密度矩阵 $\\mathbf{P}$ ： $P _ { \\mu } = \\sum _ { j } ^ { N / 2 } C _ { \\mu } C _ { v j } ^ { * }$ ；</li>\n<li>验证密度矩阵 $\\mathbf{P}$ 和能量 $\\varepsilon$ 是否收敛，若未收敛，返回步骤 5，用刚得到的密度矩阵 $\\mathbf{P}$ 计算 $\\mathbf{G}$ 矩阵；</li>\n<li>计算已经收敛，迭代结束，计算能量期待值与其它性质。</li>\n</ol>\n<h2 id=\"基本计算结果\"><a href=\"#基本计算结果\" class=\"headerlink\" title=\"基本计算结果\"></a>基本计算结果</h2><ol>\n<li>轨道能与电子能量；</li>\n<li>势能面、构型优化、振动频率分析；</li>\n<li>单电子性质（如分子偶极矩）；</li>\n<li>电荷密度计算等。</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>Hatree-Fock 方法的几个关键点：</p>\n<ol>\n<li>使用 Slater 行列式描述分子的波函数；</li>\n<li>使用基函数将分子轨道展开，便于计算；</li>\n<li>使用自洽场方法迭代计算；</li>\n<li>$J_{11} - K_{11} = 0$ ，没有自相关作用。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"多原子分子体系S-方程的描述\"><a href=\"#多原子分子体系S-方程的描述\" class=\"headerlink\" title=\"多原子分子体系S-方程的描述\"></a>多原子分子体系S-方程的描述</h1><h2 id=\"Hamiltonian-算符\"><a href=\"#Hamiltonian-算符\" class=\"headerlink\" title=\"Hamiltonian 算符\"></a>Hamiltonian 算符</h2><p>在非相对论近似下，分子体系满足多体 Schrodinger 方程：<br>$$<br>\\hat { H } \\Phi = \\varepsilon \\Phi<br>$$<br>其中 $\\hat{H}$ 是分子体系的 Hamiltonian 算符，$\\Phi$ 是分子体系的波函数。</p>\n<p>设一个分子体系含 $M$ 个核，$N$ 个电子，则它的 Hamiltonian 可以写成</p>\n<p>$$<br>\\begin{align<em>}<br>\\hat { H } ={}&amp; \\hat { T } _ { e } + \\hat { T } _ { N } + \\hat { V } _ { N e } + \\hat { V } _ { e e } + \\hat { V } _ { N N } \\<br>={}&amp; - \\sum _ { i = 1 } ^ { N } \\frac { 1 } { 2 } \\nabla _ { i } ^ { 2 } - \\sum _ { \\alpha = 1 } ^ { M } \\frac { 1 } { 2 M _ { \\alpha } } \\nabla _ { \\alpha } ^ { 2 } - \\sum _ { i = 1 } ^ { N } \\sum _ { \\alpha = 1 } ^ { M } \\frac { Z _ { \\alpha } } { r _ { i \\alpha } } + \\sum _ { i = 1 } ^ { N } \\sum _ { j &gt; i } ^ { N } \\frac { 1 } { r _ { i j } } + \\sum _ { \\alpha = 1 } ^ { M } \\sum _ { \\beta &gt; \\alpha } ^ { M } \\frac { Z _ { \\alpha } Z _ { \\beta } } { R _ { \\alpha \\beta } }<br>\\end{align</em>} \\tag{2}<br>$$</p>\n<p>式子中 $\\alpha, \\beta$ 表示原子核的标号，$Z_{\\alpha}$ 表示核电荷数，$M_{\\alpha}$ 表示原子核的质量（原子单位制）， $i,j$ 表示电子的标号。</p>\n<h3 id=\"Born-Oppenheimer-近似\"><a href=\"#Born-Oppenheimer-近似\" class=\"headerlink\" title=\"Born-Oppenheimer 近似\"></a>Born-Oppenheimer 近似</h3><p>Born-Oppenheimer 近似：电子的质量远远小于核的质量，故核的运动相对于电子是相当缓慢的，因此研究电子的运动行为时认为核是不动的，就好比放牛时牛和它周围的牛蝇运动一样。</p>\n<p>经过 Born-Oppenheimer 近似，电子与核的运动被解耦，它们被分开处理，分子的波函数可以写成电子波函数和核波函数乘积的形式，即<br>$$<br>\\Phi = \\Psi _ { e l } \\Psi _ { N } \\notag<br>$$<br>于是电子运动和核的运动分别描述为<br>$$<br>\\begin{cases}<br>\\left( \\hat { T } _ { e } + \\hat { V } _ { N e } + \\hat { V } _ { e e } \\right) \\Psi _ { e l } = E _ { e l } \\Psi _ { e l }\\<br>\\left(\\hat { T } _ { N } + \\hat { V } _ { N N }\\right) \\Psi _ { N } = \\left( \\varepsilon - E _ { e l } \\right) \\Psi _ { N }<br>\\end{cases} \\label{eq:oppenheimer}<br>$$</p>\n<p>$\\eqref{eq:oppenheimer}$ 式中第一个方程即为电子的运动方程，也是量子化学主要研究的问题。</p>\n<h3 id=\"平均场近似\"><a href=\"#平均场近似\" class=\"headerlink\" title=\"平均场近似\"></a>平均场近似</h3><p>忽略电子之间的瞬时运动关联，每个电子视为在核与其他电子建立的平均势场中运动。每个电子的状态用一个分子轨道（分子波函数）描述，即<br>$$<br>\\hat { h } ( 1 ) \\psi _ { i } ( 1 ) = \\varepsilon _ { i } \\psi _ { i } ( 1 ) \\label{eq:mo}<br>$$<br>其中 ${ \\psi_i }$ 为分子轨道（MO）； ${ \\epsilon_i }$ 为轨道能 。</p>\n<p>其中单电子算符 $ \\hat { h } ( 1 ) = - \\frac { 1 } { 2 } \\nabla _ { 1 } ^ { 2 } + \\sum _ { a } - \\frac { Z _ { a } } { r _ { 1 a } } + \\hat { v } _ { e f f } ( 1 ) $ ， $\\hat { v } _ { e f f } ( 1 )$ 是等效单电子势，即其他电子对该电子相互作用的等效作用势。</p>\n<p>总电子的波函数用行列式波函数（Slater 行列式）描述，总电子能量为</p>\n<p>$$<br>E _ { e l } = \\left\\langle \\Psi \\left| H _ { e l } \\right| \\Psi \\right\\rangle<br>$$</p>\n<h3 id=\"LCAO-近似\"><a href=\"#LCAO-近似\" class=\"headerlink\" title=\"LCAO 近似\"></a>LCAO 近似</h3><p>分子轨道取为某些合理的原子轨道线性组合：<br>$$<br>\\psi _ { i } = \\sum _ { v } c _ { v i } \\varphi _ { v } \\label{eq:lcao}<br>$$<br>$\\eqref{eq:lcao}$ 中$c_{vi}$ 表示原子轨道的系数， $\\varphi_v$ 表示原子轨道。</p>\n<p>注：这里的分子轨道指自旋轨道，区别于空间轨道。（自旋轨道 = 空间轨道 * 自旋， $\\psi_i = \\varphi_i \\eta_i$）</p>\n<h2 id=\"行列式波函数\"><a href=\"#行列式波函数\" class=\"headerlink\" title=\"行列式波函数\"></a>行列式波函数</h2><p>由于电子具有交换反对称性，简单乘积波函数<br>$$<br>\\Phi = \\prod_i \\psi_i<br>$$<br>不能描述这个性质，故必须使用 Slater 行列式描述体系的波函数，即：<br>$$<br>\\begin{align}<br>\\Psi \\left( q _ { 1 } , \\cdots , q _ { N } \\right) ={}&amp; \\frac { 1 } { \\sqrt { N ! } } \\nonumber<br>\\begin{vmatrix} \\begin{array} { c c c } { \\psi _ { 1 } \\left( q _ { 1 } \\right) } &amp; { \\cdots } &amp; { \\psi _ { 1 } \\left( q _ { N } \\right) } \\ { \\psi _ { 2 } \\left( q _ { 1 } \\right) }&amp; \\cdots &amp; { \\psi _ { 2 } \\left( q _ { N } \\right) } \\ { \\vdots }&amp; \\ddots &amp; { \\vdots } \\ { \\psi _ { N } \\left( q _ { 1 } \\right) }&amp; \\cdots &amp; { \\psi _ { N } \\left( q _ { N } \\right) } \\end{array} \\end{vmatrix} \\ \\nonumber<br>={}&amp; | \\psi _ { 1 } \\psi _ { 2 } \\cdots \\psi _ { N } \\rangle \\<br>={}&amp;  \\frac { 1 } { \\sqrt { N ! } } \\sum _ { n = 1 } ^ { N ! } ( - 1 ) ^ { P _ { n } } \\hat { P } _ { n } \\left{ \\psi _ { 1 } \\left( q _ { 1 } \\right) \\psi _ { 2 } \\left( q _ { 2 } \\right) \\cdots \\psi _ { N } \\left( q _ { N } \\right) \\right}  \\label{eq:slater}<br>\\end{align}<br>$$</p>\n<ul>\n<li>$\\hat{P}$ 算符是交换算符， $\\hat{P}_{12}$ 表示将 1, 2 号轨道上的电子互换；</li>\n<li>$\\eqref{eq:slater}$ 中的每个电子的分子轨道都满足正交归一性： $ \\left\\langle \\psi _ { i } | \\psi _ { j } \\right\\rangle = \\int \\psi _ { i } ^ { * } ( 1 ) \\psi _ { j } ( 1 ) d q _ { 1 } = \\delta _ { i j } $ （即每个电子只能占据一个轨道）；</li>\n<li>如果两个行列式波函数的自旋轨道不完全相同，则它们正交。</li>\n</ul>\n<h2 id=\"库仑作用与交换作用\"><a href=\"#库仑作用与交换作用\" class=\"headerlink\" title=\"库仑作用与交换作用\"></a>库仑作用与交换作用</h2><h3 id=\"库仑作用\"><a href=\"#库仑作用\" class=\"headerlink\" title=\"库仑作用\"></a>库仑作用</h3><p>库仑作用是指两个电子（无论自旋是否相同）之间存在的静电相互作用：<br>$$<br>\\begin{aligned} J _ { 1 s 2 s } &amp; = \\int \\frac { \\left| \\psi _ { 1 } ( 1 ) \\right| ^ { 2 } \\cdot \\left| \\psi _ { 2 } ( 2 ) \\right| ^ { 2 } } { r _ { 12 } } d q _ { 1 } d q _ { 2 } \\ &amp; = \\int \\frac { \\left| \\varphi _ { 1 s } ( 1 ) \\right| ^ { 2 } \\cdot \\varphi _ { 2 s } \\left. ( 2 ) \\right| ^ { 2 } } { r _ { 12 } } d \\vec { r } _ { 1 } d \\vec { r } _ { 2 } \\int \\left| \\eta _ { 1 } ( 1 ) \\right| ^ { 2 } d \\omega _ { 1 } \\int \\left| \\eta _ { 2 } ( 2 ) \\right| ^ { 2 } d \\omega _ { 2 } \\end{aligned}<br>$$</p>\n<h3 id=\"交换作用\"><a href=\"#交换作用\" class=\"headerlink\" title=\"交换作用\"></a>交换作用</h3><p>以 He​ 体系为例：<br>$$<br>\\Psi ( 1,2 ) = \\frac { 1 } { \\sqrt { 2 } } \\left| \\begin{array} { l l } { \\psi _ { 1 } ( 1 ) } &amp; { \\psi _ { 1 } ( 2 ) } \\ { \\psi _ { 2 } ( 1 ) } &amp; { \\psi _ { 2 } ( 2 ) } \\end{array} \\right|<br>$$<br>则它的能量期待值为：<br>$$<br>\\begin{aligned}<br>E ={}&amp; \\frac { 1 } { 2 } \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) - \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\left| \\hat { h } ( 1 ) + \\hat { h } ( 2 ) + \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) - \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\<br>={}&amp; \\frac { 1 } { 2 } \\left{ 2 \\times \\left( \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } \\right) - 2 \\times \\left[ \\left\\langle \\psi _ { 1 } ( 1 ) | \\hat { h } ( 1 ) | \\psi _ { 2 } ( 1 ) \\right\\rangle \\left\\langle \\psi _ { 2 } ( 2 ) | \\psi _ { 1 } ( 2 ) \\right\\rangle +\\right. \\right. \\<br>&amp; \\left. \\left. \\left\\langle \\psi _ { 1 } ( 1 ) | \\psi _ { 2 } ( 1 ) \\right\\rangle \\left\\langle \\psi _ { 2 } ( 2 ) | \\hat { h } ( 2 ) | \\psi _ { 1 } ( 2 ) \\right\\rangle + \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\right]  \\right}\\<br>={}&amp; \\frac { 1 } { 2 } \\left{ 2 \\times \\left( \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } \\right) - 2 \\times \\left[ 0 + 0 + \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle \\right] \\right} \\<br>={}&amp; \\varepsilon _ { 1 s } ^ { 0 } + \\varepsilon _ { 2 s } ^ { 0 } + J _ { 1 s 2 s } - K _ { 1 s 2 s }<br>\\end{aligned}<br>$$<br>上式中的 $K_{1s 2s} = \\left\\langle \\psi _ { 1 } ( 1 ) \\psi _ { 2 } ( 2 ) \\left| \\frac { 1 } { r _ { 12 } } \\right| \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) \\right\\rangle$ 即为交换能。</p>\n<p>交换作用是指<strong>同自旋</strong>的两个电子之间存在的相互作用：<br>$$<br>\\begin{aligned}<br>K _ { 1s 2s } ={}&amp; \\int \\frac { \\psi_ { 1 } ( 1 ) ^<em> \\psi _ { 2 } ( 2 ) ^</em> \\psi _ { 2 } ( 1 ) \\psi _ { 1 } ( 2 ) } { r _ { 12 } } d q _ { 1 } d q _ { 2 } \\<br>={} &amp; \\int \\frac { \\varphi _ { 1 s } ( 1 ) ^ { <em> } \\varphi _ { 2 s } ( 2 ) ^</em> \\varphi _ { 2 s } ( 1 ) \\varphi _ { 1 s } ( 2 ) } { r _ { 12 } } d \\vec { r _ { 1 } } d \\vec { r _ { 2 } } \\int \\eta _ { 1 } ( 1 ) ^ { <em> } \\eta _ { 2 } ( 1 ) d \\omega _ { 1 } \\int \\eta _ { 2 } ( 2 ) ^ { </em> } \\eta _ { 1 } ( 2 ) d \\omega _ { 2 }<br>\\end{aligned}<br>$$</p>\n<ul>\n<li><p>当 $\\psi_1, \\psi_2$ 同自旋， $\\eta_1 = \\eta_2$ ，$K \\neq 0$ ($K&gt;0$)；</p>\n</li>\n<li><p>当 $\\psi_1, \\psi_2$ 反自旋， $\\eta_1 \\neq \\eta_2$ ，$K = 0$ 。</p>\n<p>这一项可以通过求 Slater 行列式的能量期待值得到。</p>\n</li>\n</ul>\n<p><strong>注</strong>：$J_{11} - K_{11} = 0$ ，电子不存在自相关作用。</p>\n<h3 id=\"行列式波函数的-Pros\"><a href=\"#行列式波函数的-Pros\" class=\"headerlink\" title=\"行列式波函数的 Pros\"></a>行列式波函数的 Pros</h3><ol>\n<li>行列式波函数部分地考虑了同自旋电子间的运动关联（不允许电子占据同一个自旋轨道）；</li>\n<li>同自旋电子间存在交换作用，它使总能量降低；</li>\n<li>多电子原子中，$n, l$ 相同的简并轨道上的电子，将分占磁量子数 $m$ 不同的轨道，并使其自旋平行（Hund 规则）</li>\n</ol>\n<h2 id=\"Slater-Condon-规则\"><a href=\"#Slater-Condon-规则\" class=\"headerlink\" title=\"Slater-Condon 规则\"></a>Slater-Condon 规则</h2><p>Slater-Condon 规则即为 Slater 行列式矩阵元的计算规则，</p>\n<p>$$<br>\\left\\langle \\Psi ^ { \\prime } | \\hat { O } | \\Psi \\right\\rangle = \\int \\left[ \\left( \\Psi ^ { \\prime } \\right) ^* \\hat { O } \\Psi \\right] d q _ { 1 } \\cdots d q _ { N } = ?<br>$$</p>\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><ol>\n<li><p>算符：</p>\n<ol>\n<li>单电子算符：$ \\hat { O } _ { 1 } = \\sum _ { n } \\hat { h } ( n ) $ ；</li>\n<li>双电子算符： $ \\hat { O } _ { 2 } = \\sum _ { n &lt; m } \\frac { 1 } { r _ { n m } } $ 。</li>\n</ol>\n</li>\n<li><p>行列式：</p>\n<ol>\n<li><p>对角矩阵元：<br>$$<br>| \\Psi ^ { \\prime } \\rangle = | \\Psi \\rangle \\nonumber<br>$$</p>\n</li>\n<li><p>非对角矩阵元 1:<br>$$<br>\\begin{aligned}<br>| \\Psi \\rangle &amp; = | \\psi _ { 1 } \\cdots \\psi _ { k } \\cdots \\psi _ { N } \\rangle \\<br>| \\Psi ^ { \\prime } \\rangle &amp; = | \\psi _ { 1 } \\cdots \\psi _ { a } \\cdots \\psi _ { N } \\rangle \\quad \\text{单激发组态} \\end{aligned}<br>$$</p>\n</li>\n<li><p>非对角矩阵元 2:<br>$$<br>\\begin{array} { l } { | \\Psi \\rangle = | \\cdots \\psi _ { k } \\cdots \\psi _ { l } \\cdots \\rangle } \\ { | \\Psi ^ { \\prime \\prime } \\rangle = | \\dots \\psi _ { a } \\cdots \\psi _ { b } \\cdots \\rangle } \\quad \\text{双激发组态} \\end{array} \\nonumber<br>$$</p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h3><ol>\n<li><p>重叠：</p>\n<ol>\n<li><p>对角矩阵元：<br>$$<br>\\langle \\Psi | \\Psi \\rangle = 1<br>$$</p>\n</li>\n<li><p>单激发态&amp;双激发态：<br>$$<br>\\left\\langle \\Psi ^ { \\prime } | \\Psi \\right\\rangle = 0<br>$$</p>\n</li>\n</ol>\n</li>\n<li><p>单电子算符：</p>\n<ol>\n<li><p>对角矩阵元：<br>$$<br>\\left\\langle \\Psi \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = \\sum _ { i } \\left\\langle \\psi _ { i } | \\hat { h } | \\psi _ { i } \\right\\rangle = \\sum _ { i } \\langle i | \\hat { h } | i \\rangle<br>$$</p>\n</li>\n<li><p>单激发态：<br>$$<br>\\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = \\left\\langle \\psi _ { a } | \\hat { h } | \\psi _ { k } \\right\\rangle = \\langle a | \\hat { h } | k \\rangle<br>$$</p>\n</li>\n<li><p>双激发态：<br>$$<br>\\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 1 } \\right| \\Psi \\right\\rangle = 0<br>$$</p>\n</li>\n</ol>\n</li>\n<li><p>双电子算符：</p>\n<ol>\n<li><p>对角矩阵元：<br>$$<br>\\begin{aligned} \\left\\langle \\Psi \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle &amp; = \\frac { 1 } { 2 } \\sum _ { i = 1 } ^ { N } \\sum _ { j = 1 } ^ { N } \\left\\langle \\psi _ { i } \\psi _ { j } | \\psi _ { i } \\psi _ { j } \\right\\rangle - \\left\\langle \\psi _ { i } \\psi _ { j } | \\psi _ { j } \\psi _ { i } \\right\\rangle \\ &amp; = \\frac { 1 } { 2 } \\sum _ { i = 1 } ^ { N } \\sum _ { j = 1 } ^ { N } \\langle i j | i j \\rangle - \\langle i j | j i \\rangle \\end{aligned}<br>$$</p>\n</li>\n<li><p>单激发态：<br>$$<br>\\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle = \\sum _ { i = 1 } ^ { N } \\langle i a | i k \\rangle - \\langle i a | k i \\rangle<br>$$</p>\n</li>\n<li><p>双激发态：<br>$$<br>\\left\\langle \\Psi ^ { \\prime } \\left| \\hat { O } _ { 2 } \\right| \\Psi \\right\\rangle = \\langle a b | k l \\rangle - \\langle a b | l k \\rangle<br>$$</p>\n</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"Hatree-Fock-方程\"><a href=\"#Hatree-Fock-方程\" class=\"headerlink\" title=\"Hatree-Fock 方程\"></a>Hatree-Fock 方程</h1><p>Hatree-Fock 方程（非正则形式）：<br>$$<br>\\left[ \\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right) \\right] \\psi _ { i } ( 1 ) = \\sum _ { j = 1 } ^ { N } \\varepsilon _ { i j } \\psi _ { j } ( 1 ) \\label{eq:hf_ununitary}<br>$$<br>其中，库伦算符和交换算符：<br>$$<br>\\begin{align}<br>\\hat { J } _ { j } ( 1 ) \\psi _ { i } ( 1 ) = \\left[ \\int \\psi _ { j } ^ { <em> } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { j } ( 2 ) d q _ { 2 } \\right] \\psi _ { i } ( 1 ) \\<br> \\hat { K } _ { j } ( 1 ) \\psi _ { i } ( 1 ) = \\left[ \\int \\psi _ { j } ^ { </em> } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { i } ( 2 ) d q _ { 2 } \\right] \\psi _ { j } ( 1 )<br> \\end{align}<br>$$<br>$\\eqref{eq:hf_ununitary}$ 中 $\\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right)$ 可用 Fock 算符 $\\hat{f}(1)$ 简写代替。</p>\n<p>经过 Unitary 变换， $\\eqref{eq:hf_ununitary}$ 可以变换为正则形式，即：<br>$$<br>\\hat { f } ( 1 ) \\psi _ { i } ( 1 ) = \\varepsilon _ { i } \\psi _ { i } ( 1 )<br>$$</p>\n<p><strong>注：$\\eqref{eq:fock}$ 中的 $\\hat { h } ( 1 ) = - \\frac { 1 } { 2 } \\nabla _ { 1 } ^ { 2 } - \\sum _ { \\alpha } \\frac { Z _ { \\alpha } } { r _ { 1 \\alpha } } $ 表示核 Hamiltonian 项，是单电子算符，与 $\\eqref{eq:mo}$ 中 $\\hat{h}(1)$ 的含义有所区别，请注意区分。</strong></p>\n<h2 id=\"Fock-算符的性质\"><a href=\"#Fock-算符的性质\" class=\"headerlink\" title=\"Fock 算符的性质\"></a>Fock 算符的性质</h2><p>Fock 算符：<br>$$<br>\\hat{f}(1) = \\hat { h } ( 1 ) + \\sum _ { j = 1 } ^ { N } \\left( \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right) \\label{eq:fock}<br>$$</p>\n<ul>\n<li>Fock 算符是等效单电子的哈密顿算符，它的本征函数式分子轨道，本征值为轨道能；</li>\n<li>Fock 算符是 Hermitian 算符（因为交换算符和库仑算符都是 Hermitian 算符，动能项以及核势能项也都是 Hermitian 算符）；</li>\n<li>Fock 算符是分子点群的对称算符，分子轨道属于分子点群的不可约表示；</li>\n<li>Fock 算符之和 $\\sum _ { n = 1 } ^ { N } \\hat { f } ( n ) = \\hat { H } ^ { H F } \\neq \\hat { H } _ { e l }$ ，它将电子间的作用重复计入。</li>\n</ul>\n<h2 id=\"轨道能与电子总能量\"><a href=\"#轨道能与电子总能量\" class=\"headerlink\" title=\"轨道能与电子总能量\"></a>轨道能与电子总能量</h2><h3 id=\"轨道能\"><a href=\"#轨道能\" class=\"headerlink\" title=\"轨道能\"></a>轨道能</h3><p>$$<br>\\varepsilon _ { i } = \\left\\langle \\psi _ { i } | \\hat { f } | \\psi _ { i } \\right\\rangle<br>= \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N } \\left( J _ { i j } - K _ { i j } \\right) \\label{eq:orb_en}<br>$$</p>\n<p>$\\eqref{eq:orb_en}$ 中：</p>\n<ul>\n<li>$\\varepsilon_i^0$ 为 $\\hat{h}(1)$ 的本征值， $\\varepsilon_i$ 为第 $i$ 个轨道的轨道能；</li>\n<li>$ J _ { i j } = \\langle i j | i j \\rangle = \\int d q _ { 1 } d q _ { 2 } \\psi _ { i } ^ { <em> } ( 1 ) \\psi _ { j } ^ { </em> } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { i } ( 1 ) \\psi _ { j } ( 2 ) $；</li>\n<li>$ K _ { i j } = \\langle i j | j i \\rangle = \\int d q _ { 1 } d q _ { 2 } \\psi _ { i } ^ { <em> } ( 1 ) \\psi _ { j } ^ { </em> } ( 2 ) \\frac { 1 } { r _ { 12 } } \\psi _ { j } ( 1 ) \\psi _ { i } ( 2 ) $ 。</li>\n</ul>\n<h3 id=\"电子总能量\"><a href=\"#电子总能量\" class=\"headerlink\" title=\"电子总能量\"></a>电子总能量</h3><p>$$<br>E _ { 0 } = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } \\left[ J _ { i j } - K _ { i j } \\right] \\label{eq:ele_en}<br>$$</p>\n<p>$\\eqref{eq:ele_en}$ 中第二项的 $\\frac{1}{2}$ 表示去除因双重求和重复计入的交换能和库仑能 。</p>\n<p><strong>注：分子轨道能之和不等于电子总能</strong><br>$$<br>\\sum _ { i } ^ { N } \\varepsilon _ { i } = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } \\left[ J _ { i j } - K _ { i j } \\right] \\neq E _ { 0 }<br>$$</p>\n<h2 id=\"Koopmans-定理\"><a href=\"#Koopmans-定理\" class=\"headerlink\" title=\"Koopmans 定理\"></a>Koopmans 定理</h2><p>假如从占据轨道 $\\psi_k$ 上电离一个电子而其他轨道不变，则分子的电离势为 $-\\varepsilon_k$ 。假定在空轨道 $\\psi_r$ 上亲和一个电子而其他轨道不变，则分子的电子亲和势为 $\\varepsilon_r$ ，简言之：当不考虑轨道弛豫时电离能/亲和能近似等于被电离/亲和电子的轨道能。</p>\n<h3 id=\"电离能\"><a href=\"#电离能\" class=\"headerlink\" title=\"电离能\"></a>电离能</h3><p>电离前：</p>\n<p>$$<br>\\begin{align}<br>&amp;| \\Psi _ { 0 } ^ { N } \\rangle = | \\psi _ { 1 } \\cdots \\psi _ { k } \\cdots \\psi _ { N } \\rangle \\nonumber \\<br>&amp;E _ { 0 } = \\left\\langle \\Psi _ { 0 } ^ { N } | \\hat { H } | \\Psi _ { 0 } ^ { N } \\right\\rangle = \\sum _ { i } ^ { N } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i } \\sum _ { j } \\left( J _ { i j } - K _ { i j } \\right) \\nonumber<br>\\end{align}<br>$$</p>\n<p>电离后：<br>$$<br>\\begin{align}<br> | \\Psi _ { k } ^ { N - 1 } \\rangle ={}&amp; | \\psi _ { 1 } \\cdots \\psi _ { k - 1 } \\psi _ { k + 1 } \\cdots \\psi _ { N } \\rangle  \\nonumber \\<br> E _ { k } ^ { + } ={}&amp; \\left\\langle \\Psi _ { k } ^ { N - 1 } | \\hat { H } | \\Psi _ { k } ^ { N - 1 } \\right\\rangle = \\sum _ { i \\neq k } \\varepsilon _ { i } ^ { 0 } + \\frac { 1 } { 2 } \\sum _ { i \\neq k } \\sum _ { j \\neq k } \\left( J _ { i j } - K _ { i j } \\right) \\nonumber<br>\\end{align}<br>$$</p>\n<p>则电离能：<br>$$<br>\\begin{align}<br>I.P. ={}&amp; E _ { k } ^ { + } - E _ { 0 } \\<br>={}&amp; - \\varepsilon _ { k } ^ { 0 } - \\frac { 1 } { 2 } \\left[ \\sum _ { j } \\left( J _ { k j } - K _ { k j } \\right) + \\sum _ { i } \\left( J _ { i k } - K _ { i k } \\right) \\right] \\<br>={}&amp; - \\varepsilon _ { k } ^ { 0 } - \\sum _ { j } \\left( J _ { k j } - K _ { k j } \\right) = - \\varepsilon _ { k }<br>\\end{align}<br>$$</p>\n<h3 id=\"亲和能\"><a href=\"#亲和能\" class=\"headerlink\" title=\"亲和能\"></a>亲和能</h3><p>与电离能同理，<br>$$<br>E . A . = E _ { 0 } - E _ { r } ^ { N + 1 } = - \\varepsilon _ { r } ^ { 0 } - \\sum _ { j } \\left( J _ { r j } - K _ { j r } \\right) = - \\varepsilon _ { r }<br>$$</p>\n<p>Koopmans 定理提供了一种近似求解 $I.P$ 与 $E.A.$ 的方法，但它不考虑电离/亲和后的轨道弛豫和电子的相关效应（事实上整个 Hatree-Fock 近似也没有考虑相关效应），这样求得的电离能与亲和能有误差。</p>\n<h1 id=\"Roothan-方程\"><a href=\"#Roothan-方程\" class=\"headerlink\" title=\"Roothan 方程\"></a>Roothan 方程</h1><p>Roothan 方程的本质是将 Hatree-Fock 方程的分子轨道用一系列基函数展开得到的方程。</p>\n<h2 id=\"限制性与非限制性自旋轨道\"><a href=\"#限制性与非限制性自旋轨道\" class=\"headerlink\" title=\"限制性与非限制性自旋轨道\"></a>限制性与非限制性自旋轨道</h2><p>限制性自旋轨道：假设同一个分子轨道分为两个自旋相反的自旋轨道，它们的空间轨道部分完全相同。限制性自旋轨道一般用于描述闭壳层的电子行为。<br>$$<br>\\psi _ { a } \\left( q _ { 1 } \\right) \\longrightarrow \\left{ \\begin{array} { l } { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\alpha \\left( \\omega _ { 1 } \\right) } \\ { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\beta \\left( \\omega _ { 1 } \\right) } \\end{array} \\right.<br>$$<br>非限制性自旋轨道：同一个分子轨道中自旋轨道的空间轨道部分不同。<br>$$<br>\\psi _ { a } \\left( q _ { 1 } \\right) \\longrightarrow \\left{ \\begin{array} { l } { \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\alpha \\left( \\omega _ { 1 } \\right) } \\ { \\varphi _ { i } ^ {\\color{red} \\prime } \\left( \\vec { r } _ { 1 } \\right) \\beta \\left( \\omega _ { 1 } \\right) } \\end{array} \\right.<br>$$<br>非限制性自旋轨道一般用于描述开壳层的电子行为。</p>\n<h2 id=\"空间轨道的-HF-方程\"><a href=\"#空间轨道的-HF-方程\" class=\"headerlink\" title=\"空间轨道的 HF 方程\"></a>空间轨道的 HF 方程</h2><p>空间轨道的 Hatree-Fock 方程为：<br>$$<br>\\hat { f } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\varepsilon _ { i } \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) \\label{eq:hf_space}<br>$$<br>其中空间轨道的 Fock 算符为：<br>$$<br>\\begin{aligned} { f \\left( \\vec { r } _ { 1 } \\right) = \\hat { h } \\left( \\vec { r } _ { 1 } \\right) + \\sum _ { j = 1 } ^ { N / 2 } 2 \\hat { J } _ { j } \\left( \\vec { r } _ { 1 } \\right) - \\hat { K } _ { j } \\left( \\vec { r } _ { 1 } \\right) } \\ { \\hat { J } _ { j } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\left[ \\int \\frac { \\varphi _ { j } ^ { * } \\left( \\vec { r } _ { 2 } \\right) \\varphi _ { j } \\left( \\vec { r } _ { 2 } \\right) } { r _ { 12 } } d \\vec { r } _ { 2 } \\right] \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) } \\ { \\hat { K } _ { j } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\left[ \\int \\frac { \\varphi _ { j } \\left( \\vec { r } _ { 2 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 2 } \\right) } { r _ { 12 } } d \\vec { r _ { 2 } } \\right] \\varphi _ { j } \\left( \\vec { r } _ { 1 } \\right) } \\end{aligned}<br>$$<br>上面式子中 $ \\hat{K} $ 项前面没有 2 是因为该波函数为限制性自旋波函数，体系为闭壳层，自旋向上和自旋向下的电子个数相同，恰好有一半的空间轨道有电子占据，且这些空间轨道都已经占满，故只有自旋平行的电子之间有交换作用（即只有 $\\frac{N}{2}$ 个电子之间有交换作用）。</p>\n<p>分子轨道的轨道能（自旋轨道）：<br>$$<br>\\varepsilon_i =   \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N } \\left( J _ { i j } - K _ { i j } \\right)<br>$$<br>分子轨道的轨道能（空间轨道，闭壳层限制性）：<br>$$<br>\\varepsilon_i = \\varepsilon _ { i } ^ { 0 } + \\sum _ { j } ^ { N / 2 } \\left( 2 J _ { i j } - K _ { i j } \\right)<br>$$<br>电子总能量（自旋轨道）：<br>$$<br>E_0= \\sum _ { i } ^ { N } h _ { i i } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N } \\sum _ { j } ^ { N } J _ { i j } - K _ { i j }<br>$$<br>电子总能量（空间轨道，闭壳层限制性）：<br>$$<br>E _ 0 = \\sum _ { i } ^ { N / 2 } 2 h _ { i i } + \\frac { 1 } { 2 } \\sum _ { i } ^ { N / 2 } \\sum _ { j } ^ { N / 2 } 2 J _ { i j } - K _ { i j }<br>$$<br>上式中第二项前的 $\\frac{1}{2}$ 表示已经减去重复计入的空间轨道的相互作用。</p>\n<h2 id=\"Roothaan-方程\"><a href=\"#Roothaan-方程\" class=\"headerlink\" title=\"Roothaan 方程\"></a>Roothaan 方程</h2><p>引入一组<strong>已知</strong>的基函数将空间轨道展开：<br>$$<br>\\varphi _ { i } = \\sum _ { v = 1 } ^ { m } C _ { vi } \\chi _ { v } \\quad i = 1,2 , \\cdots , m  \\label{eq:roothaan_base}<br>$$<br>将 $\\eqref{eq:roothaan_base}$ 代入 $\\eqref{eq:hf_space}$ 可以得到：<br>$$<br>\\hat { f } \\left( \\vec { r } _ { 1 } \\right) \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right) = \\varepsilon _ { i } \\varphi _ { i } \\left( \\vec { r } _ { 1 } \\right)  \\quad i = 1,2 , \\cdots , m<br>$$<br>上式左乘 $\\chi_{\\mu}^<em> (1)$ 并积分，得到：<br>$$<br>\\sum _ { v } ^ { m } C _ { v i } \\langle \\chi _ { \\mu } ( 1 ) | \\hat { f } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\varepsilon _ { i } \\sum _ { v } ^ { m } C _ { v i } \\langle \\chi _ { \\mu } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle \\quad i = 1,2 , \\cdots , m<br>$$<br>令 $ S _ { \\mu \\nu } = \\langle \\chi _ { \\mu } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { </em> } ( 1 ) \\chi _ { v } ( 1 ) $ ，</p>\n<p>$ F _ { \\mu v } = \\langle \\chi _ { \\mu } ( 1 ) | \\hat { f } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) $ </p>\n<p>由此可以得到方程组：<br>$$<br>\\sum _ { v } ^ { m } F _ { \\mu \\nu } C _ { v i } = \\varepsilon _ { i } \\sum _ { v } ^ { m } S _ { \\mu \\nu } C _ { v i } \\quad i = 1,2 , \\cdots , m<br>$$<br>或者写成矩阵形式：<br>$$<br>\\mathbf { F C } _ { i } = \\varepsilon _ { i } \\mathbf { S } \\mathbf { C } _ { i } \\quad i = 1,2 , \\cdots , m<br>$$<br>合并写成矩阵方程：<br>$$<br>\\mathbf { F C } = \\mathbf { S } \\mathbf { C } \\boldsymbol { \\varepsilon } \\tag{*} \\label{eq:roothaan}<br>$$<br>$\\eqref{eq:roothaan}​$ 即为 Roothaan 方程。</p>\n<p>其中：<br>$$<br>\\mathbf { C } = \\left( \\begin{array} { c c c c } { C _ { 11 } } &amp; { C _ { 12 } } &amp; { \\cdots } &amp; { C _ { 1 m } } \\ { C _ { 21 } } &amp; { C _ { 22 } } &amp; { \\cdots } &amp; { C _ { 2 m } } \\ { C _ { 31 } } &amp; { C _ { 32 } } &amp; { \\cdots } &amp; { C _ { 3 m } } \\ { \\vdots } &amp; { \\vdots } &amp; { } &amp; { \\vdots } \\ { C _ { m 1 } } &amp; { C _ { m 2 } } &amp; { \\cdots } &amp; { C _ { m m } } \\end{array} \\right) ,\\quad<br>\\boldsymbol { \\varepsilon } = \\left( \\begin{array} { c c c c } { \\varepsilon _ { 1 } } &amp; { } &amp; { } &amp; { O } \\ { } &amp; { \\varepsilon _ { 2 } } &amp; { } &amp; { } \\ { } &amp; { } &amp; { \\ddots } &amp; { } \\ { O } &amp; { } &amp; { } &amp; { \\varepsilon _ { m } } \\end{array} \\right)<br>$$<br>它们分别表示分子轨道（空间轨道）和轨道能。</p>\n<p>$C_{ij}$ 表示第 $j$ 个分子轨道（空间轨道）第 $i$ 个基函数的系数。</p>\n<h3 id=\"重叠矩阵\"><a href=\"#重叠矩阵\" class=\"headerlink\" title=\"重叠矩阵\"></a>重叠矩阵</h3><p>$$<br>S _ { \\mu \\nu } = \\langle \\chi _ { \\mu } ^ { <em> } ( 1 ) | \\chi _ { v } ( 1 ) \\rangle = \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { </em> } ( 1 ) \\chi _ { v } ( 1 )<br>$$</p>\n<p>且<br>$$<br>S _ { \\mu \\nu } ^ { <em> } = \\left[ \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { </em> } ( 1 ) \\chi _ { v } ( 1 ) \\right] ^ { <em> } = \\int d \\vec { r } _ { 1 } \\chi _ { v } ^ { </em> } ( 1 ) \\chi _ { \\mu } ( 1 ) = S _ { v \\mu }<br>$$<br>故 $\\mathbf{S}$ 为一个 $m \\times m$ 的 Hermitian 矩阵，且 $0 \\leq \\left| S _ { \\mu\\nu } \\right| \\leq 1$</p>\n<h3 id=\"Fock矩阵\"><a href=\"#Fock矩阵\" class=\"headerlink\" title=\"Fock矩阵\"></a>Fock矩阵</h3><p>$$<br>\\begin{aligned}<br>\\mathbf{F} _ { \\mu \\nu } ={}&amp; \\langle \\chi _ { \\mu } ^ { <em> } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) \\rangle \\<br>={}&amp; \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { </em> } ( 1 ) \\hat { f } ( 1 ) \\chi _ { v } ( 1 ) \\<br>={} &amp; h _ { \\mu v } ^ { c o r e } + \\sum _ { j } ^ { N / 2 } \\int d \\vec { r } _ { 1 } \\chi _ { \\mu } ^ { * } ( 1 ) \\left[ 2 \\hat { J } _ { j } ( 1 ) - \\hat { K } _ { j } ( 1 ) \\right] \\chi _ { v } ( 1 )<br>\\end{aligned}<br>$$</p>\n<p>令 $\\varphi _ { j } = \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } \\chi _ { \\sigma }$ ，$ \\varphi _ { j } ^ { <em> } = \\sum _ { \\lambda } ^ { m } C _ { \\lambda j } ^ { </em> } \\chi _ { \\lambda } ^ { <em> } $  ，则<br>$$<br>\\begin{aligned}<br>\\int \\chi _ { \\mu } ^ { </em> } ( 1 ) \\hat { J } _ { j } ( 1 ) \\chi _ { v } ( 1 ) d \\vec { r } _ { 1 } = \\sum _ { \\lambda } ^ { m } \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } C _ { \\lambda j } ^ { <em> } \\langle \\mu v | \\lambda \\sigma \\rangle \\<br>\\int \\chi _ { \\mu } ^ { </em> } ( 1 ) \\hat { K } _ { j } ( 1 ) \\chi _ { v } ( 1 ) d \\vec { r } _ { 1 } = \\sum _ { \\lambda } ^ { m } \\sum _ { \\sigma } ^ { m } C _ { \\sigma j } C _ { \\lambda j } ^ { <em> } \\langle \\mu {\\color{red} \\sigma} | \\lambda {\\color{red} v} \\rangle<br>\\end{aligned}<br>$$<br>所以 Fock 矩阵的矩阵元可以进一步写成<br>$$<br>\\begin{aligned}<br>F _ { \\mu \\nu } ={}&amp; h _ { \\mu \\nu } ^ { c o r e } + \\sum _ { \\lambda , \\sigma } ^ { m , m } \\sum _ { j } ^ { N / 2 } C _ { \\sigma j } C _ { \\lambda j } ^ { </em> } [ 2 ( \\mu v | \\lambda \\sigma ) - ( \\mu \\sigma | \\lambda v ) ] \\<br>={}&amp; h _ { \\mu \\nu } ^ { c o r e } + \\sum _ { \\lambda , \\sigma } ^ { m , m } P _ { \\sigma \\lambda } [ 2 ( \\mu v | \\lambda \\sigma ) - ( \\mu \\sigma | \\lambda v ) ] \\<br>={}&amp; h _ { \\mu \\nu } ^ { c o r e } + G _ { \\mu \\nu }<br>\\end{aligned}<br>$$<br>$G_{\\mu\\nu}$ 矩阵即为 Fock 矩阵的双电子项，由密度矩阵 $P_{\\sigma \\lambda}$和基函数的双电子积分给出。 </p>\n<h3 id=\"密度矩阵\"><a href=\"#密度矩阵\" class=\"headerlink\" title=\"密度矩阵\"></a>密度矩阵</h3><p>定义密度矩阵：<br>$$<br>P _ { \\sigma \\lambda } = \\sum _ { j } ^ { N / 2 } C _ { \\sigma j } C _ { \\lambda j } ^ { * } = \\sum _ { j } ^ { N / 2 } ( C ) _ { \\sigma j } \\left( C ^ { \\dagger } \\right) _ { j \\lambda }<br>$$<br>$C$ 是分子轨道基函数的展开系数。</p>\n<p>由于闭壳层的限制性，只有 $N/2$ 个空间轨道占有电子，且都占满，故密度矩阵通常等于<br>$$<br>P = C _ { 0 } C _ { 0 } ^ { \\dagger } = \\left( \\begin{array} { c c c } { \\vdots } &amp; { } &amp; { } \\ { c _ { \\sigma 1 } } &amp; { \\dots } &amp; { c _ { \\sigma N / 2 } } \\ { \\vdots } &amp; { } &amp; { } \\end{array} \\right) \\left( \\begin{array} { c c c } { } &amp; { c _ { \\lambda 1 } ^ { <em> } } \\ { \\ldots } &amp; { \\vdots } &amp; { \\cdots } \\ { } &amp; { c _ { \\lambda N / 2 } ^ { </em> } } \\end{array} \\right)<br>$$</p>\n<h2 id=\"基的幺正化\"><a href=\"#基的幺正化\" class=\"headerlink\" title=\"基的幺正化\"></a>基的幺正化</h2><p>Roothaan 方程 $\\mathbf { F C } = \\mathbf { S } \\mathbf { C\\varepsilon } $  不是标准的矩阵本征值方程，如果 $\\mathbf{S}  = 1$，则 $\\mathbf { F C } = \\mathbf { C } \\varepsilon$  是标准的本征值方程。所以要对 Roothaan 方程进行  Unitary 变换使其满足标准本征值方程，才能进行求解。</p>\n<p>构造变换矩阵 $\\mathbf{X}​$ 使得<br>$$<br>\\mathbf { X } ^ { \\dagger } \\mathbf { S X } = \\mathbf { S } ^ { \\prime } = \\mathbf { I }<br>$$</p>\n<p>则构造变换后的 Fock 矩阵 $\\mathbf{F}’$</p>\n<p>$$<br>\\mathbf { F } ^ { \\prime } = \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X }<br>$$<br>继续假设原系数矩阵 $\\mathbf { C } = \\mathbf { X } \\mathbf { C } ^ { \\prime }$ ，此时得到变换后的 Roothaan 方程：<br>$$<br>\\begin{aligned}<br>\\mathbf { F X C } ^ { \\prime } ={}&amp; \\mathbf { S X C ^ { \\prime } \\varepsilon } \\<br>\\left( \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X } \\right) \\mathbf { C } ^ { \\prime } ={}&amp; \\left( \\mathbf { X } ^ { + } \\mathbf { S X } \\right) \\mathbf { C } ^ { \\prime } \\boldsymbol { \\varepsilon }\\<br>\\mathbf { F } ^ { \\prime } \\mathbf { C } ^ { \\prime } ={}&amp; \\mathbf { C } ^ { \\prime } \\boldsymbol { \\varepsilon }<br>\\end{aligned}<br>$$<br>此时对角化 Fock 矩阵 $\\mathbf{F}’$ ，即可得到系数矩阵 $\\mathbf C’$ 和本征值 $\\boldsymbol{\\varepsilon}$ 。 </p>\n<h2 id=\"SCF-迭代步骤\"><a href=\"#SCF-迭代步骤\" class=\"headerlink\" title=\"SCF 迭代步骤\"></a>SCF 迭代步骤</h2><ol>\n<li>给定分子的初始信息（核位置 $\\vec{R}<em>\\alpha$，元素种类 ${Z</em>{\\alpha}}$ ，电子个数 $N_{elec}$ ，以及基函数 $\\left{ \\chi _ { v } \\right}$ ）；</li>\n<li>计算分子积分 $S _ { \\mu \\nu } , \\quad h _ { \\mu \\nu } ^ { \\text { core } } , \\langle \\mu v | \\lambda \\sigma \\rangle$ ；</li>\n<li>幺正化 $\\mathbf{S}$ 矩阵，得到变换矩阵 $\\mathbf{X}$ ；</li>\n<li><strong>猜</strong>一个初始密度矩阵 $\\mathbf{P}$ ；</li>\n<li>由密度矩阵 $\\mathbf{P}$ 和双电子积分计算 $\\mathbf{G}$ 矩阵；</li>\n<li>构造 Fock 矩阵 $ \\mathbf { F } = \\mathbf { h } ^ { \\mathrm { core } } + \\mathbf { G } $ ；</li>\n<li>计算变换后的 Fock 矩阵 $\\mathbf { F } ^ { \\prime } = \\mathbf { X } ^ { + } \\mathbf { F } \\mathbf { X }$ ；</li>\n<li>对角化 $\\mathbf{F}’$ 得到 $\\mathbf{C}’$ 和 $\\boldsymbol{\\varepsilon}$ ；</li>\n<li>计算系数矩阵 $\\mathbf { C } = \\mathbf { X } \\mathbf { C } ^ { \\prime }$ ；</li>\n<li>构造密度矩阵 $\\mathbf{P}$ ： $P _ { \\mu } = \\sum _ { j } ^ { N / 2 } C _ { \\mu } C _ { v j } ^ { * }$ ；</li>\n<li>验证密度矩阵 $\\mathbf{P}$ 和能量 $\\varepsilon$ 是否收敛，若未收敛，返回步骤 5，用刚得到的密度矩阵 $\\mathbf{P}$ 计算 $\\mathbf{G}$ 矩阵；</li>\n<li>计算已经收敛，迭代结束，计算能量期待值与其它性质。</li>\n</ol>\n<h2 id=\"基本计算结果\"><a href=\"#基本计算结果\" class=\"headerlink\" title=\"基本计算结果\"></a>基本计算结果</h2><ol>\n<li>轨道能与电子能量；</li>\n<li>势能面、构型优化、振动频率分析；</li>\n<li>单电子性质（如分子偶极矩）；</li>\n<li>电荷密度计算等。</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>Hatree-Fock 方法的几个关键点：</p>\n<ol>\n<li>使用 Slater 行列式描述分子的波函数；</li>\n<li>使用基函数将分子轨道展开，便于计算；</li>\n<li>使用自洽场方法迭代计算；</li>\n<li>$J_{11} - K_{11} = 0$ ，没有自相关作用。</li>\n</ol>\n"}],"PostAsset":[{"_id":"source/_posts/2018-12-31_WAVECAR-parsing/a.png","slug":"a.png","post":"cjt2yjbbl001bzq4izeii8x5n","modified":0,"renderable":0},{"_id":"source/_posts/Quantum-Physics-Learning-Log-1/fig.svg","slug":"fig.svg","post":"cjt2yjbbt001hzq4ig5b7b9ye","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/ex1.aux","slug":"ex1.aux","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/ex1.pdf","slug":"ex1.pdf","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/ex1.synctex.gz","slug":"ex1.synctex.gz","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/ex1.tex","slug":"ex1.tex","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/ex2.aux","slug":"ex2.aux","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/ex2.pdf","slug":"ex2.pdf","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/ex2.synctex.gz","slug":"ex2.synctex.gz","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/ex2.tex","slug":"ex2.tex","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/vib1.ggb","slug":"vib1.ggb","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/vib1.svg","slug":"vib1.svg","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/vib2.ggb","slug":"vib2.ggb","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/how-to-solve-viberation-1/vib2.svg","slug":"vib2.svg","post":"cjt2yjbbv001kzq4ihc0jacie","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/Sagiri.jpg","slug":"Sagiri.jpg","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/animated.gif","slug":"animated.gif","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig1.ggb","slug":"fig1.ggb","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig1.png","slug":"fig1.png","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig2.ggb","slug":"fig2.ggb","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig2.png","slug":"fig2.png","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig2.svg","slug":"fig2.svg","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig3.ggb","slug":"fig3.ggb","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig3.png","slug":"fig3.png","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig4.ggb","slug":"fig4.ggb","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig4.png","slug":"fig4.png","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig5.ggb","slug":"fig5.ggb","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig5.gif","slug":"fig5.gif","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig5.png","slug":"fig5.png","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig6.ggb","slug":"fig6.ggb","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig6_1.png","slug":"fig6_1.png","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig6_2.pdf","slug":"fig6_2.pdf","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig6_2.svg","slug":"fig6_2.svg","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig6_3.pdf","slug":"fig6_3.pdf","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/Coriolis-Force/fig6_3.svg","slug":"fig6_3.svg","post":"cjt2yjbbq001fzq4ik3quozzm","modified":0,"renderable":0},{"_id":"source/_posts/how-to-struggle-with-vasp/lattice1.ggb","slug":"lattice1.ggb","post":"cjt2yjbcu002izq4iy3gcupkx","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjt2yjb610008zq4i0511em0q","category_id":"cjt2yjb5y0004zq4il42ivp00","_id":"cjt2yjb66000ezq4ice4dzrqb"},{"post_id":"cjt2yjb5s0000zq4iu868k674","category_id":"cjt2yjb5y0004zq4il42ivp00","_id":"cjt2yjb66000hzq4i2x2no635"},{"post_id":"cjt2yjb5w0002zq4iq8z5vzh9","category_id":"cjt2yjb5y0004zq4il42ivp00","_id":"cjt2yjb69000izq4ii4k55xdq"},{"post_id":"cjt2yjb5z0006zq4i366vmxx3","category_id":"cjt2yjb66000fzq4i90zp1g5z","_id":"cjt2yjb69000kzq4ixr9jtuvg"},{"post_id":"cjt2yjbbq001fzq4ik3quozzm","category_id":"cjt2yjb66000fzq4i90zp1g5z","_id":"cjt2yjbbv001lzq4izjfkweko"},{"post_id":"cjt2yjbbl001bzq4izeii8x5n","category_id":"cjt2yjbbq001dzq4if4yk6xn2","_id":"cjt2yjbbw001mzq4ibyrq3mje"},{"post_id":"cjt2yjbbt001hzq4ig5b7b9ye","category_id":"cjt2yjb5y0004zq4il42ivp00","_id":"cjt2yjbbx001pzq4irhdylayv"},{"post_id":"cjt2yjbbv001kzq4ihc0jacie","category_id":"cjt2yjb66000fzq4i90zp1g5z","_id":"cjt2yjbby001rzq4iteuca2c0"},{"post_id":"cjt2yjbbn001czq4isl93htlv","category_id":"cjt2yjbbu001izq4i4xva7mb2","_id":"cjt2yjbby001uzq4irlspr5bb"},{"post_id":"cjt2yjbbs001gzq4ixsjfwmxy","category_id":"cjt2yjbbw001nzq4idexdtfx9","_id":"cjt2yjbby001wzq4ipun5uygs"},{"post_id":"cjt2yjbcu002izq4iy3gcupkx","category_id":"cjt2yjbcv002jzq4ih5scbn7k","_id":"cjt2yjbd0002lzq4io28n80xl"}],"PostTag":[{"post_id":"cjt2yjb5s0000zq4iu868k674","tag_id":"cjt2yjb5z0005zq4inq3bdbw9","_id":"cjt2yjb64000czq4ibsahqzcl"},{"post_id":"cjt2yjb5w0002zq4iq8z5vzh9","tag_id":"cjt2yjb63000bzq4i5fr4cxwy","_id":"cjt2yjb6a000nzq4iipazlbli"},{"post_id":"cjt2yjb5w0002zq4iq8z5vzh9","tag_id":"cjt2yjb66000gzq4i80u80tb1","_id":"cjt2yjb6a000ozq4iepaaz9x4"},{"post_id":"cjt2yjb5w0002zq4iq8z5vzh9","tag_id":"cjt2yjb69000jzq4i4ru5p9q4","_id":"cjt2yjb6a000qzq4i89myozs6"},{"post_id":"cjt2yjb5w0002zq4iq8z5vzh9","tag_id":"cjt2yjb5z0005zq4inq3bdbw9","_id":"cjt2yjb6a000rzq4iwnaihm43"},{"post_id":"cjt2yjb5z0006zq4i366vmxx3","tag_id":"cjt2yjb6a000mzq4ixt8cmkql","_id":"cjt2yjb6b000tzq4idgt7wzlh"},{"post_id":"cjt2yjb5z0006zq4i366vmxx3","tag_id":"cjt2yjb6a000pzq4izlq1c154","_id":"cjt2yjb6b000uzq4isjpuajuf"},{"post_id":"cjt2yjb610008zq4i0511em0q","tag_id":"cjt2yjb5z0005zq4inq3bdbw9","_id":"cjt2yjb6c000yzq4izzd6aee9"},{"post_id":"cjt2yjb610008zq4i0511em0q","tag_id":"cjt2yjb6a000mzq4ixt8cmkql","_id":"cjt2yjb6d000zzq4ihi00nf9s"},{"post_id":"cjt2yjb610008zq4i0511em0q","tag_id":"cjt2yjb66000gzq4i80u80tb1","_id":"cjt2yjb6d0011zq4ir90aitog"},{"post_id":"cjt2yjb610008zq4i0511em0q","tag_id":"cjt2yjb6b000wzq4isqzmy3bf","_id":"cjt2yjb6d0012zq4ikd0jbjje"},{"post_id":"cjt2yjb620009zq4itpqyjzdh","tag_id":"cjt2yjb6b000xzq4ielqtaf69","_id":"cjt2yjb6d0014zq4i0bk95c44"},{"post_id":"cjt2yjb620009zq4itpqyjzdh","tag_id":"cjt2yjb6d0010zq4ifuyw12q4","_id":"cjt2yjb6e0015zq4iutxek5et"},{"post_id":"cjt2yjb64000dzq4iowv70axl","tag_id":"cjt2yjb6d0013zq4iv1p12qb1","_id":"cjt2yjb6e0018zq4iygp1d5ic"},{"post_id":"cjt2yjb64000dzq4iowv70axl","tag_id":"cjt2yjb6e0016zq4irzphnty9","_id":"cjt2yjb6e0019zq4iwb5tgdit"},{"post_id":"cjt2yjb64000dzq4iowv70axl","tag_id":"cjt2yjb6e0017zq4iabyx6mc2","_id":"cjt2yjb6e001azq4i2r68y2qm"},{"post_id":"cjt2yjbbl001bzq4izeii8x5n","tag_id":"cjt2yjb6e0016zq4irzphnty9","_id":"cjt2yjbbx001qzq4iu856ct5j"},{"post_id":"cjt2yjbbl001bzq4izeii8x5n","tag_id":"cjt2yjbbq001ezq4iayymiddh","_id":"cjt2yjbby001szq4i4bkxa0wr"},{"post_id":"cjt2yjbbl001bzq4izeii8x5n","tag_id":"cjt2yjbbu001jzq4i1ahk362l","_id":"cjt2yjbby001vzq4igq897ar5"},{"post_id":"cjt2yjbbn001czq4isl93htlv","tag_id":"cjt2yjbbq001ezq4iayymiddh","_id":"cjt2yjbc0001zzq4izlpdj8rm"},{"post_id":"cjt2yjbbn001czq4isl93htlv","tag_id":"cjt2yjbby001tzq4iunb50qsq","_id":"cjt2yjbc00020zq4iw8ixuow5"},{"post_id":"cjt2yjbbn001czq4isl93htlv","tag_id":"cjt2yjbbz001xzq4iy2xhtof6","_id":"cjt2yjbc10022zq4idzw7el3l"},{"post_id":"cjt2yjbbq001fzq4ik3quozzm","tag_id":"cjt2yjb6a000mzq4ixt8cmkql","_id":"cjt2yjbc20024zq4i6dgo2b9w"},{"post_id":"cjt2yjbbq001fzq4ik3quozzm","tag_id":"cjt2yjbbz001yzq4i5yyrvkbg","_id":"cjt2yjbc20025zq4ih6lfkms6"},{"post_id":"cjt2yjbbq001fzq4ik3quozzm","tag_id":"cjt2yjbc00021zq4i0uyr50qj","_id":"cjt2yjbc20027zq4i9emo0jno"},{"post_id":"cjt2yjbbs001gzq4ixsjfwmxy","tag_id":"cjt2yjbc10023zq4infzapgja","_id":"cjt2yjbc30029zq4iuurq7a17"},{"post_id":"cjt2yjbbs001gzq4ixsjfwmxy","tag_id":"cjt2yjbc20026zq4i3wz8xjcv","_id":"cjt2yjbc3002azq4ize97kqh1"},{"post_id":"cjt2yjbbt001hzq4ig5b7b9ye","tag_id":"cjt2yjb5z0005zq4inq3bdbw9","_id":"cjt2yjbc4002dzq4i7sode92y"},{"post_id":"cjt2yjbbt001hzq4ig5b7b9ye","tag_id":"cjt2yjbc30028zq4itqk9ueds","_id":"cjt2yjbc5002ezq4ihazz6ffv"},{"post_id":"cjt2yjbbt001hzq4ig5b7b9ye","tag_id":"cjt2yjbc3002bzq4izgvd0dhu","_id":"cjt2yjbc5002fzq4i5qmyvt08"},{"post_id":"cjt2yjbbv001kzq4ihc0jacie","tag_id":"cjt2yjbc4002czq4idhihp0tq","_id":"cjt2yjbc6002gzq4izb92t1ve"},{"post_id":"cjt2yjbbv001kzq4ihc0jacie","tag_id":"cjt2yjb6a000pzq4izlq1c154","_id":"cjt2yjbc6002hzq4i97rtl8ut"},{"post_id":"cjt2yjbcu002izq4iy3gcupkx","tag_id":"cjt2yjb6e0016zq4irzphnty9","_id":"cjt2yjbcv002kzq4isxp4uy0l"},{"post_id":"cjt2yjbe2002mzq4is04bmqka","tag_id":"cjt2yjbe3002nzq4ihqer0bw9","_id":"cjt2yjbe3002ozq4in6pj8ps4"}],"Tag":[{"name":"量子力学","_id":"cjt2yjb5z0005zq4inq3bdbw9"},{"name":"氢原子","_id":"cjt2yjb63000bzq4i5fr4cxwy"},{"name":"薛定谔方程","_id":"cjt2yjb66000gzq4i80u80tb1"},{"name":"波尔半径","_id":"cjt2yjb69000jzq4i4ru5p9q4"},{"name":"物理学","_id":"cjt2yjb6a000mzq4ixt8cmkql"},{"name":"振动","_id":"cjt2yjb6a000pzq4izlq1c154"},{"name":"定态","_id":"cjt2yjb6b000wzq4isqzmy3bf"},{"name":"cpp","_id":"cjt2yjb6b000xzq4ielqtaf69"},{"name":"travis-ci","_id":"cjt2yjb6d0010zq4ifuyw12q4"},{"name":"Linear Algebra","_id":"cjt2yjb6d0013zq4iv1p12qb1"},{"name":"VASP","_id":"cjt2yjb6e0016zq4irzphnty9"},{"name":"OUTCAR","_id":"cjt2yjb6e0017zq4iabyx6mc2"},{"name":"C++","_id":"cjt2yjbbq001ezq4iayymiddh"},{"name":"WAVECAR","_id":"cjt2yjbbu001jzq4i1ahk362l"},{"name":"PAT","_id":"cjt2yjbby001tzq4iunb50qsq"},{"name":"排序","_id":"cjt2yjbbz001xzq4iy2xhtof6"},{"name":"经典力学","_id":"cjt2yjbbz001yzq4i5yyrvkbg"},{"name":"科里奥利力","_id":"cjt2yjbc00021zq4i0uyr50qj"},{"name":"物理化学","_id":"cjt2yjbc10023zq4infzapgja"},{"name":"化学","_id":"cjt2yjbc20026zq4i3wz8xjcv"},{"name":"线性代数","_id":"cjt2yjbc30028zq4itqk9ueds"},{"name":"数学基础","_id":"cjt2yjbc3002bzq4izgvd0dhu"},{"name":"物理","_id":"cjt2yjbc4002czq4idhihp0tq"},{"name":"First Principle Calculation","_id":"cjt2yjbe3002nzq4ihqer0bw9"}]}}